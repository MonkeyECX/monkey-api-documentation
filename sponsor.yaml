---
openapi: "3.0.1"
info:
  title: "Monkey API"
  version: "1.0"
servers:
- url: "https://hmg-zuul.monkeyecx.com"
  description: "Staging Server"
- url: "https://zuul.monkey.exchange"
  description: "Production Server"
paths:
  /v2/sponsors/{id}/configurations:
    get:
      tags:
      - "Settings"
      summary: "Detail"
      description: ""
      operationId: "sponsorconfigurationweb/FindOneSponsorConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorConfiguration"
              example:
                schedulePurchase: "true"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "PUT"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
    put:
      tags:
      - "Settings"
      summary: "Update"
      description: ""
      operationId: "sponsorconfigurationweb/UpdateSponsorConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sponsorSponsorConfiguration"
            example:
              schedulePurchase: true
        required: true
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorConfiguration"
              example:
                schedulePurchase: "true"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "PUT"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
    post:
      tags:
      - "Settings"
      summary: "Configure"
      description: ""
      operationId: "sponsorconfigurationweb/CreateSponsorConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sponsorSponsorConfiguration"
            example:
              schedulePurchase: true
        required: true
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorConfiguration"
              example:
                schedulePurchase: "true"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sponsors/10/configurations"
                    type: "PUT"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/suppliers:
    post:
      tags:
      - "Suppliers"
      summary: "Upload"
      description: ""
      operationId: "upload"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - "file"
              type: "object"
              properties:
                file:
                  type: "string"
                  format: "binary"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelProcessLinkResponse"
  /v2/sponsors/{sponsorId}/buyers/{buyerId}/agreements:
    get:
      tags:
      - "Investor Agreement Documents"
      summary: "List"
      description: ""
      operationId: "sponsorbuyeragreementweb/FindAllAgreementsContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorSpecificationSponsorBuyerAgreement"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorPageable"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorPagedModelEntityModelSponsorBuyerAgreement"
              example:
                _embedded:
                  agreements:
                  - createdAt: "2008-11-09T16:36:49.364+0000"
                    createUserId: "test@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "test@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    id: "a7sW83nc10"
                    fileName: "teste.pdf"
                    _links:
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sponsors/10/buyers/20/agreements/a7sW83nc10"
                        type: "DELETE"
                      download:
                        href: "http://localhost/v2/sponsors/10/buyers/20/agreements/file?filename=teste.pdf"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/sponsors/10/buyers/20"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/buyers/20/agreements?page=0&size=20"
                page:
                  size: 10
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Investor Agreement Documents"
      summary: "Upload"
      description: ""
      operationId: "sponsorbuyeragreementweb/UploadAgreementContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "document"
              type: "object"
              properties:
                document:
                  type: "string"
                  format: "binary"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyerAgreement"
              example:
                createdAt: "2022-03-29T16:36:49.364+0000"
                createUserId: "test@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-03-30T16:36:49.364+0000"
                lastUserId: "test@monkey.exchange"
                lastUserIp: "127.0.0.1"
                id: "a7sW83nc10"
                fileName: "teste.pdf"
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  delete:
                    href: "http://localhost/v2/sponsors/10/buyers/20/agreements/a7sW83nc10"
                    type: "DELETE"
                  download:
                    href: "http://localhost/v2/sponsors/10/buyers/20/agreements/file?filename=teste.pdf"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/sponsors/10/buyers/20"
                    type: "GET"
  /v2/sponsors/{id}/buyers/{buyerId}/unapprove:
    post:
      tags:
      - "Investors"
      summary: "Disapprove"
      description: ""
      operationId: "sponsorbuyerweb/UnapproveBuyerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyer"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                status: "UNAPPROVED"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/buyers/54"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/sponsors/10/buyers/54/approve"
                    type: "POST"
                  messages:
                    href: "http://localhost/v1/sponsors/08668470000130/buyers/50851124000159/messages"
                    type: "GET"
  /v2/sponsors/{id}/buyers/{buyerId}/approve:
    post:
      tags:
      - "Investors"
      summary: "Approve"
      description: ""
      operationId: "sponsorbuyerweb/ApproveBuyerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyer"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                status: "APPROVED"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/buyers/54"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  unapprove:
                    href: "http://localhost/v2/sponsors/10/buyers/54/unapprove"
                    type: "POST"
                  messages:
                    href: "http://localhost/v1/sponsors/08668470000130/buyers/50851124000159/messages"
                    type: "GET"
  /v2/sponsors/{id}/bank-accounts:
    get:
      tags:
      - "Bank Details"
      summary: "List"
      description: ""
      operationId: "bankaccountweb/FindAllBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorSpecificationBankAccount"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorPageable"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorPagedModelEntityModelBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "Conta buyer 10"
                    bank: "033"
                    bankName: "Santander"
                    agency: "3333"
                    account: "66666666"
                    accountDigit: "6"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                        type: "DELETE"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/bank-accounts?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Bank Details"
      summary: "Create"
      description: ""
      operationId: "bankaccountweb/CreateBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sponsorBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
        required: true
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                    type: "GET"
                  delete:
                    href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                    type: "DELETE"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/buyers/{buyerId}/agreements/file:
    get:
      tags:
      - "Investor Agreement Documents"
      summary: "Download"
      description: ""
      operationId: "DownloadAgreementFile"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "filename"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
                format: "binary"
  /v2/sponsors/{id}/processes/{type}/{processId}:
    get:
      tags:
      - "Processes"
      summary: "Process"
      description: ""
      operationId: "processweb/findOneProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelProcess"
              example:
                type: "SUPPLIER_UPLOAD"
                status: "PROCESSING"
                step: "15"
                steps: "20"
                createdAt: "2012-04-23T18:25:43.511Z"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2012-04-23T18:25:43.511Z"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/processes/supplier/ouL1BKaAmh"
                    type: "GET"
                  steps:
                    href: "http://localhost/v2/sponsors/10/processes/supplier/ouL1BKaAmh/steps"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/processes/{type}/{processId}/steps:
    get:
      tags:
      - "Processes"
      summary: "Steps"
      description: ""
      operationId: "processstepweb/findAllProcessStepContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorPageable"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorPagedModelEntityModelProcessStep"
              example:
                _embedded:
                  steps:
                  - status: "COMPLETED"
                    relationId: "39561533000188"
                    detail: ""
                    createdAt: "2012-04-23T18:25:43.511Z"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2012-04-23T18:25:43.511Z"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      process:
                        href: "http://localhost/v2/sponsors/10/processes/supplier/ouL1BKaAmh"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/39561533000188"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/processes/supplier/ouL1BKaAmh/steps?page=0&size=20"
                page:
                  size: 10
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/buyers:
    get:
      tags:
      - "Investors"
      summary: "List"
      description: ""
      operationId: "sponsorbuyerweb/FindAllBuyersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorSpecificationSponsorBuyer"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sponsorPageable"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorPagedModelEntityModelSponsorBuyer"
              example:
                _embedded:
                  buyers:
                  - createdAt: "2008-11-09T16:36:49.364+0000"
                    createUserId: "guilherme@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "guilherme@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    name: "Guilherme Company"
                    governmentId: "50851124000159"
                    status: "APPROVED"
                    _links:
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      self:
                        href: "http://localhost/v2/sponsors/10/buyers/54"
                        type: "GET"
                      agreements:
                        href: "http://localhost/v2/sponsors/10/buyers/54/agreements"
                        type: "GET"
                      unapprove:
                        href: "http://localhost/v2/sponsors/10/buyers/54/unapprove"
                        type: "POST"
                      messages:
                        href: "http://localhost/v1/sponsors/08668470000130/buyers/50851124000159/messages"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/buyers?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/buyers/{buyerId}:
    get:
      tags:
      - "Investors"
      summary: "Detail"
      description: ""
      operationId: "sponsorbuyerweb/FindOneSponsorBuyerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyer"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                status: "APPROVED"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/buyers/54"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  unapprove:
                    href: "http://localhost/v2/sponsors/10/buyers/54/unapprove"
                    type: "POST"
                  messages:
                    href: "http://localhost/v1/sponsors/08668470000130/buyers/50851124000159/messages"
                    type: "GET"
  /v2/sponsors/{id}/bank-accounts/{bankAccountId}:
    get:
      tags:
      - "Bank Details"
      summary: "Detail"
      description: ""
      operationId: "bankaccountweb/FindOneBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sponsorEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                    type: "GET"
                  delete:
                    href: "http://localhost/v2/sponsors/10/bank-accounts/ouL1BKaAmh"
                    type: "DELETE"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
    delete:
      tags:
      - "Bank Details"
      summary: "Delete"
      description: ""
      operationId: "bankaccountweb/DeleteBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        204:
          description: "No Content"
  /v2/sponsors/{sponsorId}/buyers/{buyerId}/agreements/{id}:
    delete:
      tags:
      - "Investor Agreement Documents"
      summary: "Delete"
      description: ""
      operationId: "sponsorbuyeragreementweb/DeleteAgreementContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sponsorMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/payables:
    post:
      tags:
      - "Invoices"
      summary: "Upload"
      description: ""
      operationId: "payableweb/UploadPayableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payableLoaderV2PayableRequest"
            example:
              items:
              - externalId: "2082702"
                paymentDate: 1603219465000
                paymentValue: 1000.0
                supplierName: "Fornecedor PJ Testes"
                supplierGovernmentId: "96216507000156"
                invoiceNumber: "2082702"
                invoiceDate: 1597949065000
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payableLoaderV2EntityModelPayableResponse"
              example:
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/13"
                    type: "GET"
                  payables:
                    href: "http://localhost/v2/sponsors/13/payables"
                    type: "GET"
    get:
      tags:
      - "Invoices"
      summary: "List"
      description: ""
      operationId: "payableweb/FindAllPayableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationInvoice"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelPayableDTO"
              example:
                _embedded:
                  payables:
                  - paymentDate: "2019-06-28"
                    createdAt: "2019-06-28"
                    paymentValue: "1222.23"
                    sponsorId: "53"
                    supplierGovernmentId: "10701734000151"
                    invoiceNumber: "54564654564"
                    installment: "1"
                    realPaymentDate: "2019-06-28"
                    purchasedTax: "1.00"
                    buyerName: "BEST PACK BRASIL EMBALAGENS DE"
                    buyerGovernmentId: "85832381000128"
                    buyerReceivementBank: "756"
                    buyerReceivementAgency: "123"
                    buyerReceivementAccount: "456"
                    buyerReceivementAccountDigit: "0"
                    externalId: "zbc9"
                    status: "ACTIVE"
                    invoiceDate: "2019-09-22T03:00:00.000+0000"
                    invoiceKey: "5645645D4SA6D4AS65D4SA"
                    totalInstallment: "10"
                    governmentId: "61074829000808"
                    companyName: "ABB"
                    supplierName: "BEST PACK BRASIL EMBALAGENS DE"
                    sponsorTax: "0.10"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2019-09-22T03:00:00.000+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    sellerReceivementValue: "1000.23"
                    sponsorReceivementValue: "10.23"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/payables/ORga1sHd6S"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/10701734000151"
                      documents:
                        href: "http://localhost/v2/sponsors/10/signatures/ORga1sHd6S/documents{?type}"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payables?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    delete:
      tags:
      - "Invoices"
      summary: "Delete All"
      description: ""
      operationId: "payableweb/DeleteAllPayablesContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelInvoiceDeleteStartedDTO"
              example:
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sponsors/10/processes/I4Zew4hUch"
                    type: "GET"
  /v2/sponsors/{sponsorId}/payable-loader-processes:
    get:
      tags:
      - "Invoice Upload Process"
      summary: "List"
      description: ""
      operationId: "processweb/FindAllProcessContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/payableLoaderV2SpecificationProcess"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/payableLoaderV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payableLoaderV2PagedModelEntityModelProcess"
              example:
                _embedded:
                  processes:
                  - processed: "true"
                    type: "UPLOADING_PAYABLE"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2"
                        type: "GET"
                      errors:
                        href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2/errors"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payable-loader-processes?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{sponsorId}/payable-loader-processes/{processId}:
    get:
      tags:
      - "Invoice Upload Process"
      summary: "Detail"
      description: ""
      operationId: "processweb/FindOneProcessContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payableLoaderV2EntityModelProcess"
              example:
                processed: "true"
                type: "UPLOADING_PAYABLE"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2"
                    type: "GET"
                  errors:
                    href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2/errors"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/payable-loader-processes/{processId}/errors:
    get:
      tags:
      - "Invoice Upload Process Errors"
      summary: "List By Process"
      description: ""
      operationId: "processweb/FindAllProcessErrorDetailContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/payableLoaderV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payableLoaderV2PagedModelEntityModelProcessErrorDetail"
              example:
                _embedded:
                  errors:
                  - detail: "1G3193238591137 - Título já existente em nosso sistema"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      process:
                        href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2/errors?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{sponsorId}/payable-errors:
    get:
      tags:
      - "Invoice Upload Process Errors"
      summary: "List"
      description: ""
      operationId: "processweb/FindAllPayableErrorsContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/payableLoaderV2SpecificationProcessErrorDetail"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/payableLoaderV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/payableLoaderV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payableLoaderV2PagedModelEntityModelProcessErrorDetail"
              example:
                _embedded:
                  errors:
                  - detail: "Título 000179678-1 já existente em nosso sistema"
                    invoiceNumber: "000179678-1"
                    externalId: "23050823712022001R10"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      process:
                        href: "http://localhost/v2/sponsors/10/payable-loader-processes/BKtJj2rPe2"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payable-errors?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/signatures/{purchaseId}/unapprove:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Disapprove"
      description: ""
      operationId: "sponsorweb/SponsorSignatureUnapprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/documents{?type}"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
  /v2/sponsors/{id}/signatures/{purchaseId}/approve:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Approve"
      description: ""
      operationId: "sponsorweb/SponsorSignatureApprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/documents{?type}"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
  /v2/sponsors/{id}/signatures:
    get:
      tags:
      - "Documents and Signatures"
      summary: "List"
      description: ""
      operationId: "sponsorweb/SponsorSignatureList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "status"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "WAITING"
      - name: "startDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "endDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "sellerFilter"
        in: "query"
        required: false
        schema:
          type: "string"
          default: ""
      - name: "page"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 0
      - name: "size"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 20
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signPagedModelSignature"
              example:
                _embedded:
                  signatures:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    sponsorName: "GERDAU ACOS LONGOS S.A."
                    sponsorGovernmentId: "07358761000169"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    buyerName: "BNP"
                    buyerGovernmentId: "45646546545646"
                    reportCode: "10/00001"
                    amount: "160110.75"
                    sponsorSignatureStatus: "NOT_REQUIRED"
                    sellerSignatureStatus: "APPROVED"
                    buyerSignatureStatus: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S"
                        type: "GET"
                      documents:
                        href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/documents{?type}"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/unapprove"
                        type: "POST"
                      sponsor:
                        href: "http://localhost/v2/sponsors/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/signatures?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/signatures/{purchaseId}:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Detail"
      description: ""
      operationId: "sponsorweb/SponsorSignatureFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sponsors/95/signatures/ORga1sHd6S/documents{?type}"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
  /v2/sponsors/{id}/signatures/{purchaseId}/documents:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Download Terms"
      description: ""
      operationId: "SponsorSignatureDocuments"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "notification"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sponsors/{sponsorId}/dashboards:
    get:
      tags:
      - "Dashboards"
      summary: "Dashboard"
      description: ""
      operationId: "sponsor/GETSponsorDashboard.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelSponsorDashboardResource"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/dashboards"
                    type: "GET"
                  program-summary:
                    href: "http://localhost/v2/sponsors/10/dashboards/program-summaries{?period}"
                    type: "GET"
                    templated: true
                  daily-operation-summary:
                    href: "http://localhost/v2/sponsors/10/dashboards/daily-operation-summaries"
                    type: "GET"
                  purchase-evolution:
                    href: "http://localhost/v2/sponsors/10/dashboards/purchase-evolutions"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/dashboards/purchase-evolutions:
    get:
      tags:
      - "Dashboards"
      summary: "List Volume Discount Evolution"
      description: ""
      operationId: "sponsor/GETSponsorPurchaseEvolutionDashboard.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardCollectionModelOperationEvolution"
              example:
                _embedded:
                  purchase-evolutions:
                  - date: "2020-01-01T16:36:49.364+0000"
                    total: "47"
                    totalAmount: "10.00"
                  - date: "2020-02-01T16:36:49.364+0000"
                    total: "456"
                    totalAmount: "2340.00"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/dashboards/purchase-evolutions"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/sponsors/10/dashboards"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/dashboards/purchase-distributions:
    get:
      tags:
      - "Dashboards"
      summary: "List Volume by Buyers"
      description: ""
      operationId: "sponsor/GETSponsorPurchaseDistributionDashboard.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardCollectionModelOperationDistribution"
              example:
                _embedded:
                  purchase-distributions:
                  - buyerName: "JALLES MACHADO S.A"
                    buyerGovernmentId: "02635522000195"
                    buyerId: "540897447"
                    amount: "3162972.69"
                    total: "47"
                  - buyerName: "BANCO CREDIT AGRICOLE BRASIL S.A."
                    buyerGovernmentId: "75647891000171"
                    buyerId: "540897448"
                    amount: "62972.69"
                    total: "25"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/dashboards/purchase-distributions"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/sponsors/10/dashboards"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/dashboards/program-summaries:
    get:
      tags:
      - "Dashboards"
      summary: "List Overview Information"
      description: ""
      operationId: "sponsor/GETSponsorProgramSummaryDashboard.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "period"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "ALL"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelProgramSummaryDashboard"
              example:
                amount: "310305.05"
                operations: "47"
                operationItems: "2787"
                averageTax: "1.7553191"
                averageDuration: "51.383"
                sellers: "390"
                activeSellers: "387"
                approvedSuppliers: "387"
                unapprovedSuppliers: "20"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/dashboards/program-summaries?period=ALL"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/sponsors/10/dashboards"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/dashboards/daily-operation-summaries:
    get:
      tags:
      - "Dashboards"
      summary: "List Daily Summary Information"
      description: ""
      operationId: "sponsor/GETSponsorOperationDailySummaryDashboard.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelDailyOperationSummaryDashboard"
              example:
                amount: "4310305.05"
                items: "479"
                amountOffered: "10305.05"
                itemsOffered: "8"
                amountPurchased: "50305.05"
                amountRefused: "50305.05"
                itemsPurchased: "145"
                operations: "47"
                averageTax: "1.7553191"
                averageDuration: "51.383"
                sellersWithPurchases: "390"
                operationsRefused: "2"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/dashboards/daily-operation-summaries"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/sponsors/10/dashboards"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/subscriptions:
    get:
      tags:
      - "Email Subscription Settings"
      summary: "List"
      description: ""
      operationId: "sponsorsubscription/FindOneSponsorSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "true"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/subscriptions"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
    put:
      tags:
      - "Email Subscription Settings"
      summary: "Update"
      description: ""
      operationId: "sponsorsubscription/UpdateSponsorSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rdStationSubscription"
            example:
              account: false
              payable: false
              profile: true
              transactional: false
              information: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "false"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/subscriptions"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/program-adhesion-terms/{uuid}/remind:
    post:
      tags:
      - "Program Adhesion Term"
      summary: "Resend Adhesion Term Email"
      description: ""
      operationId: "sponsorprogramadhesiontermweb/AdhesionTermRemindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/program-adhesion-terms:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "List Adhesion Terms"
      description: ""
      operationId: "sponsorprogramadhesiontermweb/AdhesionTermList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignSpecificationSponsorProgramAdhesionTerm"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignPagedModelEntityModelSponsorProgramAdhesionTerm"
              example:
                _embedded:
                  program-adhesion-terms:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    sponsorName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sponsorGovernmentId: "02060306000169"
                    status: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S"
                        type: "GET"
                      file:
                        href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S/file?type=COMBINED"
                        type: "GET"
                      signers:
                        href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S/signers"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/program-adhesion-terms/{uuid}:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "Find Adhesion Term"
      description: ""
      operationId: "sponsorprogramadhesiontermweb/AdhesionTermFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelSponsorProgramAdhesionTerm"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sponsorGovernmentId: "02060306000169"
                status: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S"
                    type: "GET"
                  signers:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S/signers"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
                  remind:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S/remind"
                    type: "POST"
  /v2/sponsors/{id}/program-adhesion-terms/{uuid}/signers:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "List Adhesion Term Signers"
      description: ""
      operationId: "sponsorprogramadhesiontermweb/AdhesionTermSigners.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignCollectionModelDocumentSigner"
              example:
                _embedded:
                  signers:
                  - email: "felipe@monkey.exchange"
                    name: "Felipe Adorno"
                    status: "DELIVERED"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S/signers"
                  program-adhesion-term:
                    href: "http://localhost/v2/sponsors/95/program-adhesion-terms/ORga1sHd6S"
  /v2/sponsors/{id}/program-adhesion-terms/{uuid}/file:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "Download Adhesion Term"
      description: ""
      operationId: "ProgramAdhesionTermDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "combined"
          enum:
          - "COMBINED"
          - "CERTIFICATE"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sponsors/{id}/events:
    get:
      tags:
      - "Event History"
      summary: "List"
      description: ""
      operationId: "sponsorauditingeventweb/FindAllAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosSpecificationAuditingEvent"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosPagedModelEntityModelAuditingEvent"
              example:
                _embedded:
                  events:
                  - createdAt: "2009-11-09T16:36:49.364+0000"
                    user: "monkey_tester@monkey.com"
                    userIp: "10.0.0.1"
                    traceId: "756"
                    type: "Conta Bancária Deletada"
                    details:
                    - label: "CNPJ"
                      value: "42641777000185"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/events/a331a1f0-37bc-4c68-bde2-c9a940a9068d"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/events?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/events/{eventId}:
    get:
      tags:
      - "Event History"
      summary: "Find an Event by ID"
      description: ""
      operationId: "sponsorauditingeventweb/FindOneAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                user: "monkey_tester@monkey.com"
                userIp: "10.0.0.1"
                traceId: "756"
                type: "Conta Bancária Deletada"
                details:
                - label: "CNPJ"
                  value: "42641777000185"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/events/{eventId}/details/{receivedEventId}:
    get:
      tags:
      - "Event History"
      summary: "Detail"
      description: ""
      operationId: "sponsorauditingeventweb/FindOneAuditingEventDetailContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "receivedEventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEventDetailResource"
              example:
                detail:
                  companyId: 569083186
                  companyType: "SPONSOR"
                  program: "monkey"
                  signers:
                  - email: "jose@monkey.exchange"
                    name: "José"
                    governmentId: "08317139689"
                  - email: "carlos@monkey.exchange"
                    name: "Carlos"
                    governmentId: "08317139689"
                  storedEventId: "fd1091aa-5113-4364-87e5-047fcef40c57"
                  relationId: "monkey"
                  eventType: "ProgramAdhesionTermConfigurationUpdatedEvent"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e/details/fd1091aa-5113-4364-87e5-047fcef40c57"
                    type: "GET"
                  event:
                    href: "http://localhost/v2/sponsors/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/liquidations:
    post:
      tags:
      - "Payments"
      summary: "Confirm Payment For A Purchase"
      description: ""
      operationId: "sponsorliquidation/SponsorLiquidationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/integrationV2Liquidation"
            example:
              items:
              - liquidationDate: "2019-02-15"
                liquidationValue: 99375.05
                externalId: "3fBUjV4yAs"
                invoiceNumber: "55bUjV499a"
                settlementType: "BILL"
                supplierGovernmentId: "05890359000103"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/integrationV2Liquidation"
              example:
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/sponsors/10/liquidations"
                    type: "POST"
  /v2/sponsors/{sponsorId}/response-files:
    get:
      tags:
      - "Integration Files"
      summary: "List"
      description: ""
      operationId: "sponsordefaultfileweb/FindAllSponsorDefaultFileContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "page"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/integrationV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/integrationV2PagedResourcesSponsorDefaultFile"
              example:
                _embedded:
                  response-files:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    fileName: "17227422000105070819121238639.csv"
                    _links:
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      file:
                        href: "http://localhost/v2/sponsors/10/response-files/OB4r9lUc4A/file"
                        type: "GET"
                      self:
                        href: "http://localhost/v2/sponsors/10/response-files/OB4r9lUc4A"
                        type: "GET"
                    lastUserIp: "127.0.0.1"
                    createUserIp: "127.0.0.1"
                    lastUserId: "felipe@monkey.exchange"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/response-files?page=0&size=20"
                page:
                  number: 0
                  size: 20
                  totalPages: 1
                  totalElements: 1
  /v2/sponsors/{sponsorId}/response-files/{id}:
    get:
      tags:
      - "Integration Files"
      summary: "Detail"
      description: ""
      operationId: "sponsordefaultfileweb/FindOneSponsorDefaultFileContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/integrationV2SponsorDefaultFile"
              example:
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                fileName: "17227422000105070819121238639.csv"
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sponsors/10/response-files/OB4r9lUc4A/file"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/sponsors/10/response-files/OB4r9lUc4A"
                    type: "GET"
                lastUserIp: "127.0.0.1"
                createUserIp: "127.0.0.1"
                lastUserId: "felipe@monkey.exchange"
                updatedAt: "2018-11-09T16:36:49.364+0000"
  /v2/sponsors/{sponsorId}/response-files/{id}/file:
    get:
      tags:
      - "Integration Files"
      summary: "Download"
      description: ""
      operationId: "SponsorDefaultFileDownload"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v1/sponsors/{sponsorId}/users/{username}:
    get:
      tags:
      - "Users"
      summary: "Find User"
      description: ""
      operationId: "sellerweb/SellerFindOne.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    put:
      tags:
      - "Users"
      summary: "Change Access Level"
      description: ""
      operationId: "sellerweb/SellerUpdate.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoSponsorRoleResource"
            example:
              role: "VIEW"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    delete:
      tags:
      - "Users"
      summary: "Remove User Access"
      description: ""
      operationId: "sellerweb/SellerDelete.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        204:
          description: "No Content"
  /v1/sponsors/{sponsorId}/users:
    get:
      tags:
      - "Users"
      summary: "List Users"
      description: ""
      operationId: "sellerweb/SellerFindAll.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoSpecificationUserCompany"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoPagedModelEntityModelUserCompany"
              example:
                _embedded:
                  profiles:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    role: "ADMIN"
                    status: "ACTIVE"
                    companyId: "1614639283"
                    governmentId: "71537251000158"
                    name: "Felipe Teste Assinatura"
                    type: "SELLER"
                    adhesionTerm: "false"
                    program: "jallesmachado"
                    username: "felipe@monkey.exchange"
                    _links:
                      self:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "GET"
                      delete:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "DELETE"
                      update:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "PUT"
                      seller:
                        href: "http://localhost/v2/sellers/123"
                        type: "GET"
                      me:
                        href: "http://localhost/me"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Users"
      summary: "Grant User Access"
      description: ""
      operationId: "sellerweb/SellerCreate.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoSponsorCompanyResource"
            example:
              email: "sponsorjallesmachado2@gmail.com"
              role: "ADMIN"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
  /v2/sponsors/{id}/suppliers:
    get:
      tags:
      - "Suppliers"
      summary: "List Suppliers"
      description: ""
      operationId: "supplierweb/FindAllSupplierContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationSupplier"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelSupplierDTO"
              example:
                _embedded:
                  suppliers:
                  - createdAt: "2012-04-23T18:25:43.511Z"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2012-04-23T18:25:43.511Z"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    supplierGovernmentId: "45646546545646"
                    allowed: "true"
                    allowedValue: "2.2"
                    supplierName: "GERDAU"
                    sponsorTax: "2.2"
                    automatedOffer: "false"
                    sellerLastUpdatedAt: "2012-04-23T18:25:43.511Z"
                    adhesionTermStatus: "WAITING"
                    amendmentsStatus: "WAITING"
                    sponsorCanOffer: "false"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/suppliers/45646546545646"
                        type: "GET"
                      supplier-update:
                        href: "http://localhost/v2/sponsors/10/suppliers/45646546545646"
                        type: "PUT"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sponsors/10/sellers/45646546545646"
                        type: "GET"
                      adhesion-terms:
                        href: "http://localhost/v2/sponsors/10/sellers/45646546545646/adhesion-terms"
                        type: "GET"
                      program-amendments:
                        href: "http://localhost/v2/sponsors/10/sellers/45646546545646/program-amendments"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/suppliers?page=0&size=20"
                  disable:
                    href: "http://localhost/v2/sponsors/10/suppliers/disable"
                    type: "POST"
                  enable:
                    href: "http://localhost/v2/sponsors/10/suppliers/enable"
                    type: "POST"
                  update:
                    href: "http://localhost/v2/sponsors/10/suppliers"
                    type: "PUT"
                  upload:
                    href: "http://localhost/v2/sponsors/10/suppliers"
                    type: "POST"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    put:
      tags:
      - "Suppliers"
      summary: "Update All Rebate Rates"
      description: ""
      operationId: "supplierweb/UpdateSponsorTax.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationSponsorTaxRequest"
            example:
              sponsorTax: 1.15
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/suppliers/{governmentId}:
    get:
      tags:
      - "Suppliers"
      summary: "Search Supplier"
      description: ""
      operationId: "supplierweb/FindOneSupplierContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSupplierDTO"
              example:
                createdAt: "2012-04-23T18:25:43.511Z"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2012-04-23T18:25:43.511Z"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                supplierGovernmentId: "45646546545646"
                allowed: "true"
                allowedValue: "2.2"
                supplierName: "GERDAU"
                sponsorTax: "2.2"
                automatedOffer: "false"
                sellerLastUpdatedAt: "2012-04-23T18:25:43.511Z"
                adhesionTermStatus: "WAITING"
                amendmentsStatus: "WAITING"
                sponsorCanOffer: "false"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/suppliers/45646546545646"
                    type: "GET"
                  supplier-update:
                    href: "http://localhost/v2/sponsors/10/suppliers/45646546545646"
                    type: "PUT"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sponsors/10/sellers/45646546545646"
                    type: "GET"
                  adhesion-terms:
                    href: "http://localhost/v2/sponsors/10/sellers/45646546545646/adhesion-terms"
                    type: "GET"
                  program-amendments:
                    href: "http://localhost/v2/sponsors/10/sellers/45646546545646/program-amendments"
                    type: "GET"
    put:
      tags:
      - "Suppliers"
      summary: "Change Supplier Settings"
      description: ""
      operationId: "supplierweb/UpdateSupplierContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationSupplierRequest"
            example:
              supplierName: "SUPPLIER TEST"
              allowed: true
              allowedValue: 90
              automatedOffer: "true"
              sponsorTax: 0.22
              sponsorCanOffer: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        204:
          description: "No Content"
  /v2/sponsors/{id}/suppliers/{governmentId}/bank-accounts:
    get:
      tags:
      - "Suppliers"
      summary: "List Bank Accounts"
      description: ""
      operationId: "supplierbankaccountweb/findAllBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelSponsorSupplierBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "Conta buyer 10"
                    bank: "033"
                    bankName: "Santander"
                    agency: "3333"
                    account: "66666666"
                    accountDigit: "6"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts/w3cnidgf3b"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts/w3cnidgf3b"
                        type: "DELETE"
                      sponsor:
                        href: "http://localhost/v2/sponsors/20"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/20/suppliers/25628265000160"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts?page=0&size=20"
                  create:
                    href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts"
                    type: "POST"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Suppliers"
      summary: "Add Bank Account"
      description: ""
      operationId: "supplierbankaccountweb/createBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationSponsorSupplierBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/suppliers/enable:
    post:
      tags:
      - "Suppliers"
      summary: "Unblock All Suppliers"
      description: ""
      operationId: "supplierweb/UnblockAllSuppliersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/suppliers/disable:
    post:
      tags:
      - "Suppliers"
      summary: "Block All Suppliers"
      description: ""
      operationId: "supplierweb/BlockAllSuppliersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/sellers/{governmentId}/bank-accounts:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "List Bank Accounts"
      description: ""
      operationId: "sellerbankaccountweb/findAllBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationSellerBankAccount"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelSellerBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "Conta buyer 10"
                    bank: "033"
                    bankName: "Santander"
                    agency: "3333"
                    account: "66666666"
                    accountDigit: "6"
                    main: "true"
                    status: "CREATED_BY_SELLER"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99/unapprove"
                        type: "POST"
                      seller:
                        href: "http://localhost/v2/sponsors/20/sellers/25628265000160"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/20"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/20/suppliers/25628265000160"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts?page=0&size=20"
                  create:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts"
                    type: "POST"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Supplier Registration Details"
      summary: "Add Bank Account"
      description: ""
      operationId: "sellerbankaccountweb/createBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationSellerBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/sellers/{governmentId}/bank-accounts/{bankAccountId}/unapprove:
    post:
      tags:
      - "Supplier Registration Details"
      summary: "Unapprove Bank Account"
      description: ""
      operationId: "sellerbankaccountweb/unapproveBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/sellers/{governmentId}/bank-accounts/{bankAccountId}/approve:
    post:
      tags:
      - "Supplier Registration Details"
      summary: "Approve Bank Account"
      description: ""
      operationId: "sellerbankaccountweb/approveBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/operations:
    get:
      tags:
      - "Batch Anticipation"
      summary: "List Operation History"
      description: ""
      operationId: "sponsoroperationweb/FindAllSponsorOperationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationSponsorOperation"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelSponsorOperation"
              example:
                _embedded:
                  operations:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    status: "PROCESSED"
                    amount: "33375.09"
                    quantity: "76"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc"
                        type: "GET"
                      items:
                        href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc/items"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/operations?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Batch Anticipation"
      summary: "Register Operation"
      description: ""
      operationId: "sponsoroperationweb/CreateSponsorOperationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationSponsorOperationCreatorDTO"
            example:
              sellers:
              - "48027699000100"
              - "29035900000156"
              buyers:
              - "01522368000182"
              - "72373266000190"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSponsorOperation"
              example:
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                status: "PROCESSED"
                amount: "33375.09"
                quantity: "76"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc/items"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{sponsorId}/sellers/{governmentId}:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "Detail Supplier Registration Information"
      description: ""
      operationId: "sellerweb/GetSellerByIdContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSeller"
              example:
                name: "Felipe Company"
                governmentId: "50851124000159"
                companyName: "FEL"
                fantasyName: "Felipe Company Fantasy"
                foundationDate: "1977-11-09T16:36:49.364+0000"
                mainPhone: "551134443434"
                phone: "4324324324234"
                alternativePhone: "5511322323444"
                address: "Rua Poetisa Colombina"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "São Paulo"
                state: "SP"
                country: "Brazil"
                zipCode: "05623030"
                activityCode: "1234-5/67"
                legalNature: "LTDA."
                legalResponsibles:
                - name: "Felipe Adorno"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  birthdayDate: "2000-05-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123456780"
                  phone: "551134443434"
                  email: "felipe@monkey.exchange"
                  sign: "true"
                  financialAuthority: "true"
                  financialAuthorityValue: "10000"
                  createdAt: "2000-11-09T16:36:49.364+0000"
                  createUserId: "felipe@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2000-04-09T16:36:49.364+0000"
                  lastUserId: "felipe@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                createdAt: "2000-01-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-02-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/sellers/50851124000159"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sponsors/10/sellers/50851124000159/documents"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/10/suppliers/50851124000159"
                    type: "GET"
                  adhesion-terms:
                    href: "http://localhost/v2/sponsors/10/sellers/50851124000159/adhesion-terms"
                    type: "GET"
  /v2/sponsors/{sponsorId}/sellers/{governmentId}/documents:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "Download Supplier Documentation"
      description: ""
      operationId: "SponsorSellerDocuments"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sponsors/{sponsorId}/markets:
    get:
      tags:
      - "Market Status"
      summary: "Market Operation Hours"
      description: ""
      operationId: "sponsormarketweb/GETMarketTradingHoursContract.json"
      parameters:
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelMarket"
              example:
                today: "2019-11-28"
                marketStatus: "OPEN"
                lastWorkingDay: "2019-11-28"
                nextWorkingDay: "2019-11-28"
                openMarketHour: "9"
                closedMarketHour: "18"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/markets"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/suppliers/{governmentId}/bank-accounts/{accountId}:
    get:
      tags:
      - "Suppliers"
      summary: "Bank Account Detail"
      description: ""
      operationId: "supplierbankaccountweb/findOneBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSponsorSupplierBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts/w3cnidgf3b"
                    type: "GET"
                  delete:
                    href: "http://localhost/v2/sponsors/20/suppliers/25628265000160/bank-accounts/w3cnidgf3b"
                    type: "DELETE"
                  sponsor:
                    href: "http://localhost/v2/sponsors/20"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/20/suppliers/25628265000160"
                    type: "GET"
    delete:
      tags:
      - "Suppliers"
      summary: "Delete Bank Account"
      description: ""
      operationId: "supplierbankaccountweb/deleteBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "accountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/selling-summaries:
    get:
      tags:
      - "Batch Anticipation"
      summary: "List Summaries For Anticipation"
      description: ""
      operationId: "sponsorsellingsumaryweb/SellingSummaryContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSponsorSummaryDTO"
              example:
                amount: "54222.5"
                quantity: "856"
                _links:
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/sponsors/10/selling-summaries"
                    type: "GET"
  /v2/sponsors/{id}/sellers/{governmentId}/program-amendments:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "List Supplier Contract Amendments"
      description: ""
      operationId: "selleramendmentweb/FindAllSellerProgramAmendmentContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationCollectionModelEntityModelProgramAmendment"
              example:
                _embedded:
                  program-amendments:
                  - name: "Amentment 1"
                    sellerName: "Seller Company"
                    sellerGovernmentId: "36603564000166"
                    status: "WAITING"
                    createdAt: "2000-01-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2000-02-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/sellers/36603564000166/program-amendments/w3cnidgf3b"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sponsors/10/sellers/36603564000166"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/36603564000166"
                        type: "GET"
  /v2/sponsors/{id}/sellers/{governmentId}/program-amendments/{uuid}:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "Search Supplier Contract Amendment"
      description: ""
      operationId: "selleramendmentweb/FindOneSellerProgramAmendmentContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelProgramAmendment"
              example:
                name: "Amentment 1"
                sellerName: "Seller Company"
                sellerGovernmentId: "36603564000166"
                status: "WAITING"
                createdAt: "2000-01-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-02-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/sellers/36603564000166/program-amendments/w3cnidgf3b"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sponsors/10/sellers/36603564000166"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/10/suppliers/36603564000166"
                    type: "GET"
  /v2/sponsors/{id}/sellers/{governmentId}/bank-accounts/{bankAccountId}:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "Bank Account Detail"
      description: ""
      operationId: "sellerbankaccountweb/findOneBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSellerBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                main: "true"
                status: "CREATED_BY_SELLER"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99/approve"
                    type: "POST"
                  unapprove:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160/bank-accounts/99/unapprove"
                    type: "POST"
                  seller:
                    href: "http://localhost/v2/sponsors/20/sellers/25628265000160"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/20"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/29/suppliers/25628265000160"
                    type: "GET"
  /v2/sponsors/{id}/sellers/{governmentId}/adhesion-terms:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "List Supplier Adhesion Terms"
      description: ""
      operationId: "buyeradhesiontermweb/FindAllAdhesionTermContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationCollectionModelEntityModelBuyerAdhesionTerm"
              example:
                _embedded:
                  adhesion-terms:
                  - buyerName: "Buyer Company"
                    buyerGovernmentId: "50851124000159"
                    sellerName: "Seller Company"
                    sellerGovernmentId: "36603564000166"
                    status: "WAITING"
                    createdAt: "2000-01-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2000-02-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/sellers/36603564000166/adhesion-terms/w3cnidgf3b"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sponsors/10/sellers/36603564000166"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/36603564000166"
                        type: "GET"
  /v2/sponsors/{id}/sellers/{governmentId}/adhesion-terms/{uuid}:
    get:
      tags:
      - "Supplier Registration Details"
      summary: "Search Supplier Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermweb/FindOneAdhesionTermContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelBuyerAdhesionTerm"
              example:
                buyerName: "Buyer Company"
                buyerGovernmentId: "50851124000159"
                sellerName: "Seller Company"
                sellerGovernmentId: "36603564000166"
                status: "WAITING"
                createdAt: "2000-01-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-02-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/sellers/36603564000166/adhesion-terms/w3cnidgf3b"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sponsors/10/sellers/36603564000166"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/10/suppliers/36603564000166"
                    type: "GET"
  /v2/sponsors/{id}/program-amendments:
    get:
      tags:
      - "Contract Amendments"
      summary: "List Contract Amendments"
      description: ""
      operationId: "sponsoramendmentweb/FindAllSponsorProgramAmendmentContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelAmendmentSummaryDTO"
              example:
                _embedded:
                  program-amendments:
                  - name: "Amendment 1"
                    waiting: "2545"
                    signed: "20"
                    expired: "5"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/program-amendments/Amendment%201"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      sellers-amendments:
                        href: "http://localhost/v2/sponsors/10/program-amendments/Amendment%201/sellers"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/program-amendments?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/program-amendments/{name}:
    get:
      tags:
      - "Contract Amendments"
      summary: "Search Contract Amendment By Name"
      description: ""
      operationId: "sponsoramendmentweb/FindOneSponsorProgramAmendmentContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelAmendmentSummaryDTO"
              example:
                name: "Amendment 1"
                waiting: "2545"
                signed: "20"
                expired: "5"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/program-amendments/Amendment%201"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  sellers-amendments:
                    href: "http://localhost/v2/sponsors/10/program-amendments/Amendment%201/sellers"
                    type: "GET"
  /v2/sponsors/{id}/program-amendments/{name}/sellers:
    get:
      tags:
      - "Contract Amendments"
      summary: "Filter Supplier Contract Amendments"
      description: ""
      operationId: "sponsoramendmentweb/FindAllBySellerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "name"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationProgramAmendment"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelProgramAmendment"
              example:
                _embedded:
                  program-amendments:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    name: "Amendment 1"
                    sellerName: "SELLER S/A"
                    sellerGovernmentId: "62144175000120"
                    status: "SIGNED"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/sellers/62144175000120/program-amendments/cK5PKwEpfj"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/sponsors/10"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sponsors/10/sellers/45646546545646"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/50851124000159"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/program-amendments/Amendment%201/sellers?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/processes/{processId}:
    get:
      tags:
      - "Asynchronous Processes"
      summary: "Track Asynchronous Process"
      description: ""
      operationId: "sponsorprocessweb/GetProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelProcess"
              example:
                type: "DELETING_INVOICES"
                processed: "false"
                detail: "error detail"
                createdAt: "2012-04-23T18:25:43.511Z"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2012-04-23T18:25:43.511Z"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/processes/ouL1BKaAmh"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/payables/{uuid}:
    get:
      tags:
      - "Invoices"
      summary: "Detail"
      description: ""
      operationId: "payableweb/FindOnePayableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelPayableDTO"
              example:
                paymentDate: "2019-06-28"
                createdAt: "2019-06-28"
                paymentValue: "1222.23"
                sponsorId: "53"
                supplierGovernmentId: "10701734000151"
                invoiceNumber: "54564654564"
                installment: "1"
                realPaymentDate: "2019-06-28"
                purchasedTax: "1.00"
                buyerName: "BEST PACK BRASIL EMBALAGENS DE"
                buyerGovernmentId: "85832381000128"
                buyerReceivementBank: "756"
                buyerReceivementAgency: "123"
                buyerReceivementAccount: "456"
                buyerReceivementAccountDigit: "0"
                externalId: "zbc9"
                status: "ACTIVE"
                invoiceDate: "2019-09-22T03:00:00.000+0000"
                invoiceKey: "5645645D4SA6D4AS65D4SA"
                totalInstallment: "10"
                governmentId: "61074829000808"
                companyName: "ABB"
                supplierName: "BEST PACK BRASIL EMBALAGENS DE"
                sponsorTax: "0.10"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2019-09-22T03:00:00.000+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                sellerReceivementValue: "1000.23"
                sponsorReceivementValue: "10.23"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/payables/ORga1sHd6S"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                  supplier:
                    href: "http://localhost/v2/sponsors/10/suppliers/10701734000151"
                  documents:
                    href: "http://localhost/v2/sponsors/10/signatures/ORga1sHd6S/documents{?type}"
    delete:
      tags:
      - "Invoices"
      summary: "Delete"
      description: ""
      operationId: "payableweb/DeletePayableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
  /v2/sponsors/{id}/operations/{operationId}:
    get:
      tags:
      - "Batch Anticipation"
      summary: "Search Operation"
      description: ""
      operationId: "sponsoroperationweb/FindOneSponsorOperationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "operationId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSponsorOperation"
              example:
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                status: "PROCESSED"
                amount: "33375.09"
                quantity: "76"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc/items"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
  /v2/sponsors/{id}/operations/{operationId}/items:
    get:
      tags:
      - "Batch Anticipation"
      summary: "List Advanced Suppliers Of An Operation"
      description: ""
      operationId: "sponsoroperationitemweb/FindAllSponsorOperationItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "operationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationSponsorOperationItem"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelSponsorOperationItem"
              example:
                _embedded:
                  items:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    sellerName: "SELLER S/A"
                    sellerGovernmentId: "62144175000120"
                    status: "PROCESSED"
                    amount: "33375.09"
                    quantity: "76"
                    _links:
                      self:
                        href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc/items/M7QUwfAIr5"
                        type: "GET"
                      supplier:
                        href: "http://localhost/v2/sponsors/10/suppliers/62144175000120"
                        type: "GET"
                      operation:
                        href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/operations/0WU5nCeqjc/items?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sponsors/{id}/operations/{operationId}/items/{operationItemId}:
    get:
      tags:
      - "Batch Anticipation"
      summary: "Search Advanced Supplier Of An Operation"
      description: ""
      operationId: "sponsoroperationitemweb/FindOneSponsorOperationItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "operationId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "operationItemId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelSponsorOperationItem"
              example:
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                sellerName: "SELLER S/A"
                sellerGovernmentId: "62144175000120"
                status: "PROCESSED"
                amount: "33375.09"
                quantity: "76"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc/items/M7QUwfAIr5"
                    type: "GET"
                  supplier:
                    href: "http://localhost/v2/sponsors/10/suppliers/62144175000120"
                    type: "GET"
                  operation:
                    href: "http://localhost/v2/sponsors/10/operations/0WU5nCeqjc"
                    type: "GET"
  /v2/sponsors/{id}/operation-summaries:
    get:
      tags:
      - "Batch Anticipation"
      summary: "List Summaries For Batch/Mass Anticipation"
      description: ""
      operationId: "sponsoroperationsummaryweb/GetSponsorOrderContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationCollectionModelEntityModelSponsorOperationSellerSummaryDTO"
              example:
                _embedded:
                  summaries:
                  - supplierName: "FIAT SELLER"
                    supplierGovernmentId: "15900570000105"
                    allowed: "true"
                    amount: "6000"
                    quantity: "2"
                    _links:
                      supplier:
                        href: "http://localhost/v2/sponsors/95/suppliers/45646546545646"
                        type: "GET"
                      supplier-update:
                        href: "http://localhost/v2/sponsors/10/suppliers/45646546545646"
                        type: "PUT"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/operation-summaries"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
  /v2/sponsors/{id}/report-configurations/{reportType}:
    get:
      tags:
      - "Configuration For Dynamic Reports"
      summary: ""
      description: ""
      operationId: "sponsorconfigurationweb/FindOneSponsorReportConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSponsorReportConfiguration"
              example:
                createdAt: "2022-08-22T21:07:36Z"
                createUserId: "UNKNOWN"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-22T21:07:36Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-22T21:07:38Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-22T21:07:38Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sponsorName"
                  order: "1"
                  description: "Nome Sacado"
                - createdAt: "2022-08-22T21:07:38Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-22T21:07:38Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sponsorGovernmentId"
                  order: "2"
                  description: "CNPJ Sacado"
                - createdAt: "2022-08-22T21:07:38Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-22T21:07:38Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "supplierGovernmentId"
                  order: "3"
                  description: "CNPJ Fornecedor"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/12/report-configurations/PAYABLE"
                    type: "GET"
                  create:
                    href: "http://localhost/v2/sponsors/12/report-configurations/PAYABLE"
                    type: "POST"
                  sponsor:
                    href: "http://localhost/v2/sponsors/12"
                    type: "GET"
    put:
      tags:
      - "Configuration For Dynamic Reports"
      summary: ""
      description: ""
      operationId: "sponsorconfigurationweb/UpdateSponsorReportConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportSponsorReportConfiguration"
            example:
              details:
              - columnId: "sponsorGovernmentId"
                order: 1
              - columnId: "sponsorName"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSponsorReportConfiguration"
              example:
                createdAt: "2022-08-31T15:57:52Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-31T15:57:52Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-09-01T14:32:00.347916Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-09-01T14:32:00.347916Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "sponsorGovernmentId"
                  order: "1"
                  description: "CNPJ Sacado"
                - createdAt: "2022-09-01T14:32:00.349218Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-09-01T14:32:00.349218Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "sponsorName"
                  order: "2"
                  description: "Nome Sacado"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/12/report-configurations/PAYABLE"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sponsors/12/report-configurations/PAYABLE"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/sponsors/12/report-configurations/PAYABLE"
                    type: "DELETE"
                  sponsor:
                    href: "http://localhost/v2/sponsors/12"
                    type: "GET"
    post:
      tags:
      - "Configuration For Dynamic Reports"
      summary: ""
      description: ""
      operationId: "sponsorconfigurationweb/CreateSponsorReportConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportSponsorReportConfiguration"
            example:
              details:
              - columnId: "buyerGovernmentId"
                order: 1
              - columnId: "paymentDate"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSponsorReportConfiguration"
              example:
                createdAt: "2022-08-30T03:08:54.442016Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-30T03:08:54.502918Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-30T03:08:54.484781Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-30T03:08:54.484781Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "buyerGovernmentId"
                  order: "1"
                  description: "CNPJ Banco"
                - createdAt: "2022-08-30T03:08:54.491868Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-30T03:08:54.491868Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "paymentDate"
                  order: "2"
                  description: "Data Vencimento"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/report-configurations/PAYABLE"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sponsors/10/report-configurations/PAYABLE"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/sponsors/10/report-configurations/PAYABLE"
                    type: "DELETE"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
    delete:
      tags:
      - "Configuration For Dynamic Reports"
      summary: ""
      description: ""
      operationId: "sponsorconfigurationweb/DeleteSponsorReportConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        204:
          description: "No Content"
  /v2/sponsors/{id}/reports:
    post:
      tags:
      - "Reports"
      summary: "Create Report"
      description: ""
      operationId: "sponsorreportweb/StartSponsorReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                report:
                  $ref: "#/components/schemas/reportReport"
                searchCriteria:
                  type: "string"
            example:
              startDate: "2020-05-05"
              endDate: "2020-06-06"
              type: "PAYABLE"
              fileType: "CSV"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-06-05"
                endDate: "2021-07-06"
                type: "PAYABLE"
                fileType: "CSV"
                createdAt: "202021-07-09T16:36:49.364+0000"
                createUserId: "email@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "email@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/reports/asd123fgh4"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sponsors/95/report-processes/U5VQsp4pBF"
                    type: "GET"
  /v2/sponsors/{id}/reports/{reportId}:
    get:
      tags:
      - "Reports"
      summary: "Search Report"
      description: ""
      operationId: "sponsorreportweb/FindOneSponsorReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-04-01"
                endDate: "2021-05-30"
                type: "PAYABLE"
                fileType: "CSV"
                createdAt: "2021-07-09T16:36:49.364+0000"
                createUserId: "EMAIL@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "EMAIL@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/95/reports/asd123fgh4"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sponsors/95/report-processes/U5VQsp4pBF"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/95"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sponsors/95/reports/asd123fgh4/file"
                    type: "GET"
  /v2/sponsors/{id}/reports/{reportId}/file:
    get:
      tags:
      - "Reports"
      summary: "Download Report"
      description: ""
      operationId: "SponsorReportDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sponsors/{id}/report-templates/{reportType}:
    get:
      tags:
      - "Dynamic Report Template"
      summary: "Search Available Columns For Report"
      description: ""
      operationId: "sponsortemplateweb/FindOneSponsorTemplateContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSponsorReportTemplate"
              example:
                details:
                - columnId: "taxValue"
                  description: "Juros Fornecedor"
                - columnId: "sellerReceivementValue"
                  description: "Valor Líquido"
                - columnId: "supplierGovernmentId"
                  description: "CNPJ Fornecedor"
                - columnId: "realPaymentDate"
                  description: "Data do pagamento"
                - columnId: "effectivePaymentDate"
                  description: "Data Pagamento Efetivo"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/12/report-templates/PAYABLE"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/12"
                    type: "GET"
  /v2/sponsors/{id}/report-processes/{processId}:
    get:
      tags:
      - "Report Generation Processes"
      summary: "Track Report Generation Process"
      description: ""
      operationId: "sponsorprocessweb/FindOneSponsorProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelProcess"
              example:
                type: "PAYABLE"
                processed: "true"
                createdAt: "2021-05-23T18:25:43.511Z"
                createUserId: "email@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2021-06-23T18:25:43.511Z"
                lastUserId: "email@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sponsors/10/report-processes/ouL1BKaAmh"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/sponsors/10"
                    type: "GET"
                  report:
                    href: "http://localhost/v2/sponsors/95/reports/asd123fgh4"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sponsors/95/reports/asd123fgh4/file"
                    type: "GET"
components:
  schemas:
    sponsorMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    sponsorSponsorConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        schedulePurchase:
          type: "boolean"
          description: "Schedule Purchases"
    sponsorEntityModelSponsorConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        schedulePurchase:
          type: "boolean"
          description: "Schedule Purchases"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/sponsorLink"
    sponsorEntityModelProcessLinkResponse:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorEntityModelSponsorBuyerAgreement:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "string"
          description: "ID"
        fileName:
          type: "string"
          description: "File Name"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorEntityModelSponsorBuyer:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        status:
          type: "string"
          description: "Status"
          enum:
          - "APPROVED"
          - "UNAPPROVED"
          - "INACTIVE"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "string"
          description: "ID"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
    sponsorEntityModelBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "string"
          description: "ID"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorSpecificationSponsorBuyerAgreement:
      type: "object"
    sponsorPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    sponsorPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    sponsorPagedModelEntityModelSponsorBuyerAgreement:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            agreements:
              type: "array"
              items:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyerAgreement"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
        page:
          $ref: "#/components/schemas/sponsorPageMetadata"
    sponsorEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        type:
          type: "string"
          description: "Type"
          enum:
          - "SUPPLIER_UPLOAD"
        status:
          type: "string"
          description: "Status"
          enum:
          - "PROCESSING"
          - "COMPLETED"
          - "COMPLETED_WITH_ERROR"
        step:
          type: "integer"
          format: "int64"
        steps:
          type: "integer"
          format: "int64"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorEntityModelProcessStep:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        status:
          type: "string"
          description: "Status"
          enum:
          - "PROCESSING"
          - "COMPLETED"
          - "COMPLETED_WITH_ERROR"
        relationId:
          type: "string"
        detail:
          type: "string"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
    sponsorPagedModelEntityModelProcessStep:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            steps:
              type: "array"
              items:
                $ref: "#/components/schemas/sponsorEntityModelProcessStep"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
        page:
          $ref: "#/components/schemas/sponsorPageMetadata"
    sponsorSpecificationSponsorBuyer:
      type: "object"
    sponsorPagedModelEntityModelSponsorBuyer:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            buyers:
              type: "array"
              items:
                $ref: "#/components/schemas/sponsorEntityModelSponsorBuyer"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
        page:
          $ref: "#/components/schemas/sponsorPageMetadata"
    sponsorSpecificationBankAccount:
      type: "object"
    sponsorPagedModelEntityModelBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/sponsorEntityModelBankAccount"
        _links:
          $ref: "#/components/schemas/sponsorLinks"
        page:
          $ref: "#/components/schemas/sponsorPageMetadata"
    sponsorLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
          description: "Type"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
          description: "Name"
        templated:
          type: "boolean"
    payableLoaderV2Message:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Process Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    payableLoaderV2PayableItemRequest:
      required:
      - "paymentDate"
      - "paymentValue"
      - "supplierGovernmentId"
      type: "object"
      properties:
        externalId:
          type: "string"
          description: "External Identifier"
        paymentDate:
          type: "string"
          description: "Payment Date"
          format: "date-time"
        realPaymentDate:
          type: "string"
          description: "Real Payment Date"
          format: "date-time"
        paymentValue:
          minimum: 5.01
          exclusiveMinimum: false
          type: "number"
          description: "Payment Value"
        supplierName:
          type: "string"
          description: "Supplier Name"
        supplierGovernmentId:
          type: "string"
          description: "Supplier CPF/CNPJ"
        invoiceNumber:
          type: "string"
          description: "Invoice Number"
        invoiceDate:
          type: "string"
          description: "Invoice Date"
          format: "date-time"
        invoiceKey:
          type: "string"
          description: "Invoice Identifier"
        assetType:
          pattern: "DUPLICATA_MERCANTIL|CHEQUE|CONTRATOS|CONTRATO_FISICO|MULTIPLOS|NOTA_SERVICO|CARTAO_CREDITO|DIREITOS_CREDITORIOS"
          type: "string"
          description: "Asset Type"
        installment:
          type: "integer"
          description: "Installment"
          format: "int32"
        totalInstallment:
          type: "integer"
          description: "Total Installment"
          format: "int32"
    payableLoaderV2PayableRequest:
      required:
      - "items"
      type: "object"
      properties:
        items:
          maxItems: 150
          minItems: 1
          type: "array"
          description: "Items"
          items:
            $ref: "#/components/schemas/payableLoaderV2PayableItemRequest"
    payableLoaderV2EntityModelPayableResponse:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/payableLoaderV2Links"
    payableLoaderV2Links:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/payableLoaderV2Link"
    payableLoaderV2SpecificationProcess:
      type: "object"
    payableLoaderV2Pageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    payableLoaderV2EntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        type:
          type: "string"
          description: "Process Type"
        processed:
          type: "boolean"
          description: "Processed/Not Processed"
        _links:
          $ref: "#/components/schemas/payableLoaderV2Links"
    payableLoaderV2PageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    payableLoaderV2PagedModelEntityModelProcess:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            processes:
              type: "array"
              items:
                $ref: "#/components/schemas/payableLoaderV2EntityModelProcess"
        _links:
          $ref: "#/components/schemas/payableLoaderV2Links"
        page:
          $ref: "#/components/schemas/payableLoaderV2PageMetadata"
    payableLoaderV2EntityModelProcessErrorDetail:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        detail:
          type: "string"
          description: "Process Error Detail"
        invoiceNumber:
          type: "string"
          description: "Invoice Number"
        externalId:
          type: "string"
          description: "External Identifier"
        _links:
          $ref: "#/components/schemas/payableLoaderV2Links"
    payableLoaderV2PagedModelEntityModelProcessErrorDetail:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            errors:
              type: "array"
              items:
                $ref: "#/components/schemas/payableLoaderV2EntityModelProcessErrorDetail"
        _links:
          $ref: "#/components/schemas/payableLoaderV2Links"
        page:
          $ref: "#/components/schemas/payableLoaderV2PageMetadata"
    payableLoaderV2SpecificationProcessErrorDetail:
      type: "object"
    payableLoaderV2Link:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    signMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    signBuyerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
          description: "Type"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
          description: "Name"
        templated:
          type: "boolean"
    signSellerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Government ID"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signSignature:
      required:
      - "amount"
      - "buyerGovernmentId"
      - "buyerName"
      - "reportCode"
      - "sellerGovernmentId"
      - "sellerName"
      - "sponsorGovernmentId"
      - "sponsorName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        sponsorSignature:
          type: "string"
          description: "Sponsor Signature"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        sellerSignature:
          type: "string"
          description: "Supplier Signature"
        buyerName:
          type: "string"
          description: "Buyer Name."
        buyerGovernmentId:
          type: "string"
          description: "Buyer Government ID"
        buyerSignature:
          type: "string"
          description: "Buyer Signature"
        reportCode:
          type: "string"
          description: "Report Code"
        amount:
          type: "number"
          description: "Quantity."
        sponsorSignatureStatus:
          type: "string"
          description: "Sponsor Signature Status"
        sellerSignatureStatus:
          type: "string"
          description: "Supplier Signature Status"
        buyerSignatureStatus:
          type: "string"
          description: "Buyer Signature Status"
        numberOfSellerSignatures:
          type: "integer"
          description: "Number Of Suppliers Signatures"
          format: "int32"
        sellerSignatures:
          type: "array"
          description: "Supplier Signatures"
          items:
            $ref: "#/components/schemas/signSellerSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        buyerSignatures:
          type: "array"
          description: "Buyer Signatures"
          items:
            $ref: "#/components/schemas/signBuyerSignature"
        assignmentDocumentHash:
          type: "string"
          description: "Assignment Document Hash"
        notificationDocumentHash:
          type: "string"
          description: "Notification Document Hash"
    signPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    signPagedModelSignature:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            signatures:
              type: "array"
              items:
                $ref: "#/components/schemas/signSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        page:
          $ref: "#/components/schemas/signPageMetadata"
    dashboardMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    dashboardEntityModelSponsorDashboardResource:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/dashboardLink"
    dashboardCollectionModelOperationEvolution:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            purchase-evolutions:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardOperationEvolution"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardOperationEvolution:
      type: "object"
      properties:
        date:
          type: "string"
          description: "Date"
          format: "date-time"
        total:
          type: "integer"
          description: "Total"
          format: "int64"
        totalAmount:
          type: "number"
          description: "Total Quantity"
    dashboardCollectionModelOperationDistribution:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            purchase-distributions:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardOperationDistribution"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardOperationDistribution:
      type: "object"
      properties:
        buyerName:
          type: "string"
          description: "Buyer Name"
        buyerGovernmentId:
          type: "string"
          description: "Buyer Government ID"
        buyerId:
          type: "integer"
          description: "Buyer Identifier"
          format: "int32"
        amount:
          type: "number"
          description: "Quantity"
        total:
          type: "integer"
          description: "Total"
          format: "int64"
    dashboardEntityModelProgramSummaryDashboard:
      type: "object"
      properties:
        amount:
          type: "number"
          description: "Quantity"
        operations:
          type: "integer"
          description: "Operations"
          format: "int64"
        operationItems:
          type: "integer"
          description: "Operation Items"
          format: "int64"
        averageTax:
          type: "number"
          description: "Average Tax"
          format: "float"
        averageDuration:
          type: "number"
          description: "Average Duration"
          format: "float"
        sellers:
          type: "integer"
          description: "Suppliers"
          format: "int64"
        activeSellers:
          type: "integer"
          description: "Active Suppliers"
          format: "int64"
        approvedSuppliers:
          type: "integer"
          description: "Approved Suppliers"
          format: "int64"
        unapprovedSuppliers:
          type: "integer"
          description: "Blocked Suppliers"
          format: "int64"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardEntityModelDailyOperationSummaryDashboard:
      type: "object"
      properties:
        amount:
          type: "number"
          description: "Quantity"
        items:
          type: "integer"
          description: "Items"
          format: "int64"
        amountOffered:
          type: "number"
          description: "Offered Quantity"
        itemsOffered:
          type: "integer"
          description: "Offered Items"
          format: "int64"
        amountPurchased:
          type: "number"
          description: "Purchased Quantity"
        amountRefused:
          type: "number"
          description: "Refused Quantity"
        itemsPurchased:
          type: "integer"
          description: "Purchased Items"
          format: "int64"
        operations:
          type: "integer"
          description: "Operations"
          format: "int64"
        averageTax:
          type: "number"
          description: "Average Tax"
          format: "float"
        averageDuration:
          type: "number"
          description: "Average Duration"
          format: "float"
        sellersWithPurchases:
          type: "integer"
          description: "Suppliers With Purchases"
          format: "int64"
        operationsRefused:
          type: "integer"
          description: "Refused Operations"
          format: "int64"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    rdStationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    rdStationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/rdStationLink"
    rdStationSubscription:
      required:
      - "information"
      - "payable"
      - "profile"
      - "transactional"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        account:
          type: "boolean"
          description: "Account"
        payable:
          type: "boolean"
          description: "Receive Email Notifications of Invoice Availability"
        profile:
          type: "boolean"
        transactional:
          type: "boolean"
          description: "Receive Transactional Email Notifications"
        information:
          type: "boolean"
          description: "Receive General Information Email Notifications"
        _links:
          $ref: "#/components/schemas/rdStationLinks"
    rdStationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    externalSignMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    externalSignSpecificationSponsorProgramAdhesionTerm:
      type: "object"
    externalSignPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    externalSignEntityModelSponsorProgramAdhesionTerm:
      required:
      - "sponsorGovernmentId"
      - "sponsorName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Government ID"
        status:
          type: "string"
          description: "Status"
          enum:
          - "GENERATING"
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
          - "IGNORED"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/externalSignLink"
    externalSignPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    externalSignPagedModelEntityModelSponsorProgramAdhesionTerm:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-adhesion-terms:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignEntityModelSponsorProgramAdhesionTerm"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
        page:
          $ref: "#/components/schemas/externalSignPageMetadata"
    externalSignCollectionModelDocumentSigner:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            signers:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignDocumentSigner"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignDocumentSigner:
      required:
      - "email"
      - "name"
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
          enum:
          - "SENT"
          - "AUTHENTICATION_FAILED"
          - "DELIVERED"
          - "COMPLETED"
          - "DECLINED"
    externalSignLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    spyrosMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    spyrosSpecificationAuditingEvent:
      type: "object"
    spyrosPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    spyrosAuditingEventDetail:
      type: "object"
      properties:
        label:
          type: "string"
          description: "Label"
        value:
          type: "string"
          description: "Value"
    spyrosEntityModelAuditingEvent:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        user:
          type: "string"
          description: "User"
        userIp:
          type: "string"
          description: "User IP"
        traceId:
          type: "string"
          description: "Trace ID"
        type:
          type: "string"
          description: "Type"
        details:
          type: "array"
          description: "Details"
          items:
            $ref: "#/components/schemas/spyrosAuditingEventDetail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/spyrosLink"
    spyrosPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    spyrosPagedModelEntityModelAuditingEvent:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            events:
              type: "array"
              items:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
        page:
          $ref: "#/components/schemas/spyrosPageMetadata"
    spyrosEntityModelAuditingEventDetailResource:
      type: "object"
      properties:
        detail:
          type: "object"
          additionalProperties:
            type: "object"
          description: "Detail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    integrationV2Message:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    integrationV2Link:
      type: "object"
      properties:
        rel:
          type: "string"
          xml:
            attribute: true
        href:
          type: "string"
          xml:
            attribute: true
        hreflang:
          type: "string"
          xml:
            attribute: true
        media:
          type: "string"
          xml:
            attribute: true
        title:
          type: "string"
          xml:
            attribute: true
        type:
          type: "string"
          description: "Type"
          xml:
            attribute: true
        deprecation:
          type: "string"
          xml:
            attribute: true
    integrationV2Liquidation:
      required:
      - "items"
      type: "object"
      properties:
        items:
          maxItems: 100
          minItems: 1
          type: "array"
          writeOnly: true
          items:
            $ref: "#/components/schemas/integrationV2LiquidationItem"
        links:
          type: "array"
          xml:
            name: "link"
            namespace: "http://www.w3.org/2005/Atom"
          items:
            $ref: "#/components/schemas/integrationV2Link"
    integrationV2LiquidationItem:
      required:
      - "liquidationDate"
      - "liquidationValue"
      - "settlementType"
      - "supplierGovernmentId"
      type: "object"
      properties:
        externalId:
          type: "string"
          description: "External Identifier"
        invoiceNumber:
          type: "string"
          description: "Invoice Number"
        liquidationDate:
          type: "string"
          description: "Settlement Date"
          format: "date"
        liquidationValue:
          type: "number"
          description: "Settlement Value"
        supplierGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        settlementType:
          pattern: "BILL|BANK_TRANSFER"
          type: "string"
          description: "Settlement Type"
        installment:
          type: "integer"
          description: "Installment"
          format: "int32"
    integrationV2Pageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    integrationV2PageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
          xml:
            attribute: true
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
          xml:
            attribute: true
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
          xml:
            attribute: true
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
          xml:
            attribute: true
    integrationV2PagedResourcesSponsorDefaultFile:
      type: "object"
      properties:
        links:
          type: "array"
          xml:
            name: "link"
            namespace: "http://www.w3.org/2005/Atom"
          items:
            $ref: "#/components/schemas/integrationV2Link"
        content:
          type: "array"
          xml:
            wrapped: true
          items:
            $ref: "#/components/schemas/integrationV2SponsorDefaultFile"
        page:
          $ref: "#/components/schemas/integrationV2PageMetadata"
      xml:
        name: "pagedEntities"
    integrationV2SponsorDefaultFile:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        fileName:
          type: "string"
          description: "Filename."
        links:
          type: "array"
          xml:
            name: "link"
            namespace: "http://www.w3.org/2005/Atom"
          items:
            $ref: "#/components/schemas/integrationV2Link"
    ssoMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
          - "change_password_required"
          - "new_device_used"
          - "user_not_confirmed"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    ssoSponsorRoleResource:
      required:
      - "role"
      type: "object"
      properties:
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE"
          type: "string"
    ssoEntityModelUserCompany:
      type: "object"
      properties:
        role:
          type: "string"
          enum:
          - "ADMIN"
          - "EXECUTE"
          - "SELECTOR"
          - "VIEW"
          - "BACK_OFFICE"
          - "WHOLESALE"
          - "RETAIL"
          - "USER_MANAGER"
        status:
          type: "string"
          enum:
          - "APPROVAL"
          - "FRAUD_DETECTED"
          - "PRE_CHECK"
          - "ACTIVE"
          - "INACTIVE"
          - "FRAUD_CONFIRMED"
          - "BANK_ACCOUNT_CHANGED"
          - "BIOMETRIC_VERIFICATION"
          - "APPROVED"
        companyId:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
          enum:
          - "SPONSOR"
          - "SELLER"
          - "BUYER"
        adhesionTerm:
          type: "boolean"
        program:
          type: "string"
        product:
          type: "string"
          enum:
          - "SUPPLY_CHAIN"
          - "SALES_FINANCE"
          - "SPIKE"
          - "FINANCIAL_MANAGEMENT"
        username:
          type: "string"
        user:
          type: "string"
        email:
          type: "string"
        _links:
          $ref: "#/components/schemas/ssoLinks"
    ssoLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/ssoLink"
    ssoSponsorCompanyResource:
      required:
      - "email"
      - "role"
      type: "object"
      properties:
        email:
          type: "string"
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE"
          type: "string"
    ssoSpecificationUserCompany:
      type: "object"
    ssoPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    ssoPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    ssoPagedModelEntityModelUserCompany:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            profiles:
              type: "array"
              items:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
        _links:
          $ref: "#/components/schemas/ssoLinks"
        page:
          $ref: "#/components/schemas/ssoPageMetadata"
    ssoLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    operationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
          - "Adhesion_Term_Not_Signed"
          - "Order_Expired"
          - "Invoice_Date_Challenge"
          - "Invoice_Payment_Date_Challenge"
          - "Invoice_Payment_Value_Challenge"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    operationSponsorTaxRequest:
      type: "object"
      properties:
        sponsorTax:
          type: "number"
          format: "float"
    operationSupplierRequest:
      type: "object"
      properties:
        supplierName:
          type: "string"
        allowed:
          type: "boolean"
        allowedValue:
          maximum: 100
          minimum: 0
          type: "number"
          format: "double"
        automatedOffer:
          type: "boolean"
        sponsorTax:
          type: "number"
          format: "float"
        sponsorCanOffer:
          type: "boolean"
    operationSponsorSupplierBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
    operationSellerBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
        main:
          type: "boolean"
          readOnly: true
        status:
          type: "string"
          readOnly: true
          enum:
          - "CREATED_BY_SELLER"
          - "CREATED_BY_SPONSOR"
          - "INACTIVE"
          - "APPROVAL"
          - "APPROVED_BY_SPONSOR"
          - "UNAPPROVED_BY_SPONSOR"
          - "WAITING_SPONSOR_APPROVAL"
    operationSponsorOperationCreatorDTO:
      required:
      - "buyers"
      - "sellers"
      type: "object"
      properties:
        sellers:
          type: "array"
          items:
            type: "string"
        buyers:
          type: "array"
          items:
            type: "string"
    operationEntityModelSponsorOperation:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        status:
          type: "string"
          enum:
          - "WAITING"
          - "PROCESSED"
          - "ERROR"
        amount:
          type: "number"
        quantity:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/operationLink"
    operationEntityModelSeller:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        name:
          type: "string"
        governmentId:
          type: "string"
        companyName:
          type: "string"
        fantasyName:
          type: "string"
        foundationDate:
          type: "string"
          format: "date-time"
        mainPhone:
          type: "string"
        phone:
          type: "string"
        alternativePhone:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
        zipCode:
          type: "string"
        activityCode:
          type: "string"
        legalNature:
          type: "string"
        legalResponsibles:
          type: "array"
          items:
            $ref: "#/components/schemas/operationSellerLegalResponsible"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationSellerLegalResponsible:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        name:
          type: "string"
        governmentId:
          type: "string"
        type:
          type: "string"
        birthdayDate:
          type: "string"
          format: "date-time"
        status:
          type: "string"
          enum:
          - "ACTIVE"
          - "INACTIVE"
          - "APPROVAL"
        documentType:
          type: "string"
        documentNumber:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
        sign:
          type: "boolean"
        financialAuthority:
          type: "boolean"
        financialAuthorityValue:
          type: "number"
    operationEntityModelMarket:
      type: "object"
      properties:
        today:
          type: "string"
          format: "date"
        marketStatus:
          type: "string"
          enum:
          - "OPEN"
          - "CLOSED"
        lastWorkingDay:
          type: "string"
          format: "date"
        nextWorkingDay:
          type: "string"
          format: "date"
        openMarketHour:
          type: "integer"
          format: "int32"
        closedMarketHour:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationSpecificationSupplier:
      type: "object"
    operationPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    operationEntityModelSupplierDTO:
      required:
      - "allowed"
      - "allowedValue"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        supplierGovernmentId:
          type: "string"
        supplierName:
          type: "string"
        allowed:
          type: "boolean"
        allowedValue:
          maximum: 100
          minimum: 0
          type: "number"
          format: "double"
        sponsorTax:
          type: "number"
          format: "float"
        automatedOffer:
          type: "boolean"
        sponsorCanOffer:
          type: "boolean"
        adhesionTermStatus:
          type: "string"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
        amendmentsStatus:
          type: "string"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
        sellerLastUpdatedAt:
          type: "string"
          format: "date-time"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    operationPagedModelEntityModelSupplierDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            suppliers:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSupplierDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationEntityModelSponsorSupplierBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelSponsorSupplierBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSponsorSupplierBankAccount"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationEntityModelSponsorSummaryDTO:
      type: "object"
      properties:
        amount:
          type: "number"
        quantity:
          type: "integer"
          format: "int64"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationCollectionModelEntityModelProgramAmendment:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-amendments:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelProgramAmendment"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelProgramAmendment:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        name:
          type: "string"
        sellerName:
          type: "string"
        sellerGovernmentId:
          type: "string"
        status:
          type: "string"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationSpecificationSellerBankAccount:
      type: "object"
    operationEntityModelSellerBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
        main:
          type: "boolean"
          readOnly: true
        status:
          type: "string"
          readOnly: true
          enum:
          - "CREATED_BY_SELLER"
          - "CREATED_BY_SPONSOR"
          - "INACTIVE"
          - "APPROVAL"
          - "APPROVED_BY_SPONSOR"
          - "UNAPPROVED_BY_SPONSOR"
          - "WAITING_SPONSOR_APPROVAL"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelSellerBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSellerBankAccount"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationCollectionModelEntityModelBuyerAdhesionTerm:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            adhesion-terms:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelBuyerAdhesionTerm"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelBuyerAdhesionTerm:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        buyerName:
          type: "string"
        buyerGovernmentId:
          type: "string"
        sellerName:
          type: "string"
        sellerGovernmentId:
          type: "string"
        status:
          type: "string"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelAmendmentSummaryDTO:
      type: "object"
      properties:
        name:
          type: "string"
        waiting:
          type: "integer"
          format: "int32"
        signed:
          type: "integer"
          format: "int32"
        expired:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelAmendmentSummaryDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-amendments:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelAmendmentSummaryDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationProgramAmendment:
      type: "object"
    operationPagedModelEntityModelProgramAmendment:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-amendments:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelProgramAmendment"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
          enum:
          - "CREATING_ORDER"
          - "CREATING_OFFER"
          - "DELETING_INVOICES"
          - "FOR_TESTS_NEVER_USE"
        step:
          type: "integer"
          format: "int64"
        totalSteps:
          type: "integer"
          format: "int64"
        processed:
          type: "boolean"
        detail:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationSpecificationInvoice:
      type: "object"
    operationEntityModelPayableDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        sponsorId:
          type: "integer"
          format: "int32"
        status:
          type: "string"
          enum:
          - "SOLD"
          - "PAID"
          - "REFUSED"
          - "CANCELLED"
          - "WAITING_CUSTODY"
          - "WAITING_DELETE"
          - "ACTIVE"
          - "OFFERED"
          - "DELAYED"
        assetType:
          type: "string"
        companyName:
          type: "string"
        governmentId:
          type: "string"
        paymentDate:
          type: "string"
          format: "date"
        realPaymentDate:
          type: "string"
          format: "date"
        paymentValue:
          type: "number"
        invoiceDate:
          type: "string"
          format: "date"
        invoiceNumber:
          type: "string"
        invoiceKey:
          type: "string"
        externalId:
          type: "string"
        supplierName:
          type: "string"
        supplierGovernmentId:
          type: "string"
        installment:
          type: "integer"
          format: "int32"
        totalInstallment:
          type: "integer"
          format: "int32"
        sponsorTax:
          type: "number"
          format: "float"
        purchasedTax:
          type: "number"
          format: "float"
        sellerReceivementValue:
          type: "number"
        sponsorReceivementValue:
          type: "number"
        effectivePaymentDate:
          type: "string"
          format: "date"
        buyerName:
          type: "string"
        buyerGovernmentId:
          type: "string"
        buyerReceivementBank:
          type: "string"
        buyerReceivementAgency:
          type: "string"
        buyerReceivementAccount:
          type: "string"
        buyerReceivementAccountDigit:
          type: "string"
        billLine:
          type: "string"
        billUrl:
          type: "string"
        billRegisteredAt:
          type: "string"
          format: "date"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelPayableDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            payables:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelPayableDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationSponsorOperation:
      type: "object"
    operationPagedModelEntityModelSponsorOperation:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            operations:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSponsorOperation"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationSponsorOperationItem:
      type: "object"
    operationEntityModelSponsorOperationItem:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        sellerName:
          type: "string"
        sellerGovernmentId:
          type: "string"
        amount:
          type: "number"
        quantity:
          type: "integer"
          format: "int64"
        status:
          type: "string"
          enum:
          - "WAITING"
          - "PROCESSED"
          - "ERROR"
        detail:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelSponsorOperationItem:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            items:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSponsorOperationItem"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationCollectionModelEntityModelSponsorOperationSellerSummaryDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            summaries:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSponsorOperationSellerSummaryDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelSponsorOperationSellerSummaryDTO:
      type: "object"
      properties:
        supplierName:
          type: "string"
        supplierGovernmentId:
          type: "string"
        allowed:
          type: "boolean"
        amount:
          type: "number"
        quantity:
          type: "integer"
          format: "int64"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelInvoiceDeleteStartedDTO:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    reportMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    reportSponsorReportConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSponsorReportConfigurationDetail"
    reportSponsorReportConfigurationDetail:
      required:
      - "columnId"
      - "order"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        columnId:
          type: "string"
        order:
          type: "integer"
          format: "int32"
        description:
          type: "string"
    reportEntityModelSponsorReportConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSponsorReportConfigurationDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/reportLink"
    reportReport:
      required:
      - "endDate"
      - "startDate"
      - "type"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        fileType:
          type: "string"
          enum:
          - "CSV"
          - "PDF"
        documentHash:
          type: "string"
    reportEntityModelReport:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        fileType:
          type: "string"
          enum:
          - "CSV"
          - "PDF"
        documentHash:
          type: "string"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportEntityModelSponsorReportTemplate:
      type: "object"
      properties:
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSponsorReportTemplateDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportSponsorReportTemplateDetail:
      type: "object"
      properties:
        columnId:
          type: "string"
        description:
          type: "string"
    reportEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
        step:
          type: "integer"
          format: "int64"
        totalSteps:
          type: "integer"
          format: "int64"
        processed:
          type: "boolean"
        detail:
          type: "string"
        companyId:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
