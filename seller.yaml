---
openapi: "3.0.1"
info:
  title: "Monkey API"
  version: "1.0"
servers:
- url: "https://hmg-zuul.monkeyecx.com"
  description: "Staging Server"
- url: "https://zuul.monkey.exchange"
  description: "Production Server"
paths:
  /v2/sellers/{id}/signatures/{purchaseId}/unapprove:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Disapprove"
      description: ""
      operationId: "sellerweb/SellerSignatureUnapprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/documents"
                    type: "GET"
                  offer:
                    href: "http://localhost/v2/sellers/95/offers/ju5t91UmAs"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{id}/signatures/{purchaseId}/approve:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Approve"
      description: ""
      operationId: "sellerweb/SellerSignatureApprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/documents"
                    type: "GET"
                  offer:
                    href: "http://localhost/v2/sellers/95/offers/ju5t91UmAs"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{sellerId}/document-models/{buyerGovernmentId}/assignments:
    get:
      tags:
      - "Document Templates"
      summary: "Download Assignment Term Template"
      description: ""
      operationId: "SellerEmptyAssignmentDocuments"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "buyerGovernmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{id}/signatures:
    get:
      tags:
      - "Documents and Signatures"
      summary: "List"
      description: ""
      operationId: "sellerweb/SellerSignatureList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "status"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "WAITING"
      - name: "startDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "endDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "page"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 0
      - name: "size"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 20
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signPagedModelSignature"
              example:
                _embedded:
                  signatures:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    sponsorName: "GERDAU ACOS LONGOS S.A."
                    sponsorGovernmentId: "07358761000169"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    buyerName: "BNP"
                    buyerGovernmentId: "45646546545646"
                    reportCode: "10/00001"
                    amount: "160110.75"
                    sponsorSignatureStatus: "NOT_REQUIRED"
                    sellerSignatureStatus: "APPROVED"
                    buyerSignatureStatus: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S"
                        type: "GET"
                      documents:
                        href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/documents"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/unapprove"
                        type: "POST"
                      offer:
                        href: "http://localhost/v2/sellers/95/offers/ju5t91UmAs"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/signatures?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/signatures/{purchaseId}:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Detail"
      description: ""
      operationId: "sellerweb/SellerSignatureFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/sellers/95/signatures/ORga1sHd6S/documents"
                    type: "GET"
                  offer:
                    href: "http://localhost/v2/sellers/95/offers/ju5t91UmAs"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{id}/signatures/{purchaseId}/documents:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Download Terms"
      description: ""
      operationId: "SellerSignatureDocuments"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{sellerId}/dashboards:
    get:
      tags:
      - "Dashboards"
      summary: "Dashboard"
      description: ""
      operationId: "seller/GETSellerDashboard.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelSellerDashboardResource"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/dashboards"
                    type: "GET"
                  program-summary:
                    href: "http://localhost/v2/sellers/10/dashboards/program-summaries"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{sellerId}/dashboards/program-summaries:
    get:
      tags:
      - "Dashboards"
      summary: "List Overview Information"
      description: ""
      operationId: "seller/GETSellerProgramSummaryDashboard.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelSellerProgramSummaryDashboard"
              example:
                amountPayableAvailable: "310305.05"
                quantityPayableAvailable: "47"
                amountPayableOnApproval: "310305.05"
                quantityPayableOnApproval: "47"
                anticipatedValue: "310305.05"
                anticipatedQuantity: "47"
                averageTax: "1.7553191"
                rangeDays: "25.05"
                operationsOnSignature: "47"
                buyerWhoAuthorized: "47"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/dashboards/program-summaries"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/sellers/10/dashboards"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/subscriptions:
    get:
      tags:
      - "Email Subscription Settings"
      summary: "List"
      description: ""
      operationId: "sellersubscription/FindOneSellerSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "true"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/subscriptions"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    put:
      tags:
      - "Email Subscription Settings"
      summary: "Update"
      description: ""
      operationId: "sellersubscription/UpdateSellerSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rdStationSubscription"
            example:
              account: false
              payable: false
              profile: true
              transactional: false
              information: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "false"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/subscriptions"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{companyId}/devices:
    post:
      tags:
      - "Devices"
      summary: "Create User-Device Link"
      description: ""
      operationId: "selleruserdevice/CreateSellerUserDeviceContract.json"
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rdStationUserDeviceRequest"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationEntityModelUserDevice"
  /v2/sellers/{id}/configurations:
    get:
      tags:
      - "Supplier Configurations"
      summary: "Detail"
      description: ""
      operationId: "sellerconfigurationweb/findOneSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelSellerConfiguration"
              example:
                automatedOffer: "true"
                numberOfAdhesionTermSigners: "1"
                bankAccountApprovalByLegalResponsibles: "false"
                createdAt: "2024-05-10T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "127.0.0.1"
                updatedAt: "2024-05-10T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    put:
      tags:
      - "Supplier Configurations"
      summary: "Update"
      description: ""
      operationId: "sellerconfigurationweb/updateSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sellerSellerConfiguration"
            example:
              automatedOffer: true
              numberOfAdhesionTermSigners: 1
              bankAccountApprovalByLegalResponsibles: false
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelSellerConfiguration"
              example:
                automatedOffer: "true"
                numberOfAdhesionTermSigners: "1"
                bankAccountApprovalByLegalResponsibles: "false"
                createdAt: "2024-05-10T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "127.0.0.1"
                updatedAt: "2024-05-10T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    post:
      tags:
      - "Supplier Configurations"
      summary: "Configure"
      description: ""
      operationId: "sellerconfigurationweb/createSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sellerSellerConfiguration"
            example:
              automatedOffer: true
              numberOfAdhesionTermSigners: 1
              bankAccountApprovalByLegalResponsibles: false
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelSellerConfiguration"
              example:
                automatedOffer: "true"
                numberOfAdhesionTermSigners: "1"
                bankAccountApprovalByLegalResponsibles: "false"
                createdAt: "2024-05-10T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "127.0.0.1"
                updatedAt: "2024-05-10T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/configurations"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/change-requests:
    get:
      tags:
      - "Bank Account Change Requests"
      summary: "List"
      description: ""
      operationId: "bankaccountchangerequestweb/findAllBankAccountChangeRequestContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sellerSpecificationBankAccountChangeRequest"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sellerPageable"
      - name: "'type'"
        in: "query"
        required: true
        example: "BANK_ACCOUNT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerPagedModelEntityModelBankAccountChangeRequest"
              example:
                _embedded:
                  bank-account-change-requests:
                  - createdAt: "2024-04-01T18:32:56Z"
                    createUserId: "some_user@monkey.tech"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2024-04-01T18:32:57Z"
                    lastUserId: "some_user@monkey.tech"
                    lastUserIp: "127.0.0.1"
                    alias: "237 - BANCO BRADESCO S.A. / Ag. 1112 / Cc. 22223-4"
                    bank: "237"
                    bankName: "237 - BANCO BRADESCO S.A."
                    agency: "1112"
                    account: "22223"
                    accountDigit: "4"
                    type: "CREATE"
                    status: "APPROVAL"
                    approvers:
                    - createdAt: "2024-04-01T18:32:57Z"
                      createUserId: "some_user@monkey.tech"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2024-04-01T18:32:57Z"
                      lastUserId: "some_user@monkey.tech"
                      lastUserIp: "127.0.0.1"
                      email: "main_user@monkey.tech"
                      name: "User Name"
                      status: "APPROVAL"
                      expiresAt: "2024-04-08"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/1676301097/change-requests/CAQjUQqHjz?type=BANK_ACCOUNT"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/1676301097"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/1676301097/change-requests?type=BANK_ACCOUNT&search=status:APPROVAL&page=0&size=10"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Bank Account Change Requests"
      summary: "Create"
      description: ""
      operationId: "bankaccountchangerequestweb/createBankAccountChangeRequestContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "'type'"
        in: "query"
        required: true
        example: "BANK_ACCOUNT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sellerBankAccountChangeRequest"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelBankAccountChangeRequest"
              example:
                createdAt: "2024-04-01T18:32:56Z"
                createUserId: "some_user@monkey.tech"
                createUserIp: "127.0.0.1"
                updatedAt: "2024-04-01T18:32:57Z"
                lastUserId: "some_user@monkey.tech"
                lastUserIp: "127.0.0.1"
                alias: "237 - BANCO BRADESCO S.A. / Ag. 1112 / Cc. 22223-4"
                bank: "237"
                bankName: "237 - BANCO BRADESCO S.A."
                agency: "1112"
                account: "22223"
                accountDigit: "4"
                type: "CREATE"
                status: "APPROVAL"
                approvers:
                - createdAt: "2024-04-01T18:32:57Z"
                  createUserId: "some_user@monkey.tech"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2024-04-01T18:32:57Z"
                  lastUserId: "some_user@monkey.tech"
                  lastUserIp: "127.0.0.1"
                  email: "main_user@monkey.tech"
                  name: "User Name"
                  status: "APPROVAL"
                  expiresAt: "2024-04-08"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/1676301097/change-requests/CAQjUQqHjz?type=BANK_ACCOUNT"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/1676301097"
                    type: "GET"
  /v2/sellers/{id}/bank-accounts:
    get:
      tags:
      - "Bank Account"
      summary: "List"
      description: ""
      operationId: "bankaccountweb/findAllBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sellerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerPagedModelEntityModelBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "Conta buyer 10"
                    bank: "033"
                    bankName: "Santander"
                    agency: "3333"
                    account: "66666666"
                    accountDigit: "6"
                    main: "true"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/10/bank-accounts/99"
                        type: "GET"
                      update:
                        href: "http://localhost/v2/sellers/10/bank-accounts/99"
                        type: "PATCH"
                      delete:
                        href: "http://localhost/v2/sellers/10/bank-accounts/99"
                        type: "DELETE"
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/bank-accounts?page=0&size=20"
                  create:
                    href: "http://localhost/v2/sellers/10/bank-accounts"
                    type: "POST"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Bank Account"
      summary: "Create"
      description: ""
      operationId: "bankaccountweb/createBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sellerBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
              main: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                main: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "PATCH"
                  delete:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "DELETE"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/bank-accounts/{bankAccountId}:
    get:
      tags:
      - "Bank Account"
      summary: "Detail"
      description: ""
      operationId: "bankaccountweb/findOneBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                main: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "PATCH"
                  delete:
                    href: "http://localhost/v2/sellers/10/bank-accounts/99"
                    type: "DELETE"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    delete:
      tags:
      - "Bank Account"
      summary: "Delete"
      description: ""
      operationId: "bankaccountweb/deleteBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        204:
          description: "No Content"
    patch:
      tags:
      - "Bank Account"
      summary: "Update"
      description: ""
      operationId: "bankaccountweb/updateBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sellerBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
              main: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        204:
          description: "No Content"
  /v2/sellers/{id}/change-requests/{changeRequestId}:
    get:
      tags:
      - "Bank Account Change Requests"
      summary: "Find"
      description: ""
      operationId: "bankaccountchangerequestweb/findOneBankAccountChangeRequestContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "changeRequestId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "'type'"
        in: "query"
        required: true
        example: "BANK_ACCOUNT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerEntityModelBankAccountChangeRequest"
              example:
                createdAt: "2024-04-01T18:32:56Z"
                createUserId: "some_user@monkey.tech"
                createUserIp: "127.0.0.1"
                updatedAt: "2024-04-01T18:32:57Z"
                lastUserId: "some_user@monkey.tech"
                lastUserIp: "127.0.0.1"
                alias: "237 - BANCO BRADESCO S.A. / Ag. 1112 / Cc. 22223-4"
                bank: "237"
                bankName: "237 - BANCO BRADESCO S.A."
                agency: "1112"
                account: "22223"
                accountDigit: "4"
                type: "CREATE"
                status: "APPROVAL"
                approvers:
                - createdAt: "2024-04-01T18:32:57Z"
                  createUserId: "some_user@monkey.tech"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2024-04-01T18:32:57Z"
                  lastUserId: "some_user@monkey.tech"
                  lastUserIp: "127.0.0.1"
                  email: "main_user@monkey.tech"
                  name: "User Name"
                  status: "APPROVAL"
                  expiresAt: "2024-04-08"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/1676301097/change-requests/CAQjUQqHjz?type=BANK_ACCOUNT"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/1676301097"
                    type: "GET"
  /v2/sellers/{id}/buyers:
    get:
      tags:
      - "Investors"
      summary: "List"
      description: ""
      operationId: "buyersellerweb/findAllBuyersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/sellerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/sellerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sellerPagedModelEntityModelBuyerSeller"
              example:
                _embedded:
                  buyers:
                  - createdAt: "2010-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2011-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    buyerName: "Monkey Buyer"
                    buyerGovernmentId: "50851124000159"
                    status: "APPROVED"
                    _links:
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                      documents:
                        href: "http://localhost/v2/sellers/10/document-models/50851124000159/assignments"
                        type: "GET"
                      messages:
                        href: "http://localhost/v1/sellers/45493745000178/buyers/50851124000159/messages"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/buyers?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/program-amendments/{uuid}/remind:
    post:
      tags:
      - "Program Adhesion Term Amendment"
      summary: "Resend Adhesion Term Amendment Email"
      description: ""
      operationId: "programamendmentweb/AmendmentRemindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        202:
          description: "Accepted"
  /v2/sellers/{id}/program-adhesion-terms/{uuid}/remind:
    post:
      tags:
      - "Program Adhesion Term"
      summary: "Resend Adhesion Term Email"
      description: ""
      operationId: "programadhesiontermweb/AdhesionTermRemindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        202:
          description: "Accepted"
  /v2/sellers/{id}/adhesion-terms/{uuid}/remind:
    post:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "Resend Adhesion Term Email"
      description: ""
      operationId: "buyeradhesiontermweb/AdhesionTermRemindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        202:
          description: "Accepted"
  /v2/sellers/{id}/adhesion-terms/{uuid}/ignore:
    post:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "Ignore Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermweb/AdhesionTermIgnore.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTerm"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                status: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S"
                    type: "GET"
                  signers:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/signers"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  remind:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/remind"
                    type: "POST"
                  ignore:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/ignore"
                    type: "POST"
  /v2/sellers/{id}/program-amendments:
    get:
      tags:
      - "Program Adhesion Term Amendment"
      summary: "List Adhesion Term Amendments"
      description: ""
      operationId: "programamendmentweb/AmendmentList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignSpecificationProgramAmendment"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignPagedModelEntityModelProgramAmendment"
              example:
                _embedded:
                  program-amendments:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    name: "Amendment 1"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    status: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S"
                        type: "GET"
                      signers:
                        href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S/signers"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/95"
                        type: "GET"
                      remind:
                        href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S/remind"
                        type: "POST"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-amendments?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/program-amendments/{uuid}:
    get:
      tags:
      - "Program Adhesion Term Amendment"
      summary: "Find Adhesion Term Amendment"
      description: ""
      operationId: "programamendmentweb/AmendmentFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelProgramAmendment"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                name: "Amendment 1"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                status: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S/file?type=COMBINED"
                    type: "GET"
                  signers:
                    href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S/signers"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{id}/program-amendments/{uuid}/signers:
    get:
      tags:
      - "Program Adhesion Term Amendment"
      summary: "List Adhesion Term Amendment Signers"
      description: ""
      operationId: "programamendmentweb/AmendmentSigners.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignCollectionModelDocumentSigner"
              example:
                _embedded:
                  signers:
                  - email: "felipe@monkey.exchange"
                    name: "Felipe Adorno"
                    status: "DELIVERED"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S/signers"
                  amendment:
                    href: "http://localhost/v2/sellers/95/program-amendments/ORga1sHd6S"
  /v2/sellers/{id}/program-amendments/{uuid}/file:
    get:
      tags:
      - "Program Adhesion Term Amendment"
      summary: "Download Adhesion Term Amendment"
      description: ""
      operationId: "AmendmentDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "combined"
          enum:
          - "COMBINED"
          - "CERTIFICATE"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{id}/program-adhesion-terms:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "List Adhesion Terms"
      description: ""
      operationId: "programadhesiontermweb/AdhesionTermList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignSpecificationProgramAdhesionTerm"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignPagedModelEntityModelProgramAdhesionTerm"
              example:
                _embedded:
                  program-adhesion-terms:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    status: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S"
                        type: "GET"
                      file:
                        href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S/file?type=COMBINED"
                        type: "GET"
                      signers:
                        href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S/signers"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/program-adhesion-terms/{uuid}:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "Find Adhesion Term"
      description: ""
      operationId: "programadhesiontermweb/AdhesionTermFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelProgramAdhesionTerm"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                status: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S"
                    type: "GET"
                  signers:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S/signers"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  remind:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S/remind"
                    type: "POST"
  /v2/sellers/{id}/program-adhesion-terms/{uuid}/signers:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "List Adhesion Term Signers"
      description: ""
      operationId: "programadhesiontermweb/AdhesionTermSigners.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignCollectionModelDocumentSigner"
              example:
                _embedded:
                  signers:
                  - email: "felipe@monkey.exchange"
                    name: "Felipe Adorno"
                    status: "DELIVERED"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S/signers"
                  program-adhesion-term:
                    href: "http://localhost/v2/sellers/95/program-adhesion-terms/ORga1sHd6S"
  /v2/sellers/{id}/program-adhesion-terms/{uuid}/file:
    get:
      tags:
      - "Program Adhesion Term"
      summary: "Download Adhesion Term"
      description: ""
      operationId: "ProgramAdhesionTermDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "combined"
          enum:
          - "COMBINED"
          - "CERTIFICATE"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{id}/adhesion-terms:
    get:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "List Adhesion Terms"
      description: ""
      operationId: "buyeradhesiontermweb/AdhesionTermList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignSpecificationBuyerAdhesionTerm"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/externalSignPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignPagedModelEntityModelBuyerAdhesionTerm"
              example:
                _embedded:
                  adhesion-terms:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    buyerName: "BNP"
                    buyerGovernmentId: "45646546545646"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    status: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S"
                        type: "GET"
                      file:
                        href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/file?type=COMBINED"
                        type: "GET"
                      signers:
                        href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/signers"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/adhesion-terms?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/adhesion-terms/{uuid}:
    get:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "Find Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermweb/AdhesionTermFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTerm"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                status: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S"
                    type: "GET"
                  signers:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/signers"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  remind:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/remind"
                    type: "POST"
                  ignore:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/ignore"
                    type: "POST"
  /v2/sellers/{id}/adhesion-terms/{uuid}/signers:
    get:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "List Adhesion Term Signers"
      description: ""
      operationId: "buyeradhesiontermweb/AdhesionTermSigners.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignCollectionModelDocumentSigner"
              example:
                _embedded:
                  signers:
                  - email: "felipe@monkey.exchange"
                    name: "Felipe Adorno"
                    status: "DELIVERED"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S/signers"
                  adhesion-term:
                    href: "http://localhost/v2/sellers/95/adhesion-terms/ORga1sHd6S"
  /v2/sellers/{id}/adhesion-terms/{uuid}/file:
    get:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "Download Adhesion Term"
      description: ""
      operationId: "BuyerAdhesionTermDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "combined"
          enum:
          - "COMBINED"
          - "CERTIFICATE"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{id}/events:
    get:
      tags:
      - "Event History"
      summary: "List"
      description: ""
      operationId: "sellerauditingeventweb/FindAllAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosSpecificationAuditingEvent"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosPagedModelEntityModelAuditingEvent"
              example:
                _embedded:
                  events:
                  - createdAt: "2009-11-09T16:36:49.364+0000"
                    user: "monkey_tester@monkey.com"
                    userIp: "10.0.0.1"
                    traceId: "756"
                    type: "Conta Bancária Deletada"
                    details:
                    - label: "CNPJ"
                      value: "42641777000185"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/10/events/a331a1f0-37bc-4c68-bde2-c9a940a9068d"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/events?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/events/{eventId}:
    get:
      tags:
      - "Event History"
      summary: "Find an Event by ID"
      description: ""
      operationId: "sellerauditingeventweb/FindOneAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                user: "monkey_tester@monkey.com"
                userIp: "10.0.0.1"
                traceId: "756"
                type: "Conta Bancária Deletada"
                details:
                - label: "CNPJ"
                  value: "42641777000185"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/events/{eventId}/details/{receivedEventId}:
    get:
      tags:
      - "Event History"
      summary: "Detail"
      description: ""
      operationId: "sellerauditingeventweb/FindOneAuditingEventDetailContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "receivedEventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEventDetailResource"
              example:
                detail:
                  companyId: 569083186
                  companyType: "SELLER"
                  program: "monkey"
                  signers:
                  - email: "jose@monkey.exchange"
                    name: "José"
                    governmentId: "08317139689"
                  - email: "carlos@monkey.exchange"
                    name: "Carlos"
                    governmentId: "08317139689"
                  storedEventId: "fd1091aa-5113-4364-87e5-047fcef40c57"
                  relationId: "monkey"
                  eventType: "ProgramAdhesionTermConfigurationUpdatedEvent"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e/details/fd1091aa-5113-4364-87e5-047fcef40c57"
                    type: "GET"
                  event:
                    href: "http://localhost/v2/sellers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v1/sellers/{sellerId}/users/{username}:
    get:
      tags:
      - "Users"
      summary: "Find User"
      description: ""
      operationId: "sellerweb/SellerFindOne.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    put:
      tags:
      - "Users"
      summary: "Change Access Level"
      description: ""
      operationId: "sellerweb/SellerUpdate.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoSellerRoleResource"
            example:
              role: "VIEW"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    delete:
      tags:
      - "Users"
      summary: "Remove User Access"
      description: ""
      operationId: "sellerweb/SellerDelete.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        204:
          description: "No Content"
  /v1/sellers/{sellerId}/users:
    get:
      tags:
      - "Users"
      summary: "List Users"
      description: ""
      operationId: "sellerweb/SellerFindAll.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoSpecificationUserCompany"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoPagedModelEntityModelUserCompany"
              example:
                _embedded:
                  profiles:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    role: "ADMIN"
                    status: "ACTIVE"
                    companyId: "1614639283"
                    governmentId: "71537251000158"
                    name: "Felipe Teste Assinatura"
                    type: "SELLER"
                    adhesionTerm: "false"
                    program: "jallesmachado"
                    username: "felipe@monkey.exchange"
                    _links:
                      self:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "GET"
                      delete:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "DELETE"
                      update:
                        href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                        type: "PUT"
                      seller:
                        href: "http://localhost/v2/sellers/123"
                        type: "GET"
                      me:
                        href: "http://localhost/me"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Users"
      summary: "Grant User Access"
      description: ""
      operationId: "sellerweb/SellerCreate.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoSellerCompanyResource"
            example:
              email: "sponsorjallesmachado2@gmail.com"
              role: "ADMIN"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "SELLER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/sellers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  seller:
                    href: "http://localhost/v2/sellers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
  /v2/sellers/{sellerId}/challenges/{id}:
    post:
      tags:
      - "Challenge"
      summary: "Answer"
      description: ""
      operationId: "challengeweb/AnswerChallengeContract.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationChallengeRequest"
            example:
              answer: "2023-09-10"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
  /v2/sellers/{id}/orders:
    post:
      tags:
      - "Simulation Of Operations"
      summary: "Create An Anticipation Simulation"
      description: ""
      operationId: "orderweb/StartOrderContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationOrderStarterDTO"
            example:
              amount: 10000
              sponsorId: 126
              paymentDateMinimum: "2018-10-23"
              paymentDateMaximum: "2018-10-25"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOrderStarterDTO"
              example:
                amount: "10000"
                sponsorId: "126"
                paymentDateMinimum: "2018-10-23"
                paymentDateMaximum: "2018-10-25"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sellers/95/processes/vKCOxKuUn3"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{id}/orders/{orderId}/offers:
    get:
      tags:
      - "Simulation Of Operations"
      summary: "List Anticipation Offers Of A Simulation"
      description: ""
      operationId: "orderoperationweb/FindAllOperationsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelOfferDTO"
              example:
                _embedded:
                  offers:
                  - status: "ACTIVE"
                    tax: "1.1"
                    alias: "RECEBIMENTO"
                    bank: "Banco Santander (Brasil) S. A."
                    agency: "123"
                    account: "45678"
                    accountDigit: "1"
                    paymentValue: "39353"
                    sponsorName: "FEL"
                    sponsorGovernmentId: "55452236000150"
                    sponsorPictureUrl: "https://monkeypictures/1.jpeg"
                    sponsorAddress: "Alameda dos Nhambiquaras"
                    sponsorAddressNumber: "11111111"
                    sponsorAddressComplement: "complement"
                    sponsorNeighborhood: "Indianópolis"
                    sponsorCity: "São Paulo"
                    sponsorState: "SP"
                    sponsorCountry: "Brasil"
                    sponsorZipCode: "04090011"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc"
                        type: "GET"
                page:
                  size: 1
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Simulation Of Operations"
      summary: "Create Anticipation Offer"
      description: ""
      operationId: "orderoperationweb/StartOperationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/operationOrderOfferRequest"
            example:
              bankAccountId: 101
              passNumber1: 12
              passNumber2: 23
              passNumber3: 34
              passNumber4: 45
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOrderDTO"
              example:
                sponsorName: "PINE SPONSOR"
                sponsorPictureUrl: "https://monkeypictures-company.s3.amazonaws.com/2/coca.jpg.07-01-2017%2005%3A14%3A23%2092"
                sponsorGovernmentId: "15900570000105"
                total: "6000"
                discount: "191.95"
                receiptValue: "5808.05"
                averageTax: "3.456"
                averageTenor: "55"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/items"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sellers/95/processes/vKCOxKuUn3"
                    type: "GET"
                  offer-process:
                    href: "http://localhost/v2/sellers/95/processes/vKCOxKuUn3"
                    type: "GET"
                  offers:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/offers"
                    type: "GET"
  /v2/sellers/{id}/orders/{orderId}/items/{itemId}:
    post:
      tags:
      - "Simulation Of Operations"
      summary: "Add Title To Simulation"
      description: ""
      operationId: "orderitemweb/AddOrderItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "itemId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOrderItemDTO"
              example:
                receivableUuid: "8VZnfmfsyT"
                paymentDate: "2018-11-09T16:36:49.364+0000"
                paymentValue: "4000"
                selected: "false"
                tax: "4.4"
                days: "57"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                invoiceNumber: "659321"
                _links:
                  add:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/items/8VZnfmfsyT"
                    type: "POST"
                  order:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
    delete:
      tags:
      - "Simulation Of Operations"
      summary: "Remove Title From Simulation"
      description: ""
      operationId: "orderitemweb/RemoveOrderItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "itemId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        204:
          description: "No Content"
  /v2/sellers/{sellerId}/markets:
    get:
      tags:
      - "Market Status"
      summary: "Market Operation Hours"
      description: ""
      operationId: "sellermarketweb/GETMarketTradingHoursContract.json"
      parameters:
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelMarket"
              example:
                today: "2019-11-28"
                marketStatus: "OPEN"
                lastWorkingDay: "2019-11-28"
                nextWorkingDay: "2019-11-28"
                openMarketHour: "9"
                closedMarketHour: "18"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/markets"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/selling-summaries:
    get:
      tags:
      - "Simulation Of Operations"
      summary: "List Summaries For Anticipation"
      description: ""
      operationId: "sellersellingsumaryweb/SellingSummaryContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationCollectionModelEntityModelSellingSummaryDTO"
              example:
                _embedded:
                  selling-summaries:
                  - sponsorId: "2"
                    sponsorName: "COCA"
                    sponsorGovernmentId: "12345600019095"
                    amount: "54222.5"
                    minimumDaysToOffer: "7"
                    _links:
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                      certificates:
                        href: "http://localhost/v2/sellers/49989588000147/certificates"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/selling-summaries"
                    type: "GET"
  /v2/sellers/{id}/receivables:
    get:
      tags:
      - "Accounts Receivable"
      summary: "List Accounts Receivable"
      description: ""
      operationId: "receivableweb/ListReceivableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationInvoice"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelReceivableDTO"
              example:
                _embedded:
                  receivables:
                  - paymentDate: "2020-08-20"
                    createdAt: "2020-04-20"
                    paymentValue: "1222.23"
                    invoiceNumber: "54564654564"
                    installment: "1"
                    realPaymentDate: "1994"
                    externalId: "g68NFvLqwt"
                    status: "ACTIVE"
                    purchasedTax: "1.23"
                    totalInstallment: "10"
                    invoiceDate: "2020-04-18"
                    invoiceKey: "5645645D4SA6D4AS65D4SA"
                    sponsorName: "ABB"
                    sponsorGovernmentId: "61074829000808"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2020-04-21T13:25:03.871270Z"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                      self:
                        href: "http://localhost/v2/sellers/10/receivables/ORga1sHd6S"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/receivables?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/receivables/{uuid}:
    get:
      tags:
      - "Accounts Receivable"
      summary: "Search Account Receivable"
      description: ""
      operationId: "receivableweb/GetReceivableContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "uuid"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelReceivableDTO"
              example:
                paymentDate: "2020-08-20"
                createdAt: "2020-04-20"
                paymentValue: "1222.23"
                invoiceNumber: "54564654564"
                installment: "1"
                realPaymentDate: "1994"
                externalId: "g68NFvLqwt"
                status: "ACTIVE"
                purchasedTax: "1.23"
                totalInstallment: "10"
                invoiceDate: "2020-04-18"
                invoiceKey: "5645645D4SA6D4AS65D4SA"
                sponsorName: "ABB"
                sponsorGovernmentId: "61074829000808"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2020-04-21T13:25:03.871270Z"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/sellers/10/receivables/ORga1sHd6S"
                    type: "GET"
  /v2/sellers/{id}/processes/{processId}:
    get:
      tags:
      - "Asynchronous Processes"
      summary: "Track Asynchronous Process"
      description: ""
      operationId: "sellerprocessweb/GetProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelProcess"
              example:
                type: "CREATING_OFFER"
                processed: "false"
                detail: "error detail"
                createdAt: "2012-04-23T18:25:43.511Z"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2012-04-23T18:25:43.511Z"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/processes/ouL1BKaAmh"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
  /v2/sellers/{id}/orders/{orderId}:
    get:
      tags:
      - "Simulation Of Operations"
      summary: "Search Simulation"
      description: ""
      operationId: "orderweb/GetOrderContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOrderDTO"
              example:
                sponsorName: "PINE SPONSOR"
                sponsorPictureUrl: "https://monkeypictures-company.s3.amazonaws.com/2/coca.jpg.07-01-2017%2005%3A14%3A23%2092"
                sponsorGovernmentId: "15900570000105"
                total: "6000"
                discount: "191.95"
                receiptValue: "5808.05"
                averageTax: "3.456"
                averageTenor: "55"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                numberOfSelectedItems: "2"
                receivementDate: "2019-02-01"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/items"
                    type: "GET"
                  offers:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/offers"
                    type: "POST"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
  /v2/sellers/{id}/orders/{orderId}/items:
    get:
      tags:
      - "Simulation Of Operations"
      summary: "List Titles Of Simulation"
      description: ""
      operationId: "orderitemweb/GetOrderItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "orderId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationOrderItem"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelOrderItemDTO"
              example:
                _embedded:
                  order-items:
                  - receivableUuid: "8VZnfmfsyT"
                    paymentDate: "2018-11-09T16:36:49.364+0000"
                    paymentValue: "4000"
                    selected: "false"
                    tax: "4.4"
                    days: "57"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    invoiceNumber: "659321"
                    _links:
                      add:
                        href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3/items/8VZnfmfsyT"
                        type: "POST"
                      order:
                        href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/95"
                        type: "GET"
                page:
                  size: 1
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/offers:
    get:
      tags:
      - "Operations"
      summary: "List Anticipation Offers"
      description: ""
      operationId: "offerweb/FindAllOffersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationOperation"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelOfferDTO"
              example:
                _embedded:
                  offers:
                  - status: "ACTIVE"
                    tax: "1.1"
                    alias: "RECEBIMENTO"
                    bank: "Banco Santander (Brasil) S. A."
                    agency: "123"
                    account: "45678"
                    accountDigit: "1"
                    paymentValue: "39353"
                    receiptValue: "3900"
                    sponsorName: "FEL"
                    sponsorGovernmentId: "55452236000150"
                    sponsorPictureUrl: "https://monkeypictures/1.jpeg"
                    sponsorAddress: "Alameda dos Nhambiquaras"
                    sponsorAddressNumber: "11111111"
                    sponsorAddressComplement: "complement"
                    sponsorNeighborhood: "Indianópolis"
                    sponsorCity: "São Paulo"
                    sponsorState: "SP"
                    sponsorCountry: "Brasil"
                    sponsorZipCode: "04090011"
                    items: "7"
                    approvedSummary:
                      quantity: "20"
                      averageTax: "1.1"
                      paymentValue: "39353"
                      receiptValue: "3900"
                    unapprovedSummary:
                      quantity: "0"
                      averageTax: "0"
                      paymentValue: "0"
                      receiptValue: "0"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc"
                        type: "GET"
                      items:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/sellers/10"
                        type: "GET"
                      receivement-account:
                        href: "http://localhost/v2/sellers/10/bank-accounts/44"
                        type: "GET"
                      order:
                        href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                        type: "GET"
                      signature:
                        href: "http://localhost/v2/sellers/10/signatures/f8YTR45bG2"
                        type: "GET"
                      approved-items:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items?search=status:SOLD"
                        type: "GET"
                      unapproved-items:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items?search=status:REFUSED"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/offers?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/offers/{offerId}:
    get:
      tags:
      - "Operations"
      summary: "Search Anticipation Offer"
      description: ""
      operationId: "offerweb/FindOneOfferContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "offerId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOfferDTO"
              example:
                status: "ACTIVE"
                tax: "1.1"
                alias: "RECEBIMENTO"
                bank: "Banco Santander (Brasil) S. A."
                agency: "123"
                account: "45678"
                accountDigit: "1"
                paymentValue: "39353"
                receiptValue: "3900"
                sponsorName: "FEL"
                sponsorGovernmentId: "55452236000150"
                sponsorPictureUrl: "https://monkeypictures/1.jpeg"
                sponsorAddress: "Alameda dos Nhambiquaras"
                sponsorAddressNumber: "11111111"
                sponsorAddressComplement: "complement"
                sponsorNeighborhood: "Indianópolis"
                sponsorCity: "São Paulo"
                sponsorState: "SP"
                sponsorCountry: "Brasil"
                sponsorZipCode: "04090011"
                items: "21"
                approvedSummary:
                  quantity: "20"
                  averageTax: "1.1"
                  paymentValue: "39353"
                  receiptValue: "3900"
                unapprovedSummary:
                  quantity: "0"
                  averageTax: "0"
                  paymentValue: "0"
                  receiptValue: "0"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
                  receivement-account:
                    href: "http://localhost/v2/sellers/10/bank-accounts/44"
                    type: "GET"
                  order:
                    href: "http://localhost/v2/sellers/95/orders/vKCOxKuUn3"
                    type: "GET"
                  signature:
                    href: "http://localhost/v2/sellers/10/signatures/f8YTR45bG2"
                    type: "GET"
                  approved-items:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items?search=status:SOLD"
                    type: "GET"
                  unapproved-items:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items?search=status:REFUSED"
                    type: "GET"
  /v2/sellers/{id}/offers/{offerId}/offer-items:
    get:
      tags:
      - "Operations"
      summary: "List Items Of Anticipation Offer"
      description: ""
      operationId: "offeritemweb/FindAllOfferItemsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "offerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationOperationItem"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelOfferItemDTO"
              example:
                _embedded:
                  offer-items:
                  - tax: "1.1"
                    sponsorTax: "0.1"
                    status: "ACTIVE"
                    invoiceKey: "abc16"
                    invoiceNumber: "abc16"
                    invoiceDate: "2018-11-09T16:36:49.364+0000"
                    installment: "1"
                    totalInstallment: "10"
                    paymentDate: "2018-11-09T16:36:49.364+0000"
                    effectivePaymentDate: "2018-11-19T16:36:49.364+0000"
                    paymentValue: "39353"
                    receiptValue: "39353"
                    externalId: "abc16"
                    uuid: "oVU2dUQVar"
                    receivableUuid: "iFteEnFF6n"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items/oVU2dUQVar"
                        type: "GET"
                      offer:
                        href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/sellers/{id}/offers/{offerId}/offer-items/{itemId}:
    get:
      tags:
      - "Operations"
      summary: "Search Item Of Anticipation Offer"
      description: ""
      operationId: "offeritemweb/FindOneOfferItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "offerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "itemId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationMessage"
                - $ref: "#/components/schemas/operationEntityModelMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelOfferItemDTO"
              example:
                tax: "1.1"
                sponsorTax: "0.1"
                status: "ACTIVE"
                invoiceKey: "abc16"
                invoiceNumber: "abc16"
                invoiceDate: "2018-11-09T16:36:49.364+0000"
                installment: "1"
                totalInstallment: "10"
                paymentDate: "2018-11-09T16:36:49.364+0000"
                effectivePaymentDate: "2018-11-19T16:36:49.364+0000"
                paymentValue: "39353"
                receiptValue: "39353"
                externalId: "abc16"
                uuid: "oVU2dUQVar"
                receivableUuid: "iFteEnFF6n"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc/offer-items/oVU2dUQVar"
                    type: "GET"
                  offer:
                    href: "http://localhost/v2/sellers/10/offers/0WU5nCeqjc"
                    type: "GET"
  /v2/sellers/{id}/report-configurations/{reportType}:
    get:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Search Current Configuration"
      description: ""
      operationId: "sellerconfigurationweb/FindOneSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSellerReportConfiguration"
              example:
                createdAt: "2022-08-10T17:45:54Z"
                createUserId: "UNKNOWN"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-10T17:45:54Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sponsorName"
                  order: "1"
                  description: "Nome Sacado"
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "supplierName"
                  order: "2"
                  description: "Nome"
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "invoiceNumber"
                  order: "3"
                  description: "NF"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "GET"
                  create:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "POST"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    put:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Update Current Configuration"
      description: ""
      operationId: "sellerconfigurationweb/UpdateSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportSellerReportConfiguration"
            example:
              details:
              - columnId: "buyerGovernmentId"
                order: 1
              - columnId: "invoiceNumber"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSellerReportConfiguration"
              example:
                createdAt: "2022-08-31T21:54:06Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-31T21:54:06Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-31T21:56:24.674990Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-31T21:56:24.674990Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "buyerGovernmentId"
                  order: "1"
                  description: "CNPJ Banco"
                - createdAt: "2022-08-31T21:56:24.675950Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-31T21:56:24.675950Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "invoiceNumber"
                  order: "2"
                  description: "NF"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "DELETE"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
    post:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Create New Configuration"
      description: ""
      operationId: "sellerconfigurationweb/CreateSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportSellerReportConfiguration"
            example:
              details:
              - columnId: "paymentDate"
                order: 1
              - columnId: "paymentValue"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSellerReportConfiguration"
              example:
                createdAt: "2022-08-29T16:30:37.090684Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-29T16:30:37.133432Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-29T16:30:37.118871Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-29T16:30:37.118871Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "paymentDate"
                  order: "1"
                  description: "Data Vencimento"
                - createdAt: "2022-08-29T16:30:37.125294Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-29T16:30:37.125294Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "paymentValue"
                  order: "2"
                  description: "Valor NF"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/sellers/10/report-configurations/RECEIVABLE"
                    type: "DELETE"
                  seller:
                    href: "http://localhost/v2/sellers/6710890"
                    type: "GET"
    delete:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Delete Current Configuration"
      description: ""
      operationId: "sellerconfigurationweb/DeleteSellerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        204:
          description: "No Content"
  /v2/sellers/{id}/reports:
    post:
      tags:
      - "Reports"
      summary: "Create Report"
      description: ""
      operationId: "sellerreportweb/StartSellerReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                report:
                  $ref: "#/components/schemas/reportReport"
                search:
                  type: "string"
            example:
              startDate: "2020-05-05"
              endDate: "2020-06-06"
              type: "RECEIVABLE"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-05-05"
                endDate: "2021-06-06"
                type: "RECEIVABLE"
                createdAt: "202021-07-09T16:36:49.364+0000"
                createUserId: "email@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "email@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/reports/asd123fgh4"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sellers/95/report-processes/U5VQsp4pBF"
                    type: "GET"
  /v2/sellers/{id}/reports/{reportId}:
    get:
      tags:
      - "Reports"
      summary: "Search Report"
      description: ""
      operationId: "sellerreportweb/FindOneSellerReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-06-01"
                endDate: "2021-06-30"
                type: "RECEIVABLE"
                createdAt: "2021-07-09T16:36:49.364+0000"
                createUserId: "EMAIL@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "EMAIL@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/95/reports/asd123fgh4"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/sellers/95/report-processes/U5VQsp4pBF"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/95"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sellers/95/reports/asd123fgh4/file"
                    type: "GET"
  /v2/sellers/{id}/reports/{reportId}/file:
    get:
      tags:
      - "Reports"
      summary: "Download Report"
      description: ""
      operationId: "SellerReportDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/sellers/{id}/report-templates/{reportType}:
    get:
      tags:
      - "Dynamic Report Template"
      summary: "Search Available Columns For Report"
      description: ""
      operationId: "sellertemplateweb/FindOneSellerTemplateContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelSellerReportTemplate"
              example:
                details:
                - columnId: "supplierGovernmentId"
                  description: "CNPJ Fornecedor"
                - columnId: "sponsorId"
                  description: "ID Sacado"
                - columnId: "buyerName"
                  description: "Nome Banco"
                - columnId: "totalInstallment"
                  description: "Total de Parcelas"
                - columnId: "createdAt"
                  description: "Data Operação"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/11/report-templates/RECEIVABLE"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/11"
                    type: "GET"
  /v2/sellers/{id}/report-processes/{processId}:
    get:
      tags:
      - "Report Generation Processes"
      summary: "Track Report Generation Process"
      description: ""
      operationId: "sellerprocessweb/FindOneSellerProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelProcess"
              example:
                type: "RECEIVABLE"
                processed: "true"
                createdAt: "2021-06-23T18:25:43.511Z"
                createUserId: "email@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2021-06-23T18:25:43.511Z"
                lastUserId: "email@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/10/report-processes/ouL1BKaAmh"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/10"
                    type: "GET"
                  report:
                    href: "http://localhost/v2/sellers/95/reports/asd123fgh4"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/sellers/95/reports/asd123fgh4/file"
                    type: "GET"
components:
  schemas:
    signMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    signBuyerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
          description: "Type"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
          description: "Name"
        templated:
          type: "boolean"
    signSellerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Government ID"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signSignature:
      required:
      - "amount"
      - "buyerGovernmentId"
      - "buyerName"
      - "reportCode"
      - "sellerGovernmentId"
      - "sellerName"
      - "sponsorGovernmentId"
      - "sponsorName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        sponsorSignature:
          type: "string"
          description: "Sponsor Signature"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        sellerSignature:
          type: "string"
          description: "Supplier Signature"
        buyerName:
          type: "string"
          description: "Buyer Name."
        buyerGovernmentId:
          type: "string"
          description: "Buyer Government ID"
        buyerSignature:
          type: "string"
          description: "Buyer Signature"
        reportCode:
          type: "string"
          description: "Report Code"
        amount:
          type: "number"
          description: "Quantity."
        sponsorSignatureStatus:
          type: "string"
          description: "Sponsor Signature Status"
        sellerSignatureStatus:
          type: "string"
          description: "Supplier Signature Status"
        buyerSignatureStatus:
          type: "string"
          description: "Buyer Signature Status"
        numberOfSellerSignatures:
          type: "integer"
          description: "Number Of Suppliers Signatures"
          format: "int32"
        sellerSignatures:
          type: "array"
          description: "Supplier Signatures"
          items:
            $ref: "#/components/schemas/signSellerSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        buyerSignatures:
          type: "array"
          description: "Buyer Signatures"
          items:
            $ref: "#/components/schemas/signBuyerSignature"
        assignmentDocumentHash:
          type: "string"
          description: "Assignment Document Hash"
        notificationDocumentHash:
          type: "string"
          description: "Notification Document Hash"
    signPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    signPagedModelSignature:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            signatures:
              type: "array"
              items:
                $ref: "#/components/schemas/signSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        page:
          $ref: "#/components/schemas/signPageMetadata"
    dashboardMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    dashboardEntityModelSellerDashboardResource:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/dashboardLink"
    dashboardEntityModelSellerProgramSummaryDashboard:
      type: "object"
      properties:
        amountPayableAvailable:
          type: "number"
          description: "Available Payable Amount"
        quantityPayableAvailable:
          type: "integer"
          description: "Available Payable Quantity"
          format: "int64"
        amountPayableOnApproval:
          type: "number"
          description: "Payable Amount On Approval"
        quantityPayableOnApproval:
          type: "integer"
          description: "Payable Quantity On Approval"
          format: "int64"
        anticipatedValue:
          type: "number"
          description: "Anticipated Value"
        anticipatedQuantity:
          type: "integer"
          description: "Anticipated Quantity"
          format: "int64"
        averageTax:
          type: "number"
          description: "Average Tax"
          format: "float"
        rangeDays:
          type: "number"
          description: "Range Of Days"
          format: "float"
        operationsOnSignature:
          type: "integer"
          description: "Operations On Signature"
          format: "int64"
        buyerWhoAuthorized:
          type: "integer"
          description: "Buyer Who Authorized"
          format: "int64"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    rdStationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    rdStationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/rdStationLink"
    rdStationSubscription:
      required:
      - "information"
      - "payable"
      - "profile"
      - "transactional"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        account:
          type: "boolean"
          description: "Account"
        payable:
          type: "boolean"
          description: "Receive Email Notifications of Invoice Availability"
        profile:
          type: "boolean"
        transactional:
          type: "boolean"
          description: "Receive Transactional Email Notifications"
        information:
          type: "boolean"
          description: "Receive General Information Email Notifications"
        _links:
          $ref: "#/components/schemas/rdStationLinks"
    rdStationUserDeviceRequest:
      required:
      - "token"
      type: "object"
      properties:
        token:
          type: "string"
    rdStationEntityModelUserDevice:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        username:
          type: "string"
        token:
          type: "string"
        companyId:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/rdStationLinks"
    rdStationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    sellerMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
          - "Automated_Offer_Configuration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    sellerSellerConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        automatedOffer:
          type: "boolean"
          description: "Automated Offer"
        numberOfAdhesionTermSigners:
          type: "integer"
          description: "Number Of Adhesion Term Signers"
          format: "int32"
        bankAccountApprovalByLegalResponsibles:
          type: "boolean"
          description: "Bank Account Approval"
    sellerEntityModelSellerConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        automatedOffer:
          type: "boolean"
          description: "Automated Offer"
        numberOfAdhesionTermSigners:
          type: "integer"
          description: "Number Of Adhesion Term Signers"
          format: "int32"
        bankAccountApprovalByLegalResponsibles:
          type: "boolean"
          description: "Bank Account Approval"
        _links:
          $ref: "#/components/schemas/sellerLinks"
    sellerLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/sellerLink"
    sellerBankAccountChangeRequest:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        type:
          type: "string"
          description: "Type"
          enum:
          - "CREATE"
          - "DELETE"
        status:
          type: "string"
          description: "Status"
          enum:
          - "APPROVAL"
          - "APPROVED"
          - "REFUSED"
        approvers:
          type: "array"
          description: "Approvers"
          items:
            $ref: "#/components/schemas/sellerBankAccountChangeRequestApprover"
    sellerBankAccountChangeRequestApprover:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
          enum:
          - "APPROVAL"
          - "APPROVED"
          - "REFUSED"
        expiresAt:
          type: "string"
          description: "Expiration Date"
          format: "date"
    sellerEntityModelBankAccountChangeRequest:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        type:
          type: "string"
          description: "Type"
          enum:
          - "CREATE"
          - "DELETE"
        status:
          type: "string"
          description: "Status"
          enum:
          - "APPROVAL"
          - "APPROVED"
          - "REFUSED"
        approvers:
          type: "array"
          description: "Approvers"
          items:
            $ref: "#/components/schemas/sellerBankAccountChangeRequestApprover"
        _links:
          $ref: "#/components/schemas/sellerLinks"
    sellerBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        main:
          type: "boolean"
          description: "Primary"
    sellerEntityModelBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Account Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        main:
          type: "boolean"
          description: "Primary"
        _links:
          $ref: "#/components/schemas/sellerLinks"
    sellerSpecificationBankAccountChangeRequest:
      type: "object"
    sellerPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    sellerPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    sellerPagedModelEntityModelBankAccountChangeRequest:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-account-change-requests:
              type: "array"
              items:
                $ref: "#/components/schemas/sellerEntityModelBankAccountChangeRequest"
        _links:
          $ref: "#/components/schemas/sellerLinks"
        page:
          $ref: "#/components/schemas/sellerPageMetadata"
    sellerEntityModelBuyerSeller:
      required:
      - "buyerGovernmentId"
      - "buyerName"
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        buyerName:
          type: "string"
          description: "Buyer Name"
        buyerGovernmentId:
          type: "string"
          description: "Buyer CNPJ"
        status:
          type: "string"
          description: "Status"
        _links:
          $ref: "#/components/schemas/sellerLinks"
    sellerPagedModelEntityModelBuyerSeller:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            buyers:
              type: "array"
              items:
                $ref: "#/components/schemas/sellerEntityModelBuyerSeller"
        _links:
          $ref: "#/components/schemas/sellerLinks"
        page:
          $ref: "#/components/schemas/sellerPageMetadata"
    sellerPagedModelEntityModelBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/sellerEntityModelBankAccount"
        _links:
          $ref: "#/components/schemas/sellerLinks"
        page:
          $ref: "#/components/schemas/sellerPageMetadata"
    sellerLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    externalSignMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    externalSignEntityModelBuyerAdhesionTerm:
      required:
      - "sellerGovernmentId"
      - "sellerName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        buyerName:
          type: "string"
          description: "Investor Name"
        buyerGovernmentId:
          type: "string"
          description: "Investor GovernmentId"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier GovernmentId"
        status:
          type: "string"
          description: "Status"
          enum:
          - "GENERATING"
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
          - "IGNORED"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/externalSignLink"
    externalSignSpecificationProgramAmendment:
      type: "object"
    externalSignPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    externalSignEntityModelProgramAmendment:
      required:
      - "sellerGovernmentId"
      - "sellerName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        name:
          type: "string"
          description: "Name"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier GovernmentId"
        status:
          type: "string"
          description: "Status"
          enum:
          - "GENERATING"
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
          - "IGNORED"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    externalSignPagedModelEntityModelProgramAmendment:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-amendments:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignEntityModelProgramAmendment"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
        page:
          $ref: "#/components/schemas/externalSignPageMetadata"
    externalSignCollectionModelDocumentSigner:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            signers:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignDocumentSigner"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignDocumentSigner:
      required:
      - "email"
      - "name"
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
          enum:
          - "SENT"
          - "AUTHENTICATION_FAILED"
          - "DELIVERED"
          - "COMPLETED"
          - "DECLINED"
    externalSignSpecificationProgramAdhesionTerm:
      type: "object"
    externalSignEntityModelProgramAdhesionTerm:
      required:
      - "sellerGovernmentId"
      - "sellerName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier GovernmentId"
        status:
          type: "string"
          description: "Status"
          enum:
          - "GENERATING"
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
          - "EXPIRED"
          - "IGNORED"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignPagedModelEntityModelProgramAdhesionTerm:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            program-adhesion-terms:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignEntityModelProgramAdhesionTerm"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
        page:
          $ref: "#/components/schemas/externalSignPageMetadata"
    externalSignSpecificationBuyerAdhesionTerm:
      type: "object"
    externalSignPagedModelEntityModelBuyerAdhesionTerm:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            adhesion-terms:
              type: "array"
              items:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTerm"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
        page:
          $ref: "#/components/schemas/externalSignPageMetadata"
    externalSignLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    spyrosMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    spyrosSpecificationAuditingEvent:
      type: "object"
    spyrosPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    spyrosAuditingEventDetail:
      type: "object"
      properties:
        label:
          type: "string"
          description: "Label"
        value:
          type: "string"
          description: "Value"
    spyrosEntityModelAuditingEvent:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        user:
          type: "string"
          description: "User"
        userIp:
          type: "string"
          description: "User IP"
        traceId:
          type: "string"
          description: "Trace ID"
        type:
          type: "string"
          description: "Type"
        details:
          type: "array"
          description: "Details"
          items:
            $ref: "#/components/schemas/spyrosAuditingEventDetail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/spyrosLink"
    spyrosPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    spyrosPagedModelEntityModelAuditingEvent:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            events:
              type: "array"
              items:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
        page:
          $ref: "#/components/schemas/spyrosPageMetadata"
    spyrosEntityModelAuditingEventDetailResource:
      type: "object"
      properties:
        detail:
          type: "object"
          additionalProperties:
            type: "object"
          description: "Detail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    ssoMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
          - "change_password_required"
          - "new_device_used"
          - "user_not_confirmed"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    ssoSellerRoleResource:
      required:
      - "role"
      type: "object"
      properties:
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE|USER_MANAGER"
          type: "string"
    ssoEntityModelUserCompany:
      type: "object"
      properties:
        role:
          type: "string"
          enum:
          - "ADMIN"
          - "EXECUTE"
          - "SELECTOR"
          - "VIEW"
          - "BACK_OFFICE"
          - "WHOLESALE"
          - "RETAIL"
          - "USER_MANAGER"
        status:
          type: "string"
          enum:
          - "APPROVAL"
          - "FRAUD_DETECTED"
          - "PRE_CHECK"
          - "ACTIVE"
          - "INACTIVE"
          - "FRAUD_CONFIRMED"
          - "APPROVED"
        companyId:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
          enum:
          - "SPONSOR"
          - "SELLER"
          - "BUYER"
        adhesionTerm:
          type: "boolean"
        program:
          type: "string"
        product:
          type: "string"
          enum:
          - "SUPPLY_CHAIN"
          - "SALES_FINANCE"
          - "SPIKE"
          - "FINANCIAL_MANAGEMENT"
        username:
          type: "string"
        user:
          type: "string"
        email:
          type: "string"
        _links:
          $ref: "#/components/schemas/ssoLinks"
    ssoLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/ssoLink"
    ssoSellerCompanyResource:
      required:
      - "email"
      - "role"
      type: "object"
      properties:
        email:
          type: "string"
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE|USER_MANAGER"
          type: "string"
    ssoSpecificationUserCompany:
      type: "object"
    ssoPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    ssoPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    ssoPagedModelEntityModelUserCompany:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            profiles:
              type: "array"
              items:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
        _links:
          $ref: "#/components/schemas/ssoLinks"
        page:
          $ref: "#/components/schemas/ssoPageMetadata"
    ssoLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    operationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
          - "Adhesion_Term_Not_Signed"
          - "Order_Expired"
          - "Invoice_Date_Challenge"
          - "Invoice_Payment_Date_Challenge"
          - "Invoice_Payment_Value_Challenge"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    operationEntityModelMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
          - "Adhesion_Term_Not_Signed"
          - "Order_Expired"
          - "Invoice_Date_Challenge"
          - "Invoice_Payment_Date_Challenge"
          - "Invoice_Payment_Value_Challenge"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/operationLink"
    operationChallengeRequest:
      required:
      - "answer"
      type: "object"
      properties:
        answer:
          type: "string"
    operationOrderStarterDTO:
      required:
      - "amount"
      - "paymentDateMaximum"
      - "paymentDateMinimum"
      - "sponsorId"
      type: "object"
      properties:
        sponsorId:
          type: "integer"
          format: "int32"
        paymentDateMinimum:
          type: "string"
          format: "date"
        paymentDateMaximum:
          type: "string"
          format: "date"
        amount:
          type: "number"
    operationEntityModelOrderStarterDTO:
      required:
      - "amount"
      - "paymentDateMaximum"
      - "paymentDateMinimum"
      - "sponsorId"
      type: "object"
      properties:
        sponsorId:
          type: "integer"
          format: "int32"
        paymentDateMinimum:
          type: "string"
          format: "date"
        paymentDateMaximum:
          type: "string"
          format: "date"
        amount:
          type: "number"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationOrderOfferRequest:
      required:
      - "bankAccountId"
      - "passNumber1"
      - "passNumber2"
      - "passNumber3"
      - "passNumber4"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        passNumber1:
          type: "string"
        passNumber2:
          type: "string"
        passNumber3:
          type: "string"
        passNumber4:
          type: "string"
        bankAccountId:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelOrderDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        averageTax:
          type: "number"
          format: "float"
        averageTenor:
          type: "number"
          format: "float"
        discount:
          type: "number"
        numberOfSelectedItems:
          type: "integer"
          format: "int32"
        receiptValue:
          type: "number"
        receivementDate:
          type: "string"
          format: "date"
        sponsorName:
          type: "string"
        sponsorPictureUrl:
          type: "string"
        sponsorGovernmentId:
          type: "string"
        total:
          type: "number"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelOrderItemDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        receivableUuid:
          type: "string"
        paymentDate:
          type: "string"
          format: "date"
        realPaymentDate:
          type: "string"
          format: "date"
        effectivePaymentDate:
          type: "string"
          format: "date"
        paymentValue:
          type: "number"
        selected:
          type: "boolean"
        tax:
          type: "number"
          format: "float"
        sponsorTax:
          type: "number"
          format: "float"
        days:
          type: "integer"
          format: "int32"
        invoiceNumber:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelMarket:
      type: "object"
      properties:
        today:
          type: "string"
          format: "date"
        marketStatus:
          type: "string"
          enum:
          - "OPEN"
          - "CLOSED"
        lastWorkingDay:
          type: "string"
          format: "date"
        nextWorkingDay:
          type: "string"
          format: "date"
        openMarketHour:
          type: "integer"
          format: "int32"
        closedMarketHour:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationCollectionModelEntityModelSellingSummaryDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            selling-summaries:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelSellingSummaryDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelSellingSummaryDTO:
      type: "object"
      properties:
        sponsorId:
          type: "integer"
          format: "int32"
        sponsorName:
          type: "string"
        sponsorGovernmentId:
          type: "string"
        sellerGovernmentId:
          type: "string"
        amount:
          type: "number"
        minimumDaysToOffer:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationSpecificationInvoice:
      type: "object"
    operationPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    operationEntityModelReceivableDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        status:
          type: "string"
          enum:
          - "SOLD"
          - "PAID"
          - "REFUSED"
          - "CANCELLED"
          - "WAITING_CUSTODY"
          - "WAITING_DELETE"
          - "ACTIVE"
          - "OFFERED"
          - "DELAYED"
        assetType:
          type: "string"
        paymentDate:
          type: "string"
          format: "date"
        realPaymentDate:
          type: "string"
          format: "date"
        paymentValue:
          type: "number"
        invoiceDate:
          type: "string"
          format: "date"
        invoiceNumber:
          type: "string"
        invoiceKey:
          type: "string"
        externalId:
          type: "string"
        installment:
          type: "integer"
          format: "int32"
        totalInstallment:
          type: "integer"
          format: "int32"
        sponsorName:
          type: "string"
        sponsorGovernmentId:
          type: "string"
        purchasedTax:
          type: "number"
          format: "float"
        buyerGovernmentId:
          type: "string"
        buyerName:
          type: "string"
        receiptValue:
          type: "number"
        effectivePaymentDate:
          type: "string"
          format: "date"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    operationPagedModelEntityModelReceivableDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            receivables:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelReceivableDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
          enum:
          - "CREATING_ORDER"
          - "CREATING_OFFER"
          - "DELETING_INVOICES"
          - "FOR_TESTS_NEVER_USE"
        step:
          type: "integer"
          format: "int64"
        totalSteps:
          type: "integer"
          format: "int64"
        processed:
          type: "boolean"
        detail:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationEntityModelOfferDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        status:
          type: "string"
        tax:
          type: "number"
          format: "float"
        paymentValue:
          type: "number"
        receiptValue:
          type: "number"
        receivementDate:
          type: "string"
          format: "date"
        account:
          type: "string"
        accountDigit:
          type: "string"
        agency:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        approvedSummary:
          $ref: "#/components/schemas/operationOfferSummaryDTO"
        unapprovedSummary:
          $ref: "#/components/schemas/operationOfferSummaryDTO"
        sponsorName:
          type: "string"
        sponsorGovernmentId:
          type: "string"
        sponsorPictureUrl:
          type: "string"
        sponsorAddress:
          type: "string"
        sponsorAddressNumber:
          type: "string"
        sponsorAddressComplement:
          type: "string"
        sponsorNeighborhood:
          type: "string"
        sponsorCity:
          type: "string"
        sponsorState:
          type: "string"
        sponsorCountry:
          type: "string"
        sponsorZipCode:
          type: "string"
        items:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationOfferSummaryDTO:
      type: "object"
      properties:
        averageTax:
          type: "number"
          format: "float"
        paymentValue:
          type: "number"
        quantity:
          type: "integer"
          format: "int64"
        receiptValue:
          type: "number"
    operationPagedModelEntityModelOfferDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            offers:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelOfferDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationOrderItem:
      type: "object"
    operationPagedModelEntityModelOrderItemDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            orders-items:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelOrderItemDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationOperation:
      type: "object"
    operationSpecificationOperationItem:
      type: "object"
    operationEntityModelOfferItemDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        uuid:
          type: "string"
        assetType:
          type: "string"
        externalId:
          type: "string"
        installment:
          type: "integer"
          format: "int32"
        totalInstallment:
          type: "integer"
          format: "int32"
        invoiceDate:
          type: "string"
          format: "date"
        invoiceNumber:
          type: "string"
        invoiceKey:
          type: "string"
        paymentDate:
          type: "string"
          format: "date"
        effectivePaymentDate:
          type: "string"
          format: "date"
        paymentValue:
          type: "number"
        receiptValue:
          type: "number"
        sponsorReceiptValue:
          type: "number"
        tax:
          type: "number"
          format: "double"
        sponsorTax:
          type: "number"
          format: "double"
        receivableUuid:
          type: "string"
        status:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelOfferItemDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            offer-items:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelOfferItemDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    reportMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    reportSellerReportConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSellerReportConfigurationDetail"
    reportSellerReportConfigurationDetail:
      required:
      - "columnId"
      - "order"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        columnId:
          type: "string"
        order:
          type: "integer"
          format: "int32"
        description:
          type: "string"
    reportEntityModelSellerReportConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSellerReportConfigurationDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/reportLink"
    reportReport:
      required:
      - "endDate"
      - "startDate"
      - "type"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        documentHash:
          type: "string"
    reportEntityModelReport:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        documentHash:
          type: "string"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportEntityModelSellerReportTemplate:
      type: "object"
      properties:
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportSellerReportTemplateDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportSellerReportTemplateDetail:
      type: "object"
      properties:
        columnId:
          type: "string"
        description:
          type: "string"
    reportEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
        step:
          type: "integer"
          format: "int64"
        totalSteps:
          type: "integer"
          format: "int64"
        processed:
          type: "boolean"
        detail:
          type: "string"
        companyId:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
