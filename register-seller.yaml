---
openapi: "3.0.1"
info:
  title: "Monkey API"
  version: "1.0"
servers:
- url: "https://hmg-zuul.monkeyecx.com"
  description: "Staging Server"
- url: "https://zuul.monkey.exchange"
  description: "Production Server"
paths:
  /v2/sellers/{governmentId}/steps/summarized-legal-responsible:
    get:
      tags:
      - "CaCo - Legal Entity - Summarized Legal Responsible Registration."
      summary: "Detail"
      description: ""
      operationId: "summarizedsellersteplegalresponsibleweb/findOneSummarizedSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepLegalResponsibles"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  email: "teste@monkey.com.br"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-address"
                    type: "GET"
    put:
      tags:
      - "CaCo - Legal Entity - Summarized Legal Responsible Registration."
      summary: "Update"
      description: ""
      operationId: "summarizedsellersteplegalresponsibleweb/putSummarizedSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepLegalResponsibles"
            example:
              legalResponsibles:
              - name: "Carlos Alberto"
                governmentId: "08317139689"
                birthdayDate: "1980-10-09"
                email: "teste@monkey.com.br"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepLegalResponsibles"
              example:
                createdAt: "2022-03-04T18:59:25Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-03-04T18:59:26Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  email: "teste@monkey.com.br"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "GET"
    post:
      tags:
      - "CaCo - Legal Entity - Summarized Legal Responsible Registration."
      summary: "Insert"
      description: ""
      operationId: "summarizedsellersteplegalresponsibleweb/createSummarizedSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepLegalResponsibles"
            example:
              legalResponsibles:
              - name: "Carlos Alberto"
                governmentId: "08317139689"
                email: "teste@monkey.com.br"
                birthdayDate: "1980-10-09"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepLegalResponsibles"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  email: "teste@monkey.com.br"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "GET"
  /v2/sellers/{governmentId}/steps/summarized-company:
    get:
      tags:
      - "CaCo - Legal Entity - Summarized Company Registration."
      summary: "Detail"
      description: ""
      operationId: "summarizedsellerstepcompanyweb/findOneSummarizedSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepCompany"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                governmentId: "64343229000101"
                name: "Test Company"
                fantasyName: "Test Company Fantasy"
                foundationDate: "2015-11-09T16:36:49.364+0000"
                phone: "5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "GET"
    put:
      tags:
      - "CaCo - Legal Entity - Summarized Company Registration."
      summary: "Update"
      description: ""
      operationId: "summarizedsellerstepcompanyweb/putSummarizedSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepCompany"
            example:
              name: "Test Company"
              fantasyName: "Test Company Fantasy"
              foundationDate: "2015-11-09"
              phone: "5511988637566"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepCompany"
              example:
                createdAt: "2022-02-24T18:18:14Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-24T18:18:14Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                governmentId: "64343229000101"
                name: "Test Company"
                fantasyName: "Test Company Fantasy"
                foundationDate: "2015-11-09T16:36:49.364+0000"
                phone: "5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "POST"
    post:
      tags:
      - "CaCo - Legal Entity - Summarized Company Registration."
      summary: "Insert"
      description: ""
      operationId: "summarizedsellerstepcompanyweb/createSummarizedSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepCompany"
            example:
              name: "Test Company"
              fantasyName: "Test Company Fantasy"
              foundationDate: "2015-11-09"
              phone: "5511988637566"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepCompany"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                governmentId: "64343229000101"
                name: "Test Company"
                fantasyName: "Test Company Fantasy"
                foundationDate: "2015-11-09T16:36:49.364+0000"
                phone: "5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/summarized-address:
    get:
      tags:
      - "CaCo - Legal Entity - Summarized Address Registration."
      summary: "Detail"
      description: ""
      operationId: "summarizedsellerstepaddressweb/findOneSummarizedSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "GET"
    put:
      tags:
      - "CaCo - Legal Entity - Summarized Address Registration."
      summary: "Update"
      description: ""
      operationId: "summarizedsellerstepaddressweb/putSummarizedSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepAddress"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                zipCode: "38701627"
                address: "Rua Maria Abadia Martins Ferreira"
                addressNumber: "99"
                addressComplement: "AP 01"
                neighborhood: "Nossa Senhora de Fátima"
                city: "Patos de Minas"
                state: "MG"
                country: "Brasil"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/summarized-company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "POST"
    post:
      tags:
      - "CaCo - Legal Entity - Summarized Address Registration."
      summary: "Insert"
      description: ""
      operationId: "summarizedsellerstepaddressweb/createSummarizedSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SummarizedSellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSummarizedSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/summarized-legal-responsible"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/picture:
    get:
      tags:
      - "Legal Entity - Image Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellersteppictureweb/findOneSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "/test/picture.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Image Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellersteppictureweb/putSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepPicture"
            example:
              pictureURL: "//img/monkey.png"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "/test/picture.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "GET"
    post:
      tags:
      - "Legal Entity - Image Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellersteppictureweb/createSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepPicture"
            example:
              pictureURL: "//img/monkey.png"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "//img/monkey.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "GET"
  /v2/sellers/{governmentId}/steps/phone:
    get:
      tags:
      - "Legal Entity - Phone Data Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellerstepphoneweb/findOneSellerStepPhoneContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPhone"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                mainPhone: "11-1234-2548"
                phone: "11-2345-3587"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/phone"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Phone Data Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellerstepphoneweb/putSellerStepPhoneContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepPhone"
            example:
              mainPhone: "11-1234-2548"
              phone: "11-2345-3587"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPhone"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                mainPhone: "11-1234-2548"
                phone: "11-2345-3587"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "POST"
    post:
      tags:
      - "Legal Entity - Phone Data Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellerstepphoneweb/createSellerStepPhoneContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepPhone"
            example:
              mainPhone: "11-1234-2548"
              phone: "11-2345-3587"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepPhone"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                mainPhone: "11-1234-2548"
                phone: "11-2345-3587"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/legal-responsible:
    get:
      tags:
      - "Legal Entity - Legal Responsible Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellersteplegalresponsibleweb/findOneSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepLegalResponsibles"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  type: "PARTNER"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123232323"
                  phone: "19-9132-5591"
                  email: "teste@monkey.com.br"
                  financialAuthority: "true"
                  financialAuthorityValue: "9999999999.99"
                  nationalRegistrationDocument:
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    fileName: "1.jpeg"
                    url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/phone"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Legal Responsible Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellersteplegalresponsibleweb/putSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepLegalResponsibles"
            example:
              legalResponsibles:
              - name: "Carlos Alberto"
                governmentId: "08317139689"
                type: "PARTNER"
                birthdayDate: "1980-10-09"
                documentType: "RG"
                documentNumber: "123232323"
                phone: "19-9132-5591"
                email: "teste@monkey.com.br"
                financialAuthority: true
                financialAuthorityValue: 9.99999999999E9
                nationalRegistrationDocument:
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepLegalResponsibles"
              example:
                createdAt: "2022-03-04T18:59:25Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-03-04T18:59:26Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  type: "DIRECTOR"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123232323"
                  phone: "19-9132-5591"
                  email: "teste@monkey.com.br"
                  financialAuthority: "true"
                  financialAuthorityValue: "9999999999.99"
                  nationalRegistrationDocument:
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    fileName: "1.jpeg"
                    url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/document"
                    type: "POST"
    post:
      tags:
      - "Legal Entity - Legal Responsible Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellersteplegalresponsibleweb/createSellerStepLegalResponsibleContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepLegalResponsibles"
            example:
              legalResponsibles:
              - name: "Carlos Alberto"
                governmentId: "08317139689"
                type: "PARTNER"
                birthdayDate: "1980-10-09"
                documentType: "RG"
                documentNumber: "123232323"
                phone: "1991325591"
                email: "teste@monkey.com.br"
                financialAuthority: true
                financialAuthorityValue: 9.99999999999E9
                nationalRegistrationDocument:
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepLegalResponsibles"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                legalResponsibles:
                - createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  name: "Carlos Alberto"
                  governmentId: "82456625000127"
                  type: "PARTNER"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123232323"
                  phone: "1991325591"
                  email: "teste@monkey.com.br"
                  financialAuthority: "true"
                  financialAuthorityValue: "9999999999.99"
                  nationalRegistrationDocument:
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    fileName: "1.jpeg"
                    url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/document:
    get:
      tags:
      - "Legal Entity - Document Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellerstepdocumentweb/findOneSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                socialContractDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                boardMinutesDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "2.jpeg"
                  url: "http://2.jpeg"
                procurationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "3.jpeg"
                  url: "http://3.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/legal-responsible"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Document Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellerstepdocumentweb/putSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepDocuments"
            example:
              socialContractDocument:
                fileName: "1.jpeg"
                url: "http://1.jpeg"
              boardMinutesDocument:
                fileName: "2.jpeg"
                url: "http://2.jpeg"
              procurationDocument:
                fileName: "3.jpeg"
                url: "http://3.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                socialContractDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                boardMinutesDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "2.jpeg"
                  url: "http://2.jpeg"
                procurationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "3.jpeg"
                  url: "http://3.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "POST"
    post:
      tags:
      - "Legal Entity - Document Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellerstepdocumentweb/createSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepDocuments"
            example:
              socialContractDocument:
                fileName: "1.jpeg"
                url: "http://1.jpeg"
              boardMinutesDocument:
                fileName: "2.jpeg"
                url: "http://2.jpeg"
              procurationDocument:
                fileName: "3.jpeg"
                url: "http://3.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                socialContractDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                boardMinutesDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "2.jpeg"
                  url: "http://2.jpeg"
                procurationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "3.jpeg"
                  url: "http://3.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/legal-responsible"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/company:
    get:
      tags:
      - "Legal Entity - Company Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellerstepcompanyweb/findOneSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepCompany"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                name: "Test Company"
                fantasyName: "Test Company Fantasy"
                foundationDate: "2015-11-09T16:36:49.364+0000"
                activityCode: "0113-0/00"
                legalNature: "LTDA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Company Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellerstepcompanyweb/putSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepCompany"
            example:
              name: "Test Company"
              fantasyName: "Test Company Fantasy"
              foundationDate: "2015-11-09"
              activityCode: "0113-0/00"
              legalNature: "LTDA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepCompany"
              example:
                createdAt: "2022-02-24T18:18:14Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-24T18:18:14Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                governmentId: "64343229000101"
                name: "Company Name Other"
                fantasyName: "Fanstasy Company Test"
                foundationDate: "1986-11-02"
                activityCode: "1111/01"
                legalNature: "SA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "POST"
    post:
      tags:
      - "Legal Entity - Company Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellerstepcompanyweb/createSellerStepCompanyContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepCompany"
            example:
              name: "Test Company"
              fantasyName: "Test Company Fantasy"
              foundationDate: "2015-11-09"
              activityCode: "0113-0/00"
              legalNature: "LTDA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepCompany"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                name: "Test Company"
                fantasyName: "Test Company Fantasy"
                foundationDate: "2015-11-09T16:36:49.364+0000"
                activityCode: "0113-0/00"
                legalNature: "LTDA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/address:
    get:
      tags:
      - "Legal Entity - Address Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellerstepaddressweb/findOneSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "GET"
    put:
      tags:
      - "Legal Entity - Address Registration."
      summary: "Update"
      description: ""
      operationId: "legalsellerstepaddressweb/putSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepAddress"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                zipCode: "38701627"
                address: "Rua Maria Abadia Martins Ferreira"
                addressNumber: "99"
                addressComplement: "AP 01"
                neighborhood: "Nossa Senhora de Fátima"
                city: "Patos de Minas"
                state: "MG"
                country: "Brasil"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "POST"
    post:
      tags:
      - "Legal Entity - Address Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellerstepaddressweb/createSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/64343229000101/steps/address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/company"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/phone"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/person:
    get:
      tags:
      - "Individual - Person Registration."
      summary: "Detail"
      description: ""
      operationId: "naturalsellersteppersonweb/findOneSellerStepPersonContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPerson"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                name: "38701627"
                email: "felipe@monkey.exchange"
                birthdayDate: "1989-09-30"
                mobilePhone: "+5511988637566"
                landlinePhone: "+5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
    put:
      tags:
      - "Individual - Person Registration."
      summary: "Update"
      description: ""
      operationId: "naturalsellersteppersonweb/putSellerStepPersonContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepPerson"
            example:
              name: "Felipe Adorno"
              email: "felipe@monkey.exchange"
              birthdayDate: "1989-09-30"
              mobilePhone: "+5511988637566"
              landlinePhone: "+5511988637566"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPerson"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                name: "38701627"
                email: "felipe@monkey.exchange"
                birthdayDate: "1989-09-30"
                mobilePhone: "+5511988637566"
                landlinePhone: "+5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "POST"
    post:
      tags:
      - "Individual - Person Registration."
      summary: "Insert"
      description: ""
      operationId: "naturalsellersteppersonweb/createSellerStepPersonContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepPerson"
            example:
              name: "Felipe Adorno"
              email: "felipe@monkey.exchange"
              birthdayDate: "1989-09-30"
              mobilePhone: "+5511988637566"
              landlinePhone: "+5511988637566"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPerson"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                name: "38701627"
                email: "felipe@monkey.exchange"
                birthdayDate: "1989-09-30"
                mobilePhone: "+5511988637566"
                landlinePhone: "+5511988637566"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "PUT"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/person-picture:
    get:
      tags:
      - "Individual - Image Registration."
      summary: "Detail"
      description: ""
      operationId: "naturalsellersteppictureweb/findOneSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "/test/picture.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
    put:
      tags:
      - "Individual - Image Registration."
      summary: "Update"
      description: ""
      operationId: "naturalsellersteppictureweb/putSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepPicture"
            example:
              pictureURL: "//img/monkey.png"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "/test/picture.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
    post:
      tags:
      - "Individual - Image Registration."
      summary: "Insert"
      description: ""
      operationId: "naturalsellersteppictureweb/createSellerStepPictureContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepPicture"
            example:
              pictureURL: "//img/monkey.png"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepPicture"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                pictureURL: "//img/monkey.png"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
  /v2/sellers/{governmentId}/steps/person-document:
    get:
      tags:
      - "Individual - Document Registration."
      summary: "Detail"
      description: ""
      operationId: "naturalsellerstepdocumentweb/findOneSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                documentType: "RG"
                documentNumber: "461426262"
                nationalRegistrationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
    put:
      tags:
      - "Individual - Document Registration."
      summary: "Update"
      description: ""
      operationId: "naturalsellerstepdocumentweb/putSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepDocuments"
            example:
              documentType: "RG"
              documentNumber: "461426262"
              nationalRegistrationDocument:
                fileName: "1.jpeg"
                url: "http://1.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                documentType: "RG"
                documentNumber: "461426262"
                nationalRegistrationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "POST"
    post:
      tags:
      - "Individual - Document Registration."
      summary: "Insert"
      description: ""
      operationId: "naturalsellerstepdocumentweb/createSellerStepDocumentContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepDocuments"
            example:
              documentType: "RG"
              documentNumber: "461426262"
              nationalRegistrationDocument:
                fileName: "1.jpeg"
                url: "http://1.jpeg"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepDocuments"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                documentType: "RG"
                documentNumber: "461426262"
                nationalRegistrationDocument:
                  createdAt: "2009-11-09T16:36:49.364+0000"
                  createUserId: "monkey_tester@monkey.com"
                  createUserIp: "10.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "monkey_tester@monkey.com"
                  lastUserIp: "10.0.0.1"
                  fileName: "1.jpeg"
                  url: "http://1.jpeg"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/person-address:
    get:
      tags:
      - "Individual - Address Registration."
      summary: "Detail"
      description: ""
      operationId: "naturalsellerstepaddressweb/findOneSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
    put:
      tags:
      - "Individual - Address Registration."
      summary: "Update"
      description: ""
      operationId: "naturalsellerstepaddressweb/putSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepAddress"
              example:
                createdAt: "2022-02-26T17:26:46Z"
                createUserId: "anonymousUserv"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-02-26T17:26:46Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                zipCode: "38701627"
                address: "Rua Maria Abadia Martins Ferreira"
                addressNumber: "99"
                addressComplement: "AP 01"
                neighborhood: "Nossa Senhora de Fátima"
                city: "Patos de Minas"
                state: "MG"
                country: "Brasil"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "POST"
    post:
      tags:
      - "Individual - Address Registration."
      summary: "Insert"
      description: ""
      operationId: "naturalsellerstepaddressweb/createSellerStepAddressContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepAddress"
            example:
              zipCode: "04090011"
              address: "Rua B"
              addressNumber: "100 A"
              addressComplement: "AP 15"
              neighborhood: "Bela Vista"
              city: "Catanduva"
              state: "PR"
              country: "EUA"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepAddress"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                zipCode: "04090011"
                address: "Rua B"
                addressNumber: "100 A"
                addressComplement: "AP 15"
                neighborhood: "Bela Vista"
                city: "Catanduva"
                state: "PR"
                country: "EUA"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                    type: "PUT"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/{program}:
    post:
      tags:
      - "Registration Steps."
      summary: "Migrate To Another Program"
      description: ""
      operationId: "sellerstepsweb/migrateSellerStepsContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "program"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        202:
          description: "Accepted"
  /v2/sellers/{governmentId}/documents/{documentType}:
    get:
      tags:
      - "Document Upload"
      summary: "Download"
      description: ""
      operationId: "downloadDocumentFile"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "COMPANY_IMAGES_SPONSOR"
          - "COMPANY_IMAGES_SELLER"
          - "COMPANY_IMAGES_BUYER"
          - "SPONSOR_SOCIAL_CONTRACT"
          - "SPONSOR_REVENUE_RATIO"
          - "SPONSOR_FINANCIAL_STATEMENTS"
          - "SPONSOR_BANK_BORROWING"
          - "NATURAL_SELLER_NATIONAL_REGISTRATION"
          - "SELLER_SOCIAL_CONTRACT"
          - "SELLER_BOARD_MINUTES"
          - "SELLER_PROCURATION"
          - "NATURAL_SPONSOR_NATIONAL_REGISTRATION"
          - "BUYER_SOCIAL_CONTRACT"
          - "BUYER_PROCURATION"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
                format: "binary"
    post:
      tags:
      - "Document Upload"
      summary: "Upload"
      description: ""
      operationId: "sellerdocumentweb/UploadDocumentFile.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "COMPANY_IMAGES_SPONSOR"
          - "COMPANY_IMAGES_SELLER"
          - "COMPANY_IMAGES_BUYER"
          - "SPONSOR_SOCIAL_CONTRACT"
          - "SPONSOR_REVENUE_RATIO"
          - "SPONSOR_FINANCIAL_STATEMENTS"
          - "SPONSOR_BANK_BORROWING"
          - "NATURAL_SELLER_NATIONAL_REGISTRATION"
          - "SELLER_SOCIAL_CONTRACT"
          - "SELLER_BOARD_MINUTES"
          - "SELLER_PROCURATION"
          - "NATURAL_SPONSOR_NATIONAL_REGISTRATION"
          - "BUYER_SOCIAL_CONTRACT"
          - "BUYER_PROCURATION"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "document"
              type: "object"
              properties:
                document:
                  type: "string"
                  format: "binary"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelDocumentFile"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/sellers/57648355000109/documents/SELLER_SOCIAL_CONTRACT"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/57648355000109"
                    type: "GET"
    delete:
      tags:
      - "Document Upload"
      summary: "Delete"
      description: ""
      operationId: "sellerdocumentweb/DeleteDocumentFile.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "COMPANY_IMAGES_SPONSOR"
          - "COMPANY_IMAGES_SELLER"
          - "COMPANY_IMAGES_BUYER"
          - "SPONSOR_SOCIAL_CONTRACT"
          - "SPONSOR_REVENUE_RATIO"
          - "SPONSOR_FINANCIAL_STATEMENTS"
          - "SPONSOR_BANK_BORROWING"
          - "NATURAL_SELLER_NATIONAL_REGISTRATION"
          - "SELLER_SOCIAL_CONTRACT"
          - "SELLER_BOARD_MINUTES"
          - "SELLER_PROCURATION"
          - "NATURAL_SPONSOR_NATIONAL_REGISTRATION"
          - "BUYER_SOCIAL_CONTRACT"
          - "BUYER_PROCURATION"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        204:
          description: "No Content"
  /v2/sellers/{governmentId}/documents/{documentType}/legal-responsibles/{id}:
    get:
      tags:
      - "Legal Responsible Document Upload"
      summary: "Download"
      description: ""
      operationId: "downloadDocumentFileLegalResponsible"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "SELLER_NATIONAL_REGISTRATION"
          - "SPONSOR_NATIONAL_REGISTRATION"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
                format: "binary"
    post:
      tags:
      - "Legal Responsible Document Upload"
      summary: "Upload"
      description: ""
      operationId: "sellerlegalresponsibledocumentweb/UploadDocumentFile.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "SELLER_NATIONAL_REGISTRATION"
          - "SPONSOR_NATIONAL_REGISTRATION"
      requestBody:
        content:
          application/json:
            schema:
              required:
              - "document"
              type: "object"
              properties:
                document:
                  type: "string"
                  format: "binary"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelDocumentFile"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/sellers/57648355000109/documents/SELLER_NATIONAL_REGISTRATION/legal-responsibles/41215830000113"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/sellers/57648355000109"
                    type: "GET"
    delete:
      tags:
      - "Legal Responsible Document Upload"
      summary: "Delete"
      description: ""
      operationId: "sellerlegalresponsibledocumentweb/DeleteDocumentFile.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "documentType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "SELLER_NATIONAL_REGISTRATION"
          - "SPONSOR_NATIONAL_REGISTRATION"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        204:
          description: "No Content"
  /v2/sellers/{governmentId}/certificates:
    get:
      tags:
      - "Digital Certificate"
      summary: "List"
      description: ""
      operationId: "sellerdigitalcertificateweb/findAllSellerDigitalCertificateContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/registerV2SpecificationSellerDigitalCertificate"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/registerV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2PagedModelEntityModelSellerDigitalCertificateResponse"
              example:
                _embedded:
                  certificates:
                  - serial: "14020625159891240578"
                    issuedAt: "2009-11-09T16:36:49"
                    validUntil: "2009-11-09T16:36:49"
                    status: "VALID"
                    detail: "detail"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                        type: "DELETE"
                      seller:
                        href: "http://localhost/v2/sellers/64343229000101"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/79081337000120/certificates?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Digital Certificate"
      summary: "Insert/Validate"
      description: ""
      operationId: "createSellerDigitalCertificate"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerDigitalCertificateRequest"
            examples:
              x-Brazil:
                value:
                  password: "123456"
                  allowReuse: true
                  certificate: "M1hd0lDuyTwcdhNuZsOaUB7FImCty1BKR7XvHi+bhydih/g4JI6IQtNAzBNMDEwDQYJYIZIAWUDBAIBBQAEIGpoQnIT3/y/tNJ2S2LwIr0n1senmiRKgdxqQnaJAtAUBBQk1DQn5pZIS2zgCIQpzjNJGxFNqgICJxA="
              x-Chile:
                value:
                  password: "123456"
                  allowReuse: true
                  certificate: "M1hd0lDuyTwcdhNuZsOaUB7FImCty1BKR7XvHi+bhydih/g4JI6IQtNAzBNMDEwDQYJYIZIAWUDBAIBBQAEIGpoQnIT3/y/tNJ2S2LwIr0n1senmiRKgdxqQnaJAtAUBBQk1DQn5pZIS2zgCIQpzjNJGxFNqgICJxA="
                  sellerContactName: "Pedro Doe"
                  sellerEmail: "pedro.doe@gmail.com"
                  signerGovernmentId: "52755611"
                  signerName: "Diego Medel"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerDigitalCertificateResponse"
              examples:
                x-Brazil:
                  value:
                    serial: "14020625159891240578"
                    issuedAt: "2009-11-09T16:36:49"
                    validUntil: "2009-11-09T16:36:49"
                    status: "VALID"
                    detail: "detail"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                        type: "DELETE"
                      seller:
                        href: "http://localhost/v2/sellers/64343229000101"
                        type: "GET"
                x-Chile:
                  value:
                    serial: "14020625159891240578"
                    issuedAt: "2009-11-09T16:36:49"
                    validUntil: "2009-11-09T16:36:49"
                    status: "VALID"
                    detail: "detail"
                    sellerContactName: "Pedro Doe"
                    sellerEmail: "pedro.doe@gmail.com"
                    signerGovernmentId: "52755611"
                    signerName: "Diego Medel"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/47290074/certificates/14020625159891240578"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/47290074/certificates/14020625159891240578"
                        type: "DELETE"
                      seller:
                        href: "http://localhost/v2/sellers/47290074"
                        type: "GET"
      x-Brazil: "sellerdigitalcertificateweb/createSellerDigitalCertificateContract.json"
      x-Chile: "sellerdigitalcertificateweb/chileCreateSellerDigitalCertificateContract.json"
  /v2/sellers/{governmentId}/steps/bank-account:
    get:
      tags:
      - "Legal Entity - Bank Data Registration."
      summary: "Detail"
      description: ""
      operationId: "legalsellerstepbankaccountweb/findOneSellerStepBankAccountContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepBankAccount"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                alias: "Recebimento"
                bank: "247"
                bankName: "Bradesco"
                agency: "5645"
                account: "65456"
                accountDigit: "1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/steps/bank-account"
                    type: "GET"
                  previous-step:
                    href: "http://localhost/v2/sellers/31690688000102/steps/document"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "GET"
    post:
      tags:
      - "Legal Entity - Bank Data Registration."
      summary: "Insert"
      description: ""
      operationId: "legalsellerstepbankaccountweb/createSellerStepBankAccountContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2SellerStepBankAccount"
            example:
              alias: "Conta de recebimento"
              bank: "237"
              bankName: "Bradesco - 1"
              agency: "816"
              account: "508094"
              accountDigit: "0"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerStepBankAccount"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                alias: "Conta de recebimento"
                bank: "237"
                bankName: "Bradesco - 1"
                agency: "816"
                account: "508094"
                accountDigit: "0"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/64343229000101/steps/bank-account"
                    type: "GET"
                  previous-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/document"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/64343229000101/steps/picture"
                    type: "POST"
  /v2/sellers/{governmentId}/steps/person-bank-account:
    get:
      tags:
      - "Individual - Bank Data Registration."
      summary: "Detail"
      description: ""
      operationId: "naturalsellerstepbankaccountweb/findOneSellerStepBankAccountContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepBankAccount"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                alias: "Recebimento"
                bank: "247"
                bankName: "Bradesco"
                agency: "5645"
                account: "65456"
                accountDigit: "1"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "GET"
    post:
      tags:
      - "Individual - Bank Data Registration."
      summary: "Insert"
      description: ""
      operationId: "naturalsellerstepbankaccountweb/createSellerStepBankAccountContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2NaturalSellerStepBankAccount"
            example:
              alias: "Conta de recebimento"
              bank: "237"
              bankName: "Bradesco - 1"
              agency: "816"
              account: "508094"
              accountDigit: "0"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelNaturalSellerStepBankAccount"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                alias: "Conta de recebimento"
                bank: "237"
                bankName: "Bradesco - 1"
                agency: "816"
                account: "508094"
                accountDigit: "0"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                    type: "GET"
                  previous-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                    type: "GET"
                  next-step:
                    href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                    type: "POST"
  /v2/sellers/{governmentId}/steps:
    get:
      tags:
      - "Registration Steps."
      summary: "Detail"
      description: ""
      operationId: "SellerSteps"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelStepsDTO"
              examples:
                x-CaCo-Legal-Person:
                  value:
                    stepCompany:
                      createdAt: "2022-03-16T20:44:21Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-18T22:56:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      governmentId: "96336418000143"
                      name: "Company Name"
                      fantasyName: "Fanstasy Company Name"
                      foundationDate: "1994-10-04"
                      phone: "1145674567"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/96336418000143/steps/summarized-company"
                          type: "GET"
                    stepAddress:
                      createdAt: "2022-02-26T17:26:46Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T10:30:27Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      zipCode: "06670480"
                      address: "Estrada Granja Amazonas"
                      addressComplement: "Complemento"
                      addressNumber: "2700"
                      neighborhood: "Jardim Alfa"
                      city: "Guarulhos"
                      state: "SP"
                      country: "Brasil"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/96336418000143/steps/summarized-address"
                          type: "GET"
                    stepLegalResponsible:
                      createdAt: "2022-03-21T19:20:09Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T19:20:10Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      legalResponsibles:
                      - createdAt: "2022-03-21T19:21:52Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T19:21:52Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        name: "Iran Alyf Albino"
                        governmentId: "55180857023"
                        birthdayDate: "1986-04-26"
                        email: "iranalyf@teste.com"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/96336418000143/steps/summarized-legal-responsible"
                          type: "GET"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/96336418000143/steps"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/96336418000143/steps"
                        type: "DELETE"
                x-Legal-Person:
                  value:
                    stepCompany:
                      createdAt: "2022-03-16T20:44:21Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-18T22:56:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      governmentId: "31690688000102"
                      name: "Company Name"
                      fantasyName: "Fanstasy Company Name"
                      activityCode: "6300/01"
                      foundationDate: "1994-10-04"
                      legalNature: "LTDA"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/company"
                          type: "GET"
                    stepAddress:
                      createdAt: "2022-02-26T17:26:46Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T10:30:27Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      zipCode: "06670480"
                      address: "Estrada Granja Amazonas"
                      addressNumber: "2700"
                      neighborhood: "Jardim Alfa"
                      city: "Guarulhos"
                      state: "SP"
                      country: "Brasil"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/address"
                          type: "GET"
                    stepPhone:
                      createdAt: "2022-03-04T18:38:45Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T18:29:35Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      mainPhone: "1199999988"
                      phone: "1145674567"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/phone"
                          type: "GET"
                    stepLegalResponsible:
                      createdAt: "2022-03-21T19:20:09Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T19:20:10Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      legalResponsibles:
                      - createdAt: "2022-03-21T19:21:52Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T19:21:52Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        name: "Iran Alyf Albino"
                        governmentId: "55180857023"
                        birthdayDate: "1986-04-26"
                        email: "iranalyf@teste.com"
                        documentType: "RG"
                        documentNumber: "17481284"
                        type: "Socio"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/legal-responsible"
                          type: "GET"
                    stepDocument:
                      createdAt: "2022-03-21T20:20:28Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T20:21:24Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      socialContractDocument:
                        createdAt: "2022-03-21T20:21:24Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T20:21:24Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        fileName: "doc3.docx"
                        url: "http://doc3.docx"
                      procurationDocument:
                        createdAt: "2022-03-21T20:21:24Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T20:21:24Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        fileName: "doc4.docx"
                        url: "http://doc4.docx"
                      boardMinutesDocument:
                        createdAt: "2022-03-21T20:21:24Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T20:21:24Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        fileName: "doc5.docx"
                        url: "http://doc5.docx"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/document"
                          type: "GET"
                    stepBankAccount:
                      createdAt: "2022-03-16T21:34:41Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T22:18:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      alias: "Conta Recebimento"
                      bankName: "Banco Bradesco S.A."
                      agency: "0010"
                      account: "13549"
                      accountDigit: "7"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/bank-account"
                          type: "GET"
                    stepPicture:
                      createdAt: "2022-03-16T21:34:41Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T22:18:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      pictureURL: "http://picture.jpeg"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/31690688000102/steps/picture"
                          type: "GET"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/31690688000102/steps"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/31690688000102/steps"
                        type: "DELETE"
                x-Natural-Person:
                  value:
                    stepPerson:
                      createdAt: "2022-03-16T20:44:21Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-18T22:56:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      governmentId: "93442934000"
                      name: "Felipe Adorno"
                      email: "felipe@monkey.exchange"
                      birthdayDate: "1989-09-30"
                      mobilePhone: "+5511988637566"
                      landlinePhone: "+5511988637566"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/93442934000/steps/person"
                          type: "GET"
                    stepAddress:
                      createdAt: "2022-02-26T17:26:46Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T10:30:27Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      zipCode: "06670480"
                      address: "Estrada Granja Amazonas"
                      addressNumber: "2700"
                      neighborhood: "Jardim Alfa"
                      city: "Guarulhos"
                      state: "SP"
                      country: "Brasil"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/93442934000/steps/person-address"
                          type: "GET"
                    stepDocument:
                      createdAt: "2022-03-21T20:20:28Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T20:21:24Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      documentType: "RG"
                      documentNumber: "461426262"
                      nationalRegistrationDocument:
                        createdAt: "2022-03-21T20:21:24Z"
                        createUserId: "anonymousUser"
                        createUserIp: "127.0.0.1"
                        updatedAt: "2022-03-21T20:21:24Z"
                        lastUserId: "anonymousUser"
                        lastUserIp: "127.0.0.1"
                        fileName: "doc3.docx"
                        url: "http://doc3.docx"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/93442934000/steps/person-document"
                          type: "GET"
                    stepBankAccount:
                      createdAt: "2022-03-16T21:34:41Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T22:18:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      alias: "Conta Recebimento"
                      bankName: "Banco Bradesco S.A."
                      agency: "0010"
                      account: "13549"
                      accountDigit: "7"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/93442934000/steps/person-bank-account"
                          type: "GET"
                    stepPicture:
                      createdAt: "2022-03-16T21:34:41Z"
                      createUserId: "anonymousUser"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2022-03-21T22:18:02Z"
                      lastUserId: "anonymousUser"
                      lastUserIp: "127.0.0.1"
                      pictureURL: "http://picture.jpeg"
                      _links:
                        self:
                          href: "http://localhost/v2/sellers/93442934000/steps/person-picture"
                          type: "GET"
                    _links:
                      self:
                        href: "http://localhost/v2/sellers/93442934000/steps"
                        type: "GET"
                      delete:
                        href: "http://localhost/v2/sellers/93442934000/steps"
                        type: "DELETE"
      x-CaCo-Legal-Person: "sellerstepsweb/findOneSummarizedSellerStepsContract.json"
      x-Legal-Person: "sellerstepsweb/findOneLegalSellerStepsContract.json"
      x-Natural-Person: "sellerstepsweb/findOneNaturalSellerStepsContract.json"
    delete:
      tags:
      - "Registration Steps."
      summary: "Delete"
      description: ""
      operationId: "sellerstepsweb/deleteSellerStepsContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/registerV2AbstractPassNumberResourceObject"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        204:
          description: "No Content"
  /v2/sellers/{governmentId}/certificates/{id}:
    get:
      tags:
      - "Digital Certificate"
      summary: "Detail"
      description: ""
      operationId: "sellerdigitalcertificateweb/findOneSellerDigitalCertificateContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/registerV2EntityModelSellerDigitalCertificateResponse"
              example:
                serial: "14020625159891240578"
                issuedAt: "2009-11-09T16:36:49"
                validUntil: "2009-11-09T16:36:49"
                status: "VALID"
                detail: "detail"
                _links:
                  self:
                    href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                    type: "GET"
                  delete:
                    href: "http://localhost/v2/sellers/31690688000102/certificates/14020625159891240578"
                    type: "DELETE"
                  seller:
                    href: "http://localhost/v2/sellers/64343229000101"
                    type: "GET"
    delete:
      tags:
      - "Digital Certificate"
      summary: "Delete"
      description: ""
      operationId: "sellerdigitalcertificateweb/deleteSellerDigitalCertificateContract.json"
      parameters:
      - name: "governmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/registerV2Message"
        204:
          description: "No Content"
components:
  schemas:
    registerV2Message:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    registerV2SummarizedSellerStepLegalResponsible:
      required:
      - "birthdayDate"
      - "email"
      - "governmentId"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        name:
          type: "string"
        governmentId:
          type: "string"
        email:
          type: "string"
        birthdayDate:
          type: "string"
          format: "date"
    registerV2SummarizedSellerStepLegalResponsibles:
      required:
      - "legalResponsibles"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        legalResponsibles:
          type: "array"
          items:
            $ref: "#/components/schemas/registerV2SummarizedSellerStepLegalResponsible"
    registerV2EntityModelSummarizedSellerStepLegalResponsibles:
      required:
      - "legalResponsibles"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        legalResponsibles:
          type: "array"
          items:
            $ref: "#/components/schemas/registerV2SummarizedSellerStepLegalResponsible"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2Links:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/registerV2Link"
    registerV2SummarizedSellerStepCompany:
      required:
      - "fantasyName"
      - "foundationDate"
      - "name"
      - "phone"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        fantasyName:
          type: "string"
        foundationDate:
          type: "string"
          format: "date"
        phone:
          type: "string"
    registerV2EntityModelSummarizedSellerStepCompany:
      required:
      - "fantasyName"
      - "foundationDate"
      - "name"
      - "phone"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        fantasyName:
          type: "string"
        foundationDate:
          type: "string"
          format: "date"
        phone:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SummarizedSellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
    registerV2EntityModelSummarizedSellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepPicture:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        pictureURL:
          type: "string"
    registerV2EntityModelSellerStepPicture:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        pictureURL:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepPhone:
      required:
      - "mainPhone"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        mainPhone:
          type: "string"
        phone:
          type: "string"
    registerV2EntityModelSellerStepPhone:
      required:
      - "mainPhone"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        mainPhone:
          type: "string"
        phone:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepDocument:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        fileName:
          type: "string"
        url:
          type: "string"
    registerV2SellerStepLegalResponsible:
      required:
      - "email"
      - "governmentId"
      - "phone"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        id:
          type: "string"
        name:
          type: "string"
        governmentId:
          type: "string"
        type:
          type: "string"
          enum:
          - "PARTNER"
          - "SHAREHOLDER"
          - "ADMINISTRATOR"
          - "DIRECTOR"
          - "CONSULTANT"
        birthdayDate:
          type: "string"
          format: "date"
        documentType:
          type: "string"
          enum:
          - "RG"
          - "CNH"
          - "PASSPORT"
          - "OTHER"
        documentNumber:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
        financialAuthority:
          type: "boolean"
        financialAuthorityValue:
          type: "number"
        nationalRegistrationDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
    registerV2SellerStepLegalResponsibles:
      required:
      - "legalResponsibles"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        legalResponsibles:
          type: "array"
          items:
            $ref: "#/components/schemas/registerV2SellerStepLegalResponsible"
    registerV2EntityModelSellerStepLegalResponsibles:
      required:
      - "legalResponsibles"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        legalResponsibles:
          type: "array"
          items:
            $ref: "#/components/schemas/registerV2SellerStepLegalResponsible"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepDocuments:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        socialContractDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
        boardMinutesDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
        procurationDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
    registerV2EntityModelSellerStepDocuments:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        socialContractDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
        boardMinutesDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
        procurationDocument:
          $ref: "#/components/schemas/registerV2SellerStepDocument"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepCompany:
      required:
      - "activityCode"
      - "fantasyName"
      - "foundationDate"
      - "legalNature"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        fantasyName:
          type: "string"
        foundationDate:
          type: "string"
          format: "date"
        activityCode:
          type: "string"
        legalNature:
          type: "string"
          enum:
          - "LTDA"
          - "SA"
          - "OTHER"
    registerV2EntityModelSellerStepCompany:
      required:
      - "activityCode"
      - "fantasyName"
      - "foundationDate"
      - "legalNature"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        fantasyName:
          type: "string"
        foundationDate:
          type: "string"
          format: "date"
        activityCode:
          type: "string"
        legalNature:
          type: "string"
          enum:
          - "LTDA"
          - "SA"
          - "OTHER"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
    registerV2EntityModelSellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2NaturalSellerStepPerson:
      required:
      - "birthdayDate"
      - "email"
      - "mobilePhone"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        email:
          type: "string"
        birthdayDate:
          type: "string"
          format: "date"
        mobilePhone:
          type: "string"
        landlinePhone:
          type: "string"
    registerV2EntityModelNaturalSellerStepPerson:
      required:
      - "birthdayDate"
      - "email"
      - "mobilePhone"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        email:
          type: "string"
        birthdayDate:
          type: "string"
          format: "date"
        mobilePhone:
          type: "string"
        landlinePhone:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2NaturalSellerStepPicture:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        pictureURL:
          type: "string"
    registerV2EntityModelNaturalSellerStepPicture:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        pictureURL:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2NaturalSellerStepDocument:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        fileName:
          type: "string"
        url:
          type: "string"
    registerV2NaturalSellerStepDocuments:
      required:
      - "documentNumber"
      - "documentType"
      - "nationalRegistrationDocument"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        documentType:
          type: "string"
          enum:
          - "RG"
          - "CNH"
          - "PASSPORT"
          - "OTHER"
        documentNumber:
          type: "string"
        nationalRegistrationDocument:
          $ref: "#/components/schemas/registerV2NaturalSellerStepDocument"
    registerV2EntityModelNaturalSellerStepDocuments:
      required:
      - "documentNumber"
      - "documentType"
      - "nationalRegistrationDocument"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        documentType:
          type: "string"
          enum:
          - "RG"
          - "CNH"
          - "PASSPORT"
          - "OTHER"
        documentNumber:
          type: "string"
        nationalRegistrationDocument:
          $ref: "#/components/schemas/registerV2NaturalSellerStepDocument"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2NaturalSellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
    registerV2EntityModelNaturalSellerStepAddress:
      required:
      - "address"
      - "city"
      - "country"
      - "neighborhood"
      - "state"
      - "zipCode"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        zipCode:
          type: "string"
        address:
          type: "string"
        addressNumber:
          type: "string"
        addressComplement:
          type: "string"
        neighborhood:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        country:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2EntityModelDocumentFile:
      type: "object"
      properties:
        filename:
          type: "string"
        url:
          type: "string"
          writeOnly: true
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerDigitalCertificateRequest:
      required:
      - "certificate"
      - "password"
      type: "object"
      properties:
        password:
          type: "string"
        certificate:
          type: "string"
        signerName:
          type: "string"
        signerGovernmentId:
          type: "string"
        sellerEmail:
          type: "string"
        sellerContactName:
          type: "string"
        allowReuse:
          type: "boolean"
    registerV2EntityModelSellerDigitalCertificateResponse:
      type: "object"
      properties:
        serial:
          type: "string"
        issuedAt:
          type: "string"
          format: "date-time"
        validUntil:
          type: "string"
          format: "date-time"
        signerName:
          type: "string"
        signerGovernmentId:
          type: "string"
        sellerEmail:
          type: "string"
        sellerContactName:
          type: "string"
        status:
          type: "string"
          enum:
          - "WAITING"
          - "VALIDATING"
          - "VALID"
          - "INVALID"
          - "EXPIRED"
        detail:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SellerStepBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
    registerV2EntityModelSellerStepBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2NaturalSellerStepBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
    registerV2EntityModelNaturalSellerStepBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        governmentId:
          type: "string"
        alias:
          type: "string"
        bank:
          type: "string"
        bankName:
          type: "string"
        agency:
          type: "string"
        account:
          type: "string"
        accountDigit:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2EntityModelStepsDTO:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2SpecificationSellerDigitalCertificate:
      type: "object"
    registerV2Pageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    registerV2PageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    registerV2PagedModelEntityModelSellerDigitalCertificateResponse:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            certificates:
              type: "array"
              items:
                $ref: "#/components/schemas/registerV2EntityModelSellerDigitalCertificateResponse"
        _links:
          $ref: "#/components/schemas/registerV2Links"
        page:
          $ref: "#/components/schemas/registerV2PageMetadata"
    registerV2AbstractPassNumberResourceObject:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        passNumber1:
          type: "string"
        passNumber2:
          type: "string"
        passNumber3:
          type: "string"
        passNumber4:
          type: "string"
        _links:
          $ref: "#/components/schemas/registerV2Links"
    registerV2Link:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
