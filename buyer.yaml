---
openapi: "3.0.1"
info:
  title: "Monkey API"
  version: "1.0"
servers:
- url: "https://hmg-zuul.monkeyecx.com"
  description: "Staging Server"
- url: "https://zuul.monkey.exchange"
  description: "Production Server"
paths:
  /v2/buyers/{id}/signature-configurations:
    get:
      tags:
      - "Signature Configuration"
      summary: "Detail"
      description: ""
      operationId: "buyerconfigurationweb/BuyerConfigurationFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signEntityModelBuyerSigners"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                signers:
                - email: "felipe@monkey.exchange"
                  name: "Felipe Monkey"
                - email: "felipeadsc@gmail.com"
                  name: "Felipe Gmail"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/signature-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Signature Configuration"
      summary: "Update"
      description: ""
      operationId: "buyerconfigurationweb/BuyerConfigurationUpdate.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signBuyerSigners"
            example:
              signers:
              - email: "felipe@monkey.exchange"
                name: "Felipe Monkey"
              - email: "felipeadsc@gmail.com"
                name: "Felipe Personal"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signEntityModelBuyerSigners"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                signers:
                - email: "felipe@monkey.exchange"
                  name: "Felipe Monkey"
                - email: "felipeadsc@gmail.com"
                  name: "Felipe Gmail"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/signature-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    post:
      tags:
      - "Signature Configuration"
      summary: "Configure"
      description: ""
      operationId: "buyerconfigurationweb/BuyerConfigurationCreate.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signBuyerSigners"
            example:
              signers:
              - email: "felipe@monkey.exchange"
                name: "Felipe Monkey"
              - email: "felipeadsc@gmail.com"
                name: "Felipe Personal"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signEntityModelBuyerSigners"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                signers:
                - email: "felipe@monkey.exchange"
                  name: "Felipe Monkey"
                - email: "felipeadsc@gmail.com"
                  name: "Felipe Gmail"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/signature-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    delete:
      tags:
      - "Signature Configuration"
      summary: "Delete"
      description: ""
      operationId: "BuyerConfigurationDelete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
  /v2/buyers/{id}/auto-approve-settings:
    get:
      tags:
      - "Automatic Signature Configuration"
      summary: "Detail"
      description: ""
      operationId: "buyerautoapproveweb/BuyerAutoApproveFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signBuyerAutoApprove"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                autoApprove: "true"
                autoApproveUser: "sponsorjallesmachado@gmail.com"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/auto-approve-settings"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/95/auto-approve-settings"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
    put:
      tags:
      - "Automatic Signature Configuration"
      summary: "Update"
      description: ""
      operationId: "buyerautoapproveweb/BuyerAutoApproveUpdate.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signBuyerAutoApprove"
            example:
              autoApprove: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        204:
          description: "No Content"
  /v2/buyers/{id}/signatures/{purchaseId}/unapprove:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Disapprove"
      description: ""
      operationId: "buyerweb/BuyerSignatureUnapprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/documents?type={type}"
                    type: "GET"
                    templated: true
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/95/purchases/ORga1sHd6S"
                    type: "GET"
  /v2/buyers/{id}/signatures/{purchaseId}/approve:
    post:
      tags:
      - "Documents and Signatures"
      summary: "Approve"
      description: ""
      operationId: "buyerweb/BuyerSignatureApprove.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/documents?type={type}"
                    type: "GET"
                    templated: true
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/95/purchases/ORga1sHd6S"
                    type: "GET"
  /v2/buyers/{id}/signatures:
    get:
      tags:
      - "Documents and Signatures"
      summary: "List"
      description: ""
      operationId: "buyerweb/BuyerSignatureList.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "status"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "WAITING"
      - name: "startDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "endDate"
        in: "query"
        required: false
        schema:
          type: "string"
          format: "date-time"
      - name: "sellerFilter"
        in: "query"
        required: false
        schema:
          type: "string"
          default: ""
      - name: "page"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 0
      - name: "size"
        in: "query"
        required: false
        schema:
          type: "integer"
          format: "int32"
          default: 20
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signPagedModelSignature"
              example:
                _embedded:
                  signatures:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    sponsorName: "GERDAU ACOS LONGOS S.A."
                    sponsorGovernmentId: "07358761000169"
                    sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                      \ LTDA."
                    sellerGovernmentId: "02060306000169"
                    buyerName: "BNP"
                    buyerGovernmentId: "45646546545646"
                    reportCode: "10/00001"
                    amount: "160110.75"
                    sponsorSignatureStatus: "NOT_REQUIRED"
                    sellerSignatureStatus: "APPROVED"
                    buyerSignatureStatus: "WAITING"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S"
                        type: "GET"
                      documents:
                        href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/documents?type={type}"
                        type: "GET"
                        templated: true
                      approve:
                        href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/unapprove"
                        type: "POST"
                      buyer:
                        href: "http://localhost/v2/buyers/95"
                        type: "GET"
                      purchase:
                        href: "http://localhost/v2/buyers/95/purchases/ORga1sHd6S"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/signatures?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/signatures/{purchaseId}:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Detail"
      description: ""
      operationId: "buyerweb/BuyerSignatureFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/signSignature"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                sponsorName: "GERDAU ACOS LONGOS S.A."
                sponsorGovernmentId: "07358761000169"
                sellerName: "FENIXX VIGILANCIA, SEGURANCA E TRANSPORTE DE VALORES\
                  \ LTDA."
                sellerGovernmentId: "02060306000169"
                buyerName: "BNP"
                buyerGovernmentId: "45646546545646"
                reportCode: "10/00001"
                amount: "160110.75"
                sponsorSignatureStatus: "NOT_REQUIRED"
                sellerSignatureStatus: "APPROVED"
                buyerSignatureStatus: "WAITING"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S"
                    type: "GET"
                  documents:
                    href: "http://localhost/v2/buyers/95/signatures/ORga1sHd6S/documents?type={type}"
                    type: "GET"
                    templated: true
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/95/purchases/ORga1sHd6S"
                    type: "GET"
  /v2/buyers/{id}/signatures/{purchaseId}/documents:
    get:
      tags:
      - "Documents and Signatures"
      summary: "Download Terms"
      description: ""
      operationId: "BuyerSignatureDocuments"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "type"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/signMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/buyers/{buyerId}/dashboards:
    get:
      tags:
      - "Dashboards"
      summary: "Dashboard"
      description: ""
      operationId: "buyerdashboard/GETBuyerDashboardDashboard.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelBuyerDashboardResource"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/dashboards"
                    type: "GET"
                  program-summary:
                    href: "http://localhost/v2/buyers/10/dashboards/program-summaries{?period}"
                    type: "GET"
                    templated: true
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{buyerId}/dashboards/purchase-evolutions:
    get:
      tags:
      - "Dashboards"
      summary: "List Volume Discount Evolution"
      description: ""
      operationId: "buyerdashboard/GETBuyerPurchaseEvolutionDashboard.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardCollectionModelBuyerOperationEvolutionDashboard"
              example:
                _embedded:
                  purchase-evolutions:
                  - monthAndYear: "11/2023"
                    totalAmount: "47"
                    earnedAmount: "10.00"
                  - monthAndYear: "10/2023"
                    totalAmount: "456"
                    earnedAmount: "2340.00"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/dashboards/purchase-evolutions"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/buyers/10/dashboards"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{buyerId}/dashboards/program-summaries:
    get:
      tags:
      - "Dashboards"
      summary: "List Overview Information"
      description: ""
      operationId: "buyerdashboard/GETBuyerDashboardProgramSummaryDashboard.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "period"
        in: "query"
        required: false
        schema:
          type: "string"
          default: "ALL"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelBuyerProgramSummaryDashboard"
              example:
                disputedAmount: "310305.05"
                earnedAmount: "310305.05"
                operations: "47"
                disputedOperationItems: "2787"
                earnedOperationItems: "2787"
                averageTax: "1.7553191"
                programAverageTax: "1.4785191"
                averageDuration: "51.383"
                programAverageDuration: "82.800"
                sellers: "390"
                approvedSellers: "387"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/dashboards/program-summaries?period=ALL"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/buyers/10/dashboards"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{buyerId}/dashboards/daily-operation-summaries:
    get:
      tags:
      - "Dashboards"
      summary: "List Daily Summary Information"
      description: ""
      operationId: "buyerdashboard/GETBuyerOperationDailySummaryDashboard.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelBuyerDailyOperationSummaryDashboard"
              example:
                amount: "4310305.05"
                items: "479"
                amountWon: "10305.05"
                itemsWon: "8"
                amountApproved: "50305.05"
                itemsApproved: "145"
                operations: "47"
                averageTax: "1.7553191"
                programAverageTax: "1.4785191"
                averageDuration: "51.383"
                sellersWithPurchases: "390"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/dashboards/daily-operation-summaries"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/buyers/10/dashboards"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{buyerId}/dashboards/competitiveness-indices:
    get:
      tags:
      - "Dashboards"
      summary: "List Competitiveness Index"
      description: ""
      operationId: "buyerdashboard/GETBuyerCompetitivenessIndexDashboard.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardCollectionModelBuyerOperationCompetitivenessIndexDashboard"
              example:
                _embedded:
                  competitiveness-indices:
                  - rangeDays: "120"
                    totalPurchaseAmount: "47"
                    totalAmountDisputed: "10.00"
                  - rangeDays: "120"
                    totalPurchaseAmount: "456"
                    totalAmountDisputed: "2340.00"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/dashboards/competitiveness-indices"
                    type: "GET"
                  dashboards:
                    href: "http://localhost/v2/buyers/10/dashboards"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v1/buyers/{id}/payable-processes:
    get:
      tags:
      - "Invoice Processing"
      summary: "List"
      description: ""
      operationId: "payableprocess/ListPayableProcess.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/dashboardPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardPagedModelEntityModelPayableProcess"
              example:
                _embedded:
                  processes:
                  - sponsorName: "PINE SPONSOR"
                    sponsorGovernmentId: "15900570000105"
                    createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-12-04T19:30:24Z"
                    processed: "6"
                    unprocessed: "5"
                    processedAmount: "1234"
                    _links:
                      self:
                        href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj"
                      processed-items:
                        href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/processed-items?page=0&size=20"
                      unprocessed-items:
                        href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/unprocessed-items?page=0&size=20"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/payable-processes?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v1/buyers/{id}/payable-processes/{processId}:
    get:
      tags:
      - "Invoice Processing"
      summary: "Detail"
      description: ""
      operationId: "payableprocess/GetPayableProcess.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardEntityModelPayableProcess"
              example:
                sponsorName: "PINE SPONSOR"
                sponsorGovernmentId: "15900570000105"
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-12-04T19:30:24Z"
                processed: "6"
                unprocessed: "5"
                processedAmount: "1234"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj"
                  processed-items:
                    href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/processed-items?page=0&size=20"
                  unprocessed-items:
                    href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/unprocessed-items?page=0&size=20"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
  /v1/buyers/{id}/payable-processes/{processId}/unprocessed-items:
    get:
      tags:
      - "Invoice Processing"
      summary: "List Unprocessed Items"
      description: ""
      operationId: "payableunprocessed/GetPayableUnprocessed.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/dashboardPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardPagedModelEntityModelPayableError"
              example:
                _embedded:
                  unprocessed-items:
                  - detail: "Linha: 2 -  Erro no campo data de pagamento, feriado\
                      \ ou fim de semana."
                    createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-12-04T19:30:24Z"
                    _links:
                      payable-process:
                        href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/unprocessed-items?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v1/buyers/{id}/payable-processes/{processId}/processed-items:
    get:
      tags:
      - "Invoice Processing"
      summary: "List Processed Items"
      description: ""
      operationId: "payableprocessed/GetPayableProcessed.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/dashboardPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/dashboardMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dashboardPagedModelEntityModelPayableProcessed"
              example:
                _embedded:
                  processed-items:
                  - uuid: "2WWo6w0vVK"
                    externalId: "4ixXuunoWj"
                    lineNumber: "1"
                    paymentDate: "2018-12-04T19:30:24Z"
                    paymentValue: "2040"
                    supplierGovernmentId: "12039943000123"
                    supplierName: "Nome fornecedor"
                    invoiceNumber: "500103"
                    invoiceDate: "2018-12-04T19:30:24Z"
                    invoiceKey: "key"
                    createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-12-04T19:30:24Z"
                    _links:
                      payable-process:
                        href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/payable-processes/4ixXuunoWj/processed-items?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/subscriptions:
    get:
      tags:
      - "Email Subscription Settings"
      summary: "List"
      description: ""
      operationId: "buyersubscription/FindOneBuyerSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "true"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/subscriptions"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Email Subscription Settings"
      summary: "Update"
      description: ""
      operationId: "buyersubscription/UpdateBuyerSubscriptionContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/rdStationSubscription"
            example:
              account: false
              payable: false
              profile: true
              transactional: false
              information: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/rdStationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rdStationSubscription"
              example:
                account: "false"
                payable: "false"
                profile: "true"
                transactional: "false"
                information: "true"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/subscriptions"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/sponsors/{sponsorId}:
    get:
      tags:
      - "Sponsors"
      summary: "Detail"
      description: ""
      operationId: "buyersponsorweb/findOneBuyerSponsorContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSponsor"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                companyName: "GUI"
                fantasyName: "Guilherme Company Fantasy"
                foundationDate: "2014-11-09T16:36:49.364+0000"
                activityCode: "1234-5/67"
                address: "Rua Douradina"
                addressNumber: "188"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "Catanduva"
                state: "SP"
                country: "Brazil"
                zipCode: "15807337"
                pictureUrl: "http://image.com"
                legalResponsibles:
                - createdAt: "2008-11-09T16:36:49.364+0000"
                  createUserId: "guilherme@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "guilherme@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                  name: "Guilherme Bernardi"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  phone: "4324324324234"
                  companyPhone: "4324324324234"
                  email: "monkey@monkey.com"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  sign: "true"
                status: "APPROVED"
                externalCode: "1234567"
                sponsorCreatedAt: "2020-01-09T11:35:49.364+0000"
                sponsorCreateUserId: "caio.merotti@monkey.tech"
                sponsorUpdatedAt: "2023-02-09T10:26:39.364+0000"
                sponsorLastUserId: "caio.merotti@monkey.tech"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  external-code:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "PUT"
                  unapprove:
                    href: "http://localhost/v2/buyers/10/sponsors/54/unapprove"
                    type: "POST"
                  documents:
                    href: "http://localhost/v2/buyers/10/sponsors/54/documents"
                    type: "GET"
                  limit:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  taxes:
                    href: "http://localhost/v2/buyers/10/sponsors/50851124000159/taxes"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/document-types"
                    type: "GET"
    put:
      tags:
      - "Sponsors"
      summary: "Update Sponsor Agreement Number"
      description: ""
      operationId: "buyersponsorweb/setSponsorExternalCodeContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerSponsor"
            example:
              externalCode: "SOME_CODE"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSponsor"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                companyName: "GUI"
                fantasyName: "Guilherme Company Fantasy"
                foundationDate: "2014-11-09T16:36:49.364+0000"
                activityCode: "1234-5/67"
                address: "Rua Tapajós"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Alto do Ipiranga"
                city: "Ribeirão Preto"
                state: "SP"
                country: "Brazil"
                zipCode: "15800000"
                pictureUrl: "http://image.com"
                legalResponsibles:
                - createdAt: "2008-11-09T16:36:49.364+0000"
                  createUserId: "guilherme@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "guilherme@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                  name: "Guilherme Bernardi"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  phone: "4324324324234"
                  companyPhone: "4324324324234"
                  email: "monkey@monkey.com"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  sign: "true"
                status: "APPROVED"
                externalCode: "EXTERNAL_CODE"
                sponsorCreatedAt: "2020-01-09T11:35:49.364+0000"
                sponsorCreateUserId: "caio.merotti@monkey.tech"
                sponsorUpdatedAt: "2023-02-09T10:26:39.364+0000"
                sponsorLastUserId: "caio.merotti@monkey.tech"
                _links:
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
                  external-code:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "PUT"
                  documents:
                    href: "http://localhost/v2/buyers/10/sponsors/54/documents"
                    type: "GET"
                  limit:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  taxes:
                    href: "http://localhost/v2/buyers/10/sponsors/50851124000159/taxes"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/document-types"
                    type: "GET"
  /v2/buyers/{id}/sponsors/{sponsorId}/limits:
    get:
      tags:
      - "Sponsor Limit Configuration"
      summary: "Find Sponsor Limit"
      description: ""
      operationId: "buyersponsorlimitweb/findOneBuyerLimitContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerLimitResource"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                active: "true"
                limitReplenishment: "true"
                limit: "33375.09"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
    put:
      tags:
      - "Sponsor Limit Configuration"
      summary: "Update Sponsor Limit"
      description: ""
      operationId: "buyersponsorlimitweb/putBuyerLimitContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerLimitResource"
            example:
              limit: 33375.09
              active: true
              limitReplenishment: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerLimitResource"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                active: "true"
                limitReplenishment: "true"
                limit: "33375.09"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
    post:
      tags:
      - "Sponsor Limit Configuration"
      summary: "Create Sponsor Limit"
      description: ""
      operationId: "buyersponsorlimitweb/postBuyerLimitContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerLimitResource"
            example:
              limit: 33375.09
              active: true
              limitReplenishment: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerLimitResource"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                active: "true"
                limitReplenishment: "true"
                limit: "33375.09"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  sponsor:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
  /v2/buyers/{id}/sellers/{sellerId}:
    get:
      tags:
      - "Assignments"
      summary: "Find Assignment"
      description: ""
      operationId: "buyersellerweb/getSellerByIdContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSeller"
              example:
                status: "APPROVED"
                risk: "GROUP1"
                governmentId: "50851124000159"
                name: "Felipe Company"
                phone: "4324324324234"
                companyName: "FEL"
                fantasyName: "Felipe Company Fantasy"
                foundationDate: "1977-11-09T16:36:49.364+0000"
                mainPhone: "551134443434"
                alternativePhone: "5511322323444"
                address: "Rua Poetisa Colombina"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "São Paulo"
                state: "SP"
                country: "Brazil"
                zipCode: "05623030"
                activityCode: "1234-5/67"
                legalNature: "LTDA."
                buyerAdhesionTermSignatureStatus: "SIGNED"
                programAdhesionTermStatus: "SIGNED"
                digitalCertificate: "VALID"
                biometricVerificationStatus: "WAITING_VALIDATION"
                bankAccountReviewedBySponsor: "true"
                legalResponsibles:
                - name: "Felipe Adorno"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  birthdayDate: "2000-05-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123456780"
                  phone: "551134443434"
                  email: "felipe@monkey.exchange"
                  sign: "true"
                  financialAuthority: "true"
                  financialAuthorityValue: "10000"
                  createdAt: "2000-11-09T16:36:49.364+0000"
                  createUserId: "felipe@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2000-04-09T16:36:49.364+0000"
                  lastUserId: "felipe@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                createdAt: "2000-01-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-02-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                sellerCreatedAt: "2010-11-09T16:36:49.364+0000"
                sellerCreateUserId: "felipe@monkey.exchange"
                sellerUpdatedAt: "2010-11-09T16:36:49.364+0000"
                sellerLastUserId: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  bank-accounts:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/buyers/10/sellers/54/approve"
                    type: "POST"
                  risk:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "PUT"
                  documents:
                    href: "http://localhost/v2/buyers/10/sellers/54/documents"
                    type: "GET"
                  audits:
                    href: "http://localhost/v2/buyers/10/sellers/54/audits"
                    type: "GET"
                  sponsors:
                    href: "http://localhost/v2/buyers/10/sellers/54/sponsors"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/document-types"
                    type: "GET"
                  adhesion-term:
                    href: "http://localhost/v2/buyers/10/adhesion-terms/94/regenerate"
                    type: "POST"
    put:
      tags:
      - "Assignments"
      summary: "Update Assignment Risk Group"
      description: ""
      operationId: "buyersellerweb/setSellerRiskContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerSeller"
            example:
              risk: "SOME_RISK"
              status: "APPROVED"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSeller"
              example:
                status: "APPROVED"
                risk: "SOME_RISK"
                governmentId: "50851124000159"
                name: "Felipe Company"
                phone: "4324324324234"
                companyName: "FEL"
                fantasyName: "Felipe Company Fantasy"
                foundationDate: "1975-11-09T16:36:49.364+0000"
                mainPhone: "551134443434"
                alternativePhone: "5511322323444"
                address: "Rua Poetisa Colombina"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "São Paulo"
                state: "SP"
                country: "Brazil"
                zipCode: "05623030"
                activityCode: "1234-5/67"
                legalNature: "LTDA."
                buyerAdhesionTermSignatureStatus: "SIGNED"
                programAdhesionTermStatus: "SIGNED"
                digitalCertificate: "VALID"
                biometricVerificationStatus: "WAITING_VALIDATION"
                bankAccountReviewedBySponsor: "true"
                legalResponsibles:
                - name: "Felipe Adorno"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  birthdayDate: "2000-11-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123456780"
                  phone: "551134443434"
                  email: "felipe@monkey.exchange"
                  sign: "true"
                  financialAuthority: "true"
                  financialAuthorityValue: "10000"
                  createdAt: "2000-11-09T16:36:49.364+0000"
                  createUserId: "felipe@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2000-11-09T16:36:49.364+0000"
                  lastUserId: "felipe@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                createdAt: "2000-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  bank-accounts:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/buyers/10/sellers/54/approve"
                    type: "POST"
                  risk:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "PUT"
                  documents:
                    href: "http://localhost/v2/buyers/10/sellers/54/documents"
                    type: "GET"
                  audits:
                    href: "http://localhost/v2/buyers/10/sellers/54/audits"
                    type: "GET"
                  sponsors:
                    href: "http://localhost/v2/buyers/10/sellers/54/sponsors"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/document-types"
                    type: "GET"
                  adhesion-term:
                    href: "http://localhost/v2/buyers/10/adhesion-terms/94/regenerate"
                    type: "POST"
  /v2/buyers/{id}/configurations:
    get:
      tags:
      - "Buyer Settings"
      summary: "Detail"
      description: ""
      operationId: "buyerconfigurationweb/findOneBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerConfiguration"
              example:
                closedMarketHour: "14"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Buyer Settings"
      summary: "Update"
      description: ""
      operationId: "buyerconfigurationweb/updateBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerConfiguration"
            example:
              closedMarketHour: 13
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerConfiguration"
              example:
                closedMarketHour: "14"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    post:
      tags:
      - "Buyer Settings"
      summary: "Configure"
      description: ""
      operationId: "buyerconfigurationweb/createBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerConfiguration"
            example:
              closedMarketHour: 14
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerConfiguration"
              example:
                closedMarketHour: "14"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/configurations"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/bank-accounts/{bankAccountId}:
    get:
      tags:
      - "Bank Account Data"
      summary: "Detail"
      description: ""
      operationId: "bankaccountweb/findOneBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                main: "true"
                type: "RECEIVEMENT"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Bank Account Data"
      summary: "Update"
      description: ""
      operationId: "bankaccountweb/updateBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "6"
              main: true
              type: "PAYMENT"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        204:
          description: "No Content"
    delete:
      tags:
      - "Bank Account Data"
      summary: "Delete"
      description: ""
      operationId: "bankaccountweb/deleteBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        204:
          description: "No Content"
  /v2/buyers/{id}/sponsors/{sponsorId}/unapprove:
    post:
      tags:
      - "Sponsors"
      summary: "Reject Sponsor"
      description: ""
      operationId: "buyersponsorweb/unapproveSponsorContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSponsor"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                companyName: "GUI"
                fantasyName: "Guilherme Company Fantasy"
                foundationDate: "2014-11-09T16:36:49.364+0000"
                activityCode: "1234-5/67"
                address: "Rua Tapajós"
                addressNumber: "1103"
                addressComplement: "complement"
                neighborhood: "Alto do Ipiranga"
                city: "Ribeirão Preto"
                state: "SP"
                country: "Brazil"
                zipCode: "15800000"
                pictureUrl: "http://image.com"
                legalResponsibles:
                - createdAt: "2008-11-09T16:36:49.364+0000"
                  createUserId: "guilherme@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "guilherme@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                  name: "Guilherme Bernardi"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  phone: "4324324324234"
                  companyPhone: "4324324324234"
                  email: "monkey@monkey.com"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  sign: "true"
                status: "UNAPPROVED"
                externalCode: "1234567"
                sponsorCreatedAt: "2020-01-09T11:35:49.364+0000"
                sponsorCreateUserId: "caio.merotti@monkey.tech"
                sponsorUpdatedAt: "2023-02-09T10:26:39.364+0000"
                sponsorLastUserId: "caio.merotti@monkey.tech"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  external-code:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "PUT"
                  approve:
                    href: "http://localhost/v2/buyers/10/sponsors/54/approve"
                    type: "POST"
                  documents:
                    href: "http://localhost/v2/buyers/10/sponsors/54/documents"
                    type: "GET"
                  limit:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  taxes:
                    href: "http://localhost/v2/buyers/10/sponsors/50851124000159/taxes"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/document-types"
                    type: "GET"
  /v2/buyers/{id}/sponsors/{sponsorId}/approve:
    post:
      tags:
      - "Sponsors"
      summary: "Approve Sponsor"
      description: ""
      operationId: "buyersponsorweb/approveSponsorContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSponsor"
              example:
                createdAt: "2008-11-09T16:36:49.364+0000"
                createUserId: "guilherme@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "guilherme@monkey.exchange"
                lastUserIp: "127.0.0.1"
                name: "Guilherme Company"
                governmentId: "50851124000159"
                companyName: "GUI"
                fantasyName: "Guilherme Company Fantasy"
                foundationDate: "2014-11-09T16:36:49.364+0000"
                activityCode: "1234-5/67"
                address: "Rua Tapajós"
                addressNumber: "1103"
                addressComplement: "complement"
                neighborhood: "Alto do Ipiranga"
                city: "Ribeirão Preto"
                state: "SP"
                country: "Brazil"
                zipCode: "15800000"
                pictureUrl: "http://image.com"
                legalResponsibles:
                - createdAt: "2008-11-09T16:36:49.364+0000"
                  createUserId: "guilherme@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2009-11-09T16:36:49.364+0000"
                  lastUserId: "guilherme@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                  name: "Guilherme Bernardi"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  phone: "4324324324234"
                  companyPhone: "4324324324234"
                  email: "monkey@monkey.com"
                  birthdayDate: "1980-10-09T16:36:49.364+0000"
                  sign: "true"
                status: "APPROVED"
                externalCode: "1234567"
                sponsorCreatedAt: "2020-01-09T11:35:49.364+0000"
                sponsorCreateUserId: "caio.merotti@monkey.tech"
                sponsorUpdatedAt: "2023-02-09T10:26:39.364+0000"
                sponsorLastUserId: "caio.merotti@monkey.tech"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  external-code:
                    href: "http://localhost/v2/buyers/10/sponsors/54"
                    type: "PUT"
                  unapprove:
                    href: "http://localhost/v2/buyers/10/sponsors/54/unapprove"
                    type: "POST"
                  documents:
                    href: "http://localhost/v2/buyers/10/sponsors/54/documents"
                    type: "GET"
                  limit:
                    href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                    type: "GET"
                  taxes:
                    href: "http://localhost/v2/buyers/10/sponsors/50851124000159/taxes"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/document-types"
                    type: "GET"
  /v2/buyers/{id}/sponsors/unapprove-all:
    post:
      tags:
      - "Sponsors"
      summary: "Reject All Sponsors"
      description: ""
      operationId: "buyersponsorweb/unapproveAllBuyerSponsorsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerSpecificationBuyerSponsor"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        202:
          description: "Accepted"
  /v2/buyers/{id}/sponsors/approve-all:
    post:
      tags:
      - "Sponsors"
      summary: "Approve All Sponsors"
      description: ""
      operationId: "buyersponsorweb/approveAllBuyerSponsorsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerSpecificationBuyerSponsor"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        202:
          description: "Accepted"
  /v2/buyers/{id}/sellers/{sellerId}/unapprove:
    post:
      tags:
      - "Assignments"
      summary: "Reject Assignment"
      description: ""
      operationId: "buyersellerweb/unapproveSellerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBuyerSellerRequest"
            example:
              detail: "Some description here"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSeller"
              example:
                status: "APPROVED"
                risk: "GROUP1"
                governmentId: "50851124000159"
                name: "Felipe Company"
                phone: "4324324324234"
                companyName: "FEL"
                fantasyName: "Felipe Company Fantasy"
                foundationDate: "1998-07-09T16:36:49.364+0000"
                mainPhone: "551134443434"
                alternativePhone: "5511322323444"
                address: "Rua Poetisa Colombina"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "São Paulo"
                state: "SP"
                country: "Brazil"
                zipCode: "05623030"
                activityCode: "1234-5/67"
                legalNature: "LTDA."
                buyerAdhesionTermSignatureStatus: "SIGNED"
                programAdhesionTermStatus: "SIGNED"
                digitalCertificate: "VALID"
                biometricVerificationStatus: "WAITING_VALIDATION"
                bankAccountReviewedBySponsor: "true"
                legalResponsibles:
                - name: "Felipe Adorno"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  birthdayDate: "1988-11-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123456780"
                  phone: "551134443434"
                  email: "felipe@monkey.exchange"
                  sign: "true"
                  financialAuthority: "true"
                  financialAuthorityValue: "10000"
                  createdAt: "2011-11-09T16:36:49.364+0000"
                  createUserId: "felipe@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2000-11-09T16:36:49.364+0000"
                  lastUserId: "felipe@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                createdAt: "1997-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  bank-accounts:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/buyers/10/sellers/54/approve"
                    type: "POST"
                  risk:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "PUT"
                  documents:
                    href: "http://localhost/v2/buyers/10/sellers/54/documents"
                    type: "GET"
                  audits:
                    href: "http://localhost/v2/buyers/10/sellers/54/audits"
                    type: "GET"
                  sponsors:
                    href: "http://localhost/v2/buyers/10/sellers/54/sponsors"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/document-types"
                    type: "GET"
                  adhesion-term:
                    href: "http://localhost/v2/buyers/10/adhesion-terms/94/regenerate"
                    type: "POST"
  /v2/buyers/{id}/sellers/{sellerId}/approve:
    post:
      tags:
      - "Assignments"
      summary: "Approve Assignment"
      description: ""
      operationId: "buyersellerweb/approveSellerContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBuyerSeller"
              example:
                status: "APPROVED"
                risk: "GROUP1"
                governmentId: "50851124000159"
                name: "Felipe Company"
                phone: "4324324324234"
                companyName: "FEL"
                fantasyName: "Felipe Company Fantasy"
                foundationDate: "2000-11-09T16:36:49.364+0000"
                mainPhone: "551134443434"
                alternativePhone: "5511322323444"
                address: "Rua Poetisa Colombina"
                addressNumber: "123"
                addressComplement: "complement"
                neighborhood: "Vila Morse"
                city: "São Paulo"
                state: "SP"
                country: "Brazil"
                zipCode: "05623030"
                activityCode: "1234-5/67"
                legalNature: "LTDA."
                buyerAdhesionTermSignatureStatus: "SIGNED"
                programAdhesionTermStatus: "SIGNED"
                digitalCertificate: "VALID"
                biometricVerificationStatus: "WAITING_VALIDATION"
                bankAccountReviewedBySponsor: "true"
                legalResponsibles:
                - name: "Felipe Adorno"
                  governmentId: "18717537000132"
                  type: "PARTNER"
                  birthdayDate: "2000-12-09T16:36:49.364+0000"
                  documentType: "RG"
                  documentNumber: "123456780"
                  phone: "551134443434"
                  email: "felipe@monkey.exchange"
                  sign: "true"
                  financialAuthority: "true"
                  financialAuthorityValue: "10000"
                  createdAt: "1999-20-09T16:36:49.364+0000"
                  createUserId: "felipe@monkey.exchange"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2000-11-09T16:36:49.364+0000"
                  lastUserId: "felipe@monkey.exchange"
                  lastUserIp: "127.0.0.1"
                createdAt: "1999-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2000-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  bank-accounts:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts"
                    type: "GET"
                  unapprove:
                    href: "http://localhost/v2/buyers/10/sellers/54/unapprove"
                    type: "POST"
                  risk:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "PUT"
                  documents:
                    href: "http://localhost/v2/buyers/10/sellers/54/documents"
                    type: "GET"
                  audits:
                    href: "http://localhost/v2/buyers/10/sellers/54/audits"
                    type: "GET"
                  sponsors:
                    href: "http://localhost/v2/buyers/10/sellers/54/sponsors"
                    type: "GET"
                  messages:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/messages"
                    type: "GET"
                  document-types:
                    href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/document-types"
                    type: "GET"
                  adhesion-term:
                    href: "http://localhost/v2/buyers/10/adhesion-terms/94/regenerate"
                    type: "POST"
  /v2/buyers/{id}/scheduled-purchases/{purchaseId}/refuse:
    post:
      tags:
      - "Approvals"
      summary: "Reject"
      description: ""
      operationId: "scheduledpurchaseweb/refuseScheduledPurchaseContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        202:
          description: "Accepted"
  /v2/buyers/{id}/scheduled-purchases/{purchaseId}/approve:
    post:
      tags:
      - "Approvals"
      summary: "Approve"
      description: ""
      operationId: "scheduledpurchaseweb/approveScheduledPurchaseContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        202:
          description: "Accepted"
  /v2/buyers/{id}/bank-accounts:
    get:
      tags:
      - "Bank Account Data"
      summary: "List"
      description: ""
      operationId: "bankaccountweb/findAllBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "Conta buyer 10"
                    bank: "033"
                    bankName: "Santander"
                    agency: "3333"
                    account: "66666666"
                    accountDigit: "6"
                    main: "true"
                    type: "RECEIVEMENT"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/bank-accounts/99"
                        type: "GET"
                      update:
                        href: "http://localhost/v2/buyers/10/bank-accounts/99"
                        type: "PUT"
                      delete:
                        href: "http://localhost/v2/buyers/10/bank-accounts/99"
                        type: "DELETE"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/bank-accounts?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Bank Account Data"
      summary: "Create"
      description: ""
      operationId: "bankaccountweb/createBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/buyerBankAccount"
            example:
              alias: "Bank Account"
              bank: "033"
              bankName: "Santander"
              agency: "3333"
              account: "66666666"
              accountDigit: "0"
              main: true
              type: "RECEIVEMENT"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                main: "true"
                type: "RECEIVEMENT"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/buyers/10/bank-accounts/99"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/adhesion-terms/{sellerId}/regenerate:
    post:
      tags:
      - "Adhesion Term/Investor Contracts"
      summary: "Regenerate Buyer Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermweb/regenerateContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        202:
          description: "Accepted"
  /v2/buyers/{id}/sponsors:
    get:
      tags:
      - "Sponsors"
      summary: "List"
      description: ""
      operationId: "buyersponsorweb/findAllSponsorsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerSpecificationBuyerSponsor"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelBuyerSponsor"
              example:
                _embedded:
                  sponsors:
                  - createdAt: "2008-11-09T16:36:49.364+0000"
                    createUserId: "guilherme@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "guilherme@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    name: "Guilherme Company"
                    governmentId: "50851124000159"
                    companyName: "GUI"
                    fantasyName: "Guilherme Company Fantasy"
                    foundationDate: "2014-11-09T16:36:49.364+0000"
                    activityCode: "1234-5/67"
                    address: "Rua Douradina"
                    addressNumber: "123"
                    addressComplement: "complement"
                    neighborhood: "Sebastião Moraes"
                    city: "Catanduva"
                    state: "SP"
                    country: "Brazil"
                    zipCode: "15807337"
                    pictureUrl: "http://image.com"
                    legalResponsibles:
                    - createdAt: "2008-11-09T16:36:49.364+0000"
                      createUserId: "guilherme@monkey.exchange"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2009-11-09T16:36:49.364+0000"
                      lastUserId: "guilherme@monkey.exchange"
                      lastUserIp: "127.0.0.1"
                      name: "Guilherme Bernardi"
                      governmentId: "18717537000132"
                      type: "PARTNER"
                      phone: "4324324324234"
                      companyPhone: "4324324324234"
                      email: "monkey@monkey.com"
                      birthdayDate: "1980-10-09T16:36:49.364+0000"
                      sign: "true"
                    status: "APPROVED"
                    externalCode: "1234567"
                    sponsorCreatedAt: "2020-01-09T11:35:49.364+0000"
                    sponsorCreateUserId: "caio.merotti@monkey.tech"
                    sponsorUpdatedAt: "2023-02-09T10:26:39.364+0000"
                    sponsorLastUserId: "caio.merotti@monkey.tech"
                    _links:
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      self:
                        href: "http://localhost/v2/buyers/10/sponsors/54"
                        type: "GET"
                      external-code:
                        href: "http://localhost/v2/buyers/10/sponsors/54"
                        type: "PUT"
                      unapprove:
                        href: "http://localhost/v2/buyers/10/sponsors/54/unapprove"
                        type: "POST"
                      documents:
                        href: "http://localhost/v2/buyers/10/sponsors/54/documents"
                        type: "GET"
                      limit:
                        href: "http://localhost/v2/buyers/10/sponsors/54/limits"
                        type: "GET"
                      taxes:
                        href: "http://localhost/v2/buyers/10/sponsors/50851124000159/taxes"
                        type: "GET"
                      messages:
                        href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/messages"
                        type: "GET"
                      document-types:
                        href: "http://localhost/v1/buyers/45493745000178/sponsors/50851124000159/document-types"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sponsors?page=0&size=20"
                  approve-all:
                    href: "http://localhost/v2/buyers/10/sponsors/approve-all"
                    type: "POST"
                  unapprove-all:
                    href: "http://localhost/v2/buyers/10/sponsors/unapprove-all"
                    type: "POST"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/sponsors/{sponsorId}/documents:
    get:
      tags:
      - "Sponsors"
      summary: "Download Sponsor Documentation"
      description: ""
      operationId: "SponsorDocuments"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/buyers/{id}/sellers:
    get:
      tags:
      - "Assignments"
      summary: "List Assignments"
      description: ""
      operationId: "buyersellerweb/findAllSellersContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerSpecificationBuyerSeller"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelBuyerSeller"
              example:
                _embedded:
                  sellers:
                  - status: "APPROVED"
                    risk: "GROUP1"
                    governmentId: "50851124000159"
                    name: "Felipe Company"
                    phone: "4324324324234"
                    companyName: "FEL"
                    fantasyName: "Felipe Company Fantasy"
                    foundationDate: "2014-11-09T16:36:49.364+0000"
                    mainPhone: "551134443434"
                    alternativePhone: "5511322323444"
                    address: "Rua Poetisa Colombina"
                    addressNumber: "123"
                    addressComplement: "complement"
                    neighborhood: "Vila Morse"
                    city: "São Paulo"
                    state: "SP"
                    country: "Brazil"
                    zipCode: "05623030"
                    activityCode: "1234-5/67"
                    legalNature: "LTDA."
                    buyerAdhesionTermSignatureStatus: "SIGNED"
                    programAdhesionTermStatus: "SIGNED"
                    digitalCertificate: "VALID"
                    biometricVerificationStatus: "WAITING_VALIDATION"
                    bankAccountReviewedBySponsor: "true"
                    legalResponsibles:
                    - name: "Felipe Adorno"
                      governmentId: "18717537000132"
                      type: "PARTNER"
                      birthdayDate: "2007-11-09T16:36:49.364+0000"
                      documentType: "RG"
                      documentNumber: "123456780"
                      phone: "551134443434"
                      email: "felipe@monkey.exchange"
                      sign: "true"
                      financialAuthority: "true"
                      financialAuthorityValue: "10000"
                      createdAt: "2008-11-09T16:36:49.364+0000"
                      createUserId: "felipe@monkey.exchange"
                      createUserIp: "127.0.0.1"
                      updatedAt: "2009-11-09T16:36:49.364+0000"
                      lastUserId: "felipe@monkey.exchange"
                      lastUserIp: "127.0.0.1"
                    createdAt: "2010-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2011-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    sellerCreatedAt: "2010-11-09T16:36:49.364+0000"
                    sellerCreateUserId: "felipe@monkey.exchange"
                    sellerUpdatedAt: "2010-11-09T16:36:49.364+0000"
                    sellerLastUserId: "felipe@monkey.exchange"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/sellers/54"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      bank-accounts:
                        href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/buyers/10/sellers/54/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/buyers/10/sellers/54/unapprove"
                        type: "POST"
                      risk:
                        href: "http://localhost/v2/buyers/10/sellers/54"
                        type: "PUT"
                      documents:
                        href: "http://localhost/v2/buyers/10/sellers/54/documents"
                        type: "GET"
                      audits:
                        href: "http://localhost/v2/buyers/10/sellers/54/audits"
                        type: "GET"
                      sponsors:
                        href: "http://localhost/v2/buyers/10/sellers/54/sponsors"
                        type: "GET"
                      messages:
                        href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/messages"
                        type: "GET"
                      document-types:
                        href: "http://localhost/v1/buyers/45493745000178/sellers/50851124000159/document-types"
                        type: "GET"
                      adhesion-term:
                        href: "http://localhost/v2/buyers/10/adhesion-terms/94/regenerate"
                        type: "POST"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/sellers/{sellerId}/sponsors:
    get:
      tags:
      - "Assignments"
      summary: "List Sponsors of an Assignment"
      description: ""
      operationId: "supplierweb/findAllSupplierContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerSpecificationSupplier"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelSupplier"
              example:
                _embedded:
                  sponsors:
                  - sponsorGovernmentId: "62144175000120"
                    sponsorName: "SPONSOR"
                    allowed: "true"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/sellers/99"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/buyers/10/sponsors/39"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/99/sponsors?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/sellers/{sellerId}/documents:
    get:
      tags:
      - "Assignments"
      summary: "Download Assignment Documentation"
      description: ""
      operationId: "SellerDocuments"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/buyers/{id}/sellers/{sellerId}/bank-accounts:
    get:
      tags:
      - "Assignment Bank Account Data"
      summary: "List Assignment Bank Accounts"
      description: ""
      operationId: "sellerbankaccountweb/findAllSellerBankAccountsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelSellerBankAccount"
              example:
                _embedded:
                  bank-accounts:
                  - alias: "CONTA CORRENTE XPTO"
                    bank: "100"
                    bankName: "BANCO XPTO"
                    agency: "12345"
                    account: "123456"
                    accountDigit: "1"
                    sellerGovernmentId: "18717537000132"
                    sellerName: "SELLER TESTE"
                    main: "true"
                    status: "CREATED_BY_SELLER"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts/4ixXuunoWj"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/buyers/10/sellers/54"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/buyers/10/sellers/54/approve"
                        type: "POST"
                      unapprove:
                        href: "http://localhost/v2/buyers/10/sellers/54/unapprove"
                        type: "POST"
                      documents:
                        href: "http://localhost/v2/buyers/10/sellers/54/documents"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/sellers/{sellerId}/bank-accounts/{bankAccountId}:
    get:
      tags:
      - "Assignment Bank Account Data"
      summary: "Find Assignment Bank Account"
      description: ""
      operationId: "sellerbankaccountweb/findOneSellerBankAccountContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "bankAccountId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelSellerBankAccount"
              example:
                alias: "Conta buyer 10"
                bank: "033"
                bankName: "Santander"
                agency: "3333"
                account: "66666666"
                accountDigit: "6"
                sellerGovernmentId: "18717537000132"
                sellerName: "SELLER TESTE"
                main: "true"
                status: "CREATED_BY_SELLER"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54/bank-accounts/4ixXuunoWj"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/buyers/10/sellers/54"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/buyers/10/sellers/54/approve"
                    type: "POST"
                  unapprove:
                    href: "http://localhost/v2/buyers/10/sellers/54/unapprove"
                    type: "POST"
                  documents:
                    href: "http://localhost/v2/buyers/10/sellers/54/documents"
                    type: "GET"
  /v2/buyers/{id}/sellers/{sellerId}/audits:
    get:
      tags:
      - "Assignments"
      summary: "Audit Events"
      description: ""
      operationId: "sellerauditingweb/findAllSellerAuditsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sellerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerSpecificationSellerAuditingHistory"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelSellerAuditingHistory"
              example:
                _embedded:
                  audits:
                  - createdAt: "2008-11-09T16:36:49.364+0000"
                    createUserId: "guilherme@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "guilherme@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    step: "sellerStepPhone"
                    detail: "detail"
                    _links:
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/buyers/10/sellers/54"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/sellers/54/audits?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/scheduled-purchases:
    get:
      tags:
      - "Approvals"
      summary: "List"
      description: ""
      operationId: "scheduledpurchaseweb/findAllScheduledPurchaseContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerSpecificationScheduledPurchase"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/buyerPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerPagedModelEntityModelScheduledPurchase"
              example:
                _embedded:
                  scheduled-purchases:
                  - id: "fekU83s8cV"
                    sponsorName: "BANCO PINE S/A"
                    sponsorGovernmentId: "62144175000120"
                    sellerName: "BANCO PINE S/A"
                    sellerGovernmentId: "62144175000120"
                    paymentDate: "2019-02-05"
                    paymentValue: "33375.09"
                    status: "WAITING"
                    days: "76"
                    tax: "1.1"
                    createdAt: "2009-11-09T16:36:49.364+0000"
                    createUserId: "monkey_tester@monkey.com"
                    createUserIp: "10.0.0.1"
                    updatedAt: "2009-11-09T16:36:49.364+0000"
                    lastUserId: "monkey_tester@monkey.com"
                    lastUserIp: "10.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV"
                        type: "GET"
                      approve:
                        href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV/approve"
                        type: "POST"
                      refuse:
                        href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV/refuse"
                        type: "POST"
                      sponsor:
                        href: "http://localhost/v2/buyers/10/sponsors/20"
                        type: "GET"
                      seller:
                        href: "http://localhost/v2/buyers/10/sellers/30"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      purchase:
                        href: "http://localhost/v2/buyers/10/purchases/fekU83s8cV"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/scheduled-purchases?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/scheduled-purchases/{purchaseId}:
    get:
      tags:
      - "Approvals"
      summary: "Detail"
      description: ""
      operationId: "scheduledpurchaseweb/findOneScheduledPurchaseContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/buyerMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/buyerEntityModelScheduledPurchase"
              example:
                id: "fekU83s8cV"
                sponsorName: "BANCO PINE S/A"
                sponsorGovernmentId: "62144175000120"
                sellerName: "BANCO PINE S/A"
                sellerGovernmentId: "62144175000120"
                paymentDate: "2019-02-05"
                paymentValue: "33375.09"
                status: "WAITING"
                days: "76"
                tax: "1.1"
                createdAt: "2009-11-09T16:36:49.364+0000"
                createUserId: "monkey_tester@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2009-11-09T16:36:49.364+0000"
                lastUserId: "monkey_tester@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV"
                    type: "GET"
                  approve:
                    href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV/approve"
                    type: "POST"
                  refuse:
                    href: "http://localhost/v2/buyers/10/scheduled-purchases/fekU83s8cV/refuse"
                    type: "POST"
                  sponsor:
                    href: "http://localhost/v2/buyers/10/sponsors/20"
                    type: "GET"
                  seller:
                    href: "http://localhost/v2/buyers/10/sellers/30"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/10/purchases/fekU83s8cV"
                    type: "GET"
  /v2/buyers/{id}/adhesion-term-configurations:
    get:
      tags:
      - "Adhesion Term Configuration"
      summary: "Find Adhesion Term Mandatory Configuration"
      description: ""
      operationId: "buyeradhesiontermconfigurationweb/BuyerConfigurationAdhesionTermFindOne.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermConfiguration"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                active: "true"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/adhesion-term-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
    put:
      tags:
      - "Adhesion Term Configuration"
      summary: "Update Adhesion Term Mandatory Configuration"
      description: ""
      operationId: "buyeradhesiontermconfigurationweb/BuyerConfigurationAdhesionTermPut.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalSignBuyerAdhesionTermConfiguration"
            example:
              active: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermConfiguration"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                active: "true"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/adhesion-term-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
    post:
      tags:
      - "Adhesion Term Configuration"
      summary: "Create Adhesion Term Mandatory Configuration"
      description: ""
      operationId: "buyeradhesiontermconfigurationweb/BuyerConfigurationAdhesionTermPost.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalSignBuyerAdhesionTermConfiguration"
            example:
              active: true
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermConfiguration"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                active: "true"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/adhesion-term-configurations"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
  /v2/buyers/{buyerId}/adhesion-term-signature-configurations:
    get:
      tags:
      - "Adhesion Term Signer Configuration"
      summary: "Find Buyer Signers for Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermsignerweb/BuyerSignersFindOne.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermSigners"
              example:
                createdAt: "2022-12-28T09:39:21"
                createUserId: "teste@monkey.tech"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-12-28T09:39:21"
                lastUserId: "teste@monkey.tech"
                lastUserIp: "127.0.0.1"
                signers:
                - email: "signer@monkey.tech"
                  name: "Signer"
                  governmentId: "12345678998"
                _links:
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/buyers/10/adhesion-term-signature-configurations"
                    type: "GET"
    put:
      tags:
      - "Adhesion Term Signer Configuration"
      summary: "Update Adhesion Term Signer"
      description: ""
      operationId: "buyeradhesiontermsignerweb/BuyerAdhesionTermSignerPut.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalSignBuyerAdhesionTermSigners"
            example:
              signers:
              - email: "signer@monkey.tech"
                name: "Signer"
                governmentId: "12345678998"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermSigners"
              example:
                createdAt: "2022-12-28T09:39:21"
                createUserId: "teste@monkey.tech"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-12-28T09:39:21"
                lastUserId: "teste@monkey.tech"
                lastUserIp: "127.0.0.1"
                signers:
                - email: "signer@monkey.tech"
                  name: "Signer"
                  governmentId: "12345678998"
                _links:
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/buyers/10/adhesion-term-signature-configurations"
                    type: "GET"
    post:
      tags:
      - "Adhesion Term Signer Configuration"
      summary: "Create Signer for Adhesion Term"
      description: ""
      operationId: "buyeradhesiontermsignerweb/BuyerAdhesionTermSignerPost.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalSignBuyerAdhesionTermSigners"
            example:
              signers:
              - email: "signer@monkey.tech"
                name: "Signer"
                governmentId: "12345678998"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/externalSignEntityModelBuyerAdhesionTermSigners"
              example:
                createdAt: "2022-12-28T09:39:21"
                createUserId: "teste@monkey.tech"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-12-28T09:39:21"
                lastUserId: "teste@monkey.tech"
                lastUserIp: "127.0.0.1"
                signers:
                - email: "signer@monkey.tech"
                  name: "Signer"
                  governmentId: "12345678998"
                _links:
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/buyers/10/adhesion-term-signature-configurations"
                    type: "GET"
    delete:
      tags:
      - "Adhesion Term Signer Configuration"
      summary: "Delete Adhesion Term Signer"
      description: ""
      operationId: "buyeradhesiontermsignerweb/BuyerAdhesionTermSignerDelete.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/externalSignMessage"
        204:
          description: "No Content"
  /v2/buyers/{buyerId}/sponsors/{sponsorGovernmentId}/taxes:
    get:
      tags:
      - "Taxes"
      summary: "List"
      description: ""
      operationId: "taxweb/ListTaxContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorGovernmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/auctionSpecificationTax"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/auctionPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auctionPagedModelTax"
              example:
                _embedded:
                  taxes:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "tiago@monkeyecx.com"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "tiago@monkeyecx.com"
                    lastUserIp: "127.0.0.1"
                    sponsorGovernmentId: "78592346000113"
                    days: "180"
                    risk: "Grupo 1"
                    value: "100000"
                    validity: "2050-04-27T21:11:08.000Z"
                    calculationType: "COMPOUND_INTEREST"
                    simpleInterestValue: "0.4"
                    _links:
                      tax-file:
                        href: "http://localhost/v2/buyers/95/buyer-tax-file/abcAbTs000"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/95"
                        type: "GET"
                      sponsor:
                        href: "http://localhost/v2/buyers/95/sponsors/888"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/sponsors/78592346000113/taxes?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Taxes"
      summary: "Create"
      description: ""
      operationId: "taxweb/CreateTaxContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "sponsorGovernmentId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auctionTaxesResource"
            example:
              taxes:
              - days: 33
                risk: "Grupo 1"
                value: 0.35
                validity: "2120-05-05"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        202:
          description: "Accepted"
  /v2/buyers/{buyerId}/buyer-tax-file:
    get:
      tags:
      - "Tax Files"
      summary: "List"
      description: ""
      operationId: "taxfileweb/ListTaxFileContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/auctionSpecificationTaxFile"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/auctionPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auctionPagedModelTaxFile"
              example:
                _embedded:
                  tax-files:
                  - status: "WAITING_PROCESS"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkeyecx.com"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkeyecx.com"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/95/buyer-tax-file/iLE147W5BS"
                        type: "GET"
                      file:
                        href: "http://localhost/v2/buyers/95/buyer-tax-file/iLE147W5BS/file"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/95"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/buyer-tax-file?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Tax Files"
      summary: "Upload"
      description: ""
      operationId: "TaxFileUpload"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                file:
                  type: "string"
                  format: "binary"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auctionTaxFile"
  /v2/buyers/{buyerId}/buyer-tax-file/{id}:
    get:
      tags:
      - "Tax Files"
      summary: "Detail"
      description: ""
      operationId: "taxfileweb/GetTaxFileContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/auctionTaxFile"
              example:
                status: "WAITING_PROCESS"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkeyecx.com"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkeyecx.com"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/buyer-tax-file/iLE147W5BS"
                  file:
                    href: "http://localhost/v2/buyers/95/buyer-tax-file/iLE147W5BS/file"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
  /v2/buyers/{buyerId}/buyer-tax-file/{id}/file:
    get:
      tags:
      - "Tax Files"
      summary: "Download"
      description: ""
      operationId: "TaxFileDownload"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/auctionMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/buyers/{id}/events:
    get:
      tags:
      - "Event History"
      summary: "List"
      description: ""
      operationId: "buyerauditingeventweb/FindAllAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosSpecificationAuditingEvent"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/spyrosPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosPagedModelEntityModelAuditingEvent"
              example:
                _embedded:
                  events:
                  - createdAt: "2009-11-09T16:36:49.364+0000"
                    user: "monkey_tester@monkey.com"
                    userIp: "10.0.0.1"
                    traceId: "756"
                    type: "Conta Bancária Deletada"
                    details:
                    - label: "CNPJ"
                      value: "42641777000185"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/events/a331a1f0-37bc-4c68-bde2-c9a940a9068d"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/events?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/events/{eventId}:
    get:
      tags:
      - "Event History"
      summary: "Find an Event by ID"
      description: ""
      operationId: "buyerauditingeventweb/FindOneAuditingEventContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
              example:
                createdAt: "2009-11-09T16:36:49.364+0000"
                user: "monkey_tester@monkey.com"
                userIp: "10.0.0.1"
                traceId: "756"
                type: "Conta Bancária Deletada"
                details:
                - label: "CNPJ"
                  value: "42641777000185"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/events/{eventId}/details/{receivedEventId}:
    get:
      tags:
      - "Event History"
      summary: "Detail"
      description: ""
      operationId: "buyerauditingeventweb/FindOneAuditingEventDetailContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int64"
      - name: "eventId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "receivedEventId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/spyrosMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEventDetailResource"
              example:
                detail:
                  companyId: 569083186
                  companyType: "BUYER"
                  program: "monkey"
                  signers:
                  - email: "jose@monkey.exchange"
                    name: "José"
                    governmentId: "08317139689"
                  - email: "carlos@monkey.exchange"
                    name: "Carlos"
                    governmentId: "08317139689"
                  storedEventId: "fd1091aa-5113-4364-87e5-047fcef40c57"
                  relationId: "monkey"
                  eventType: "ProgramAdhesionTermConfigurationUpdatedEvent"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e/details/fd1091aa-5113-4364-87e5-047fcef40c57"
                    type: "GET"
                  event:
                    href: "http://localhost/v2/buyers/10/events/6987bf16-563d-4360-8c0e-f197a4c1152e"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/purchases/{purchaseId}/custodies-response:
    post:
      tags:
      - "Purchases"
      summary: "Approve/Reject"
      description: ""
      operationId: "custodyweb/CustodyResponseContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/integrationV2PurchaseConfirmation"
            example:
              items:
              - id: "3uBUjV4yE2"
                status: "APPROVED"
                installment: 1
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/integrationV2PurchaseConfirmation"
              example:
                _links:
                  signature:
                    href: "http://localhost/v2/buyers/10/signatures/YKqta0lWst"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/10/purchases/YKqta0lWst"
                    type: "GET"
                  self:
                    href: "http://localhost/v2/buyers/10/purchases/YKqta0lWst/custodies-response"
                    type: "POST"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/liquidations:
    post:
      tags:
      - "Payments"
      summary: "Confirm Payment For A Purchase"
      description: ""
      operationId: "buyerliquidation/BuyerLiquidationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/integrationV2Liquidation"
            example:
              items:
              - liquidationDate: "2019-02-15"
                liquidationValue: 99375.05
                externalId: "3fBUjV4yAs"
                invoiceNumber: "55bUjV499a"
                settlementType: "BILL"
                supplierGovernmentId: "05890359000103"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/integrationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/integrationV2Liquidation"
              example:
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/liquidations"
                    type: "POST"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v1/buyers/{buyerId}/users/{username}:
    get:
      tags:
      - "Users"
      summary: "Find User"
      description: ""
      operationId: "buyerweb/BuyerFindOne.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "BUYER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    put:
      tags:
      - "Users"
      summary: "Change Access Level"
      description: ""
      operationId: "buyerweb/BuyerUpdate.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoBuyerRoleResource"
            example:
              role: "VIEW"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "BUYER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
    delete:
      tags:
      - "Users"
      summary: "Remove User Access"
      description: ""
      operationId: "buyerweb/BuyerDelete.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        204:
          description: "No Content"
  /v1/buyers/{buyerId}/users:
    get:
      tags:
      - "Users"
      summary: "List Users"
      description: ""
      operationId: "buyerweb/BuyerFindAll.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoSpecificationUserCompany"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/ssoPageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoPagedModelEntityModelUserCompany"
              example:
                _embedded:
                  profiles:
                  - createdAt: "2018-12-04T19:30:24Z"
                    createUserId: "UNKNOWN"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2018-12-04T19:30:24Z"
                    lastUserId: "UNKNOWN"
                    lastUserIp: "UNKNOWN"
                    role: "ADMIN"
                    status: "ACTIVE"
                    companyId: "1614639283"
                    governmentId: "71537251000158"
                    name: "Felipe Teste Assinatura"
                    type: "BUYER"
                    adhesionTerm: "false"
                    program: "jallesmachado"
                    username: "felipe@monkey.exchange"
                    _links:
                      self:
                        href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                        type: "GET"
                      delete:
                        href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                        type: "DELETE"
                      update:
                        href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                        type: "PUT"
                      buyer:
                        href: "http://localhost/v2/buyers/123"
                        type: "GET"
                      me:
                        href: "http://localhost/me"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/123/users?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Users"
      summary: "Grant User Access"
      description: ""
      operationId: "buyerweb/BuyerCreate.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssoBuyerCompanyResource"
            example:
              email: "sponsorjallesmachado2@gmail.com"
              role: "ADMIN"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ssoMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
              example:
                createdAt: "2018-12-04T19:30:24Z"
                createUserId: "UNKNOWN"
                createUserIp: "UNKNOWN"
                updatedAt: "2018-12-04T19:30:24Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "UNKNOWN"
                role: "ADMIN"
                status: "ACTIVE"
                companyId: "1614639283"
                governmentId: "71537251000158"
                name: "Felipe Teste Assinatura"
                type: "BUYER"
                adhesionTerm: "false"
                program: "jallesmachado"
                username: "felipe@monkey.exchange"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "GET"
                  delete:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "DELETE"
                  update:
                    href: "http://localhost/v1/buyers/123/users/felipe@monkey.exchange"
                    type: "PUT"
                  buyer:
                    href: "http://localhost/v2/buyers/123"
                    type: "GET"
                  me:
                    href: "http://localhost/me"
                    type: "GET"
  /v2/buyers/{id}/purchases/{purchaseId}/purchase-items:
    get:
      tags:
      - "Operations"
      summary: "List Items Of An Operation"
      description: ""
      operationId: "purchaseitemweb/FindAllPurchaseItemsContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationOperationItem"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationEntityModelMessage"
                - $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelPurchaseItemDTO"
              example:
                _embedded:
                  purchase-items:
                  - tax: "1.1"
                    sellerPaymentValue: "11774.12"
                    sponsorPaymentValue: "0"
                    sponsorTax: "0"
                    status: "ACTIVE"
                    invoiceKey: "abc16"
                    invoiceNumber: "abc16"
                    invoiceDate: "2018-11-09T16:36:49.364+0000"
                    installment: "1"
                    totalInstallment: "10"
                    paymentDate: "2018-11-09T16:36:49.364+0000"
                    paymentValue: "39353"
                    externalId: "abc16"
                    receivableUuid: "iFteEnFF6n"
                    createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items/oVU2dUQVar"
                        type: "GET"
                      purchase:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc"
                        type: "GET"
                      bill:
                        href: "http://localhost/v2/buyers/10/purchase-items/oVU2dUQVar/bills"
                        type: "GET"
                      bill-paid:
                        href: "http://localhost/v2/buyers/10/purchase-items/oVU2dUQVar/bills/paid"
                        type: "POST"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{id}/purchases/{purchaseId}/purchase-items/{itemId}:
    get:
      tags:
      - "Operations"
      summary: "Search Item Of An Operation"
      description: ""
      operationId: "purchaseitemweb/FindOnePurchaseItemContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "itemId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationEntityModelMessage"
                - $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelPurchaseItemDTO"
              example:
                tax: "1.1"
                sellerPaymentValue: "11774.12"
                sponsorPaymentValue: "0"
                sponsorTax: "0"
                status: "ACTIVE"
                invoiceKey: "abc16"
                invoiceNumber: "abc16"
                invoiceDate: "2018-11-09T16:36:49.364+0000"
                installment: "1"
                totalInstallment: "10"
                paymentDate: "2018-11-09T16:36:49.364+0000"
                paymentValue: "39353"
                externalId: "abc16"
                receivableUuid: "iFteEnFF6n"
                billLine: "23790.00108 20000.000123 30000.000205 9 80880000009993"
                billUrl: "https://bole.to/3/xvmzjo"
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items/oVU2dUQVar"
                    type: "GET"
                  purchase:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc"
                    type: "GET"
                  bill:
                    href: "http://localhost/v2/buyers/10/purchase-items/oVU2dUQVar/bills"
                    type: "GET"
                  bill-paid:
                    href: "http://localhost/v2/buyers/10/purchase-items/oVU2dUQVar/bills/paid"
                    type: "POST"
  /v2/buyers/{buyerId}/purchases:
    get:
      tags:
      - "Operations"
      summary: "List Operations"
      description: ""
      operationId: "purchaseweb/FindAllPurchasesContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationSpecificationOperation"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/operationPageable"
      responses:
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationEntityModelMessage"
                - $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationPagedModelEntityModelPurchaseDTO"
              example:
                _embedded:
                  purchases:
                  - createdAt: "2018-11-09T16:36:49.364+0000"
                    createUserId: "felipe@monkey.exchange"
                    createUserIp: "127.0.0.1"
                    updatedAt: "2018-11-09T16:36:49.364+0000"
                    lastUserId: "felipe@monkey.exchange"
                    lastUserIp: "127.0.0.1"
                    status: "WAITING_CUSTODY"
                    tax: "1.1"
                    days: "76"
                    paymentDate: "2019-02-05T02:00:00.000+0000"
                    grossPaymentValue: "33375.09"
                    netPaymentValue: "33375.09"
                    sponsorName: "BANCO PINE S/A"
                    sponsorGovernmentId: "62144175000120"
                    sponsorExternalCode: "98"
                    sponsorAddress: "Alameda dos Nhambiquaras"
                    sponsorAddressNumber: "11111111"
                    sponsorAddressComplement: "APTO 15"
                    sponsorNeighborhood: "Indianópolis"
                    sponsorCity: "São Paulo"
                    sponsorState: "SP"
                    sponsorCountry: "Brasil"
                    sponsorZipCode: "04090011"
                    sellerName: "BANCO PINE S/A"
                    sellerGovernmentId: "62144175000120"
                    sellerAddress: "Alameda dos Nhambiquaras"
                    sellerAddressNumber: "112334"
                    sellerAddressComplement: "APTO 15"
                    sellerNeighborhood: "Indianópolis"
                    sellerCity: "São Paulo"
                    sellerState: "SP"
                    sellerCountry: "Brasil"
                    sellerZipCode: "04090011"
                    sellerBank: "Banco Santander (Brasil) S. A."
                    sellerAgency: "123"
                    sellerAccount: "45678"
                    sellerAccountDigit: "1"
                    _links:
                      self:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc"
                        type: "GET"
                      items:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v2/buyers/10"
                        type: "GET"
                      receivement-account:
                        href: "http://localhost/v2/buyers/10/bank-accounts/44"
                        type: "GET"
                      payment-account:
                        href: "http://localhost/v2/buyers/10/bank-accounts/44"
                        type: "GET"
                      signature:
                        href: "http://localhost/v2/buyers/10/signatures/0WU5nCeqjc"
                        type: "GET"
                      custody-response:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/custodies-response"
                        type: "POST"
                      approved-items:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items?search=status:SOLD"
                        type: "GET"
                      unapproved-items:
                        href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items?search=status:REFUSED"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/purchases?page=0&size=20"
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
  /v2/buyers/{buyerId}/purchases/{purchaseId}:
    get:
      tags:
      - "Operations"
      summary: "Search An Operation"
      description: ""
      operationId: "purchaseweb/FindOnePurchaseContract.json"
      parameters:
      - name: "buyerId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "purchaseId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                oneOf:
                - $ref: "#/components/schemas/operationEntityModelMessage"
                - $ref: "#/components/schemas/operationMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/operationMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationEntityModelPurchaseDTO"
              example:
                createdAt: "2018-11-09T16:36:49.364+0000"
                createUserId: "felipe@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2018-11-09T16:36:49.364+0000"
                lastUserId: "felipe@monkey.exchange"
                lastUserIp: "127.0.0.1"
                status: "WAITING_CUSTODY"
                tax: "1.1"
                days: "76"
                paymentDate: "2019-02-05T02:00:00.000+0000"
                grossPaymentValue: "33375.09"
                netPaymentValue: "33375.09"
                sponsorName: "BANCO PINE S/A"
                sponsorGovernmentId: "62144175000120"
                sponsorExternalCode: "98"
                sponsorAddress: "Alameda dos Nhambiquaras"
                sponsorAddressNumber: "11111111"
                sponsorAddressComplement: "APTO 15"
                sponsorNeighborhood: "Indianópolis"
                sponsorCity: "São Paulo"
                sponsorState: "SP"
                sponsorCountry: "Brasil"
                sponsorZipCode: "04090011"
                sellerName: "BANCO PINE S/A"
                sellerGovernmentId: "62144175000120"
                sellerAddress: "Alameda dos Nhambiquaras"
                sellerAddressNumber: "112334"
                sellerAddressComplement: "APTO 15"
                sellerNeighborhood: "Indianópolis"
                sellerCity: "São Paulo"
                sellerState: "SP"
                sellerCountry: "Brasil"
                sellerZipCode: "04090011"
                sellerBank: "Banco Santander (Brasil) S. A."
                sellerAgency: "123"
                sellerAccount: "45678"
                sellerAccountDigit: "1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc"
                    type: "GET"
                  items:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  receivement-account:
                    href: "http://localhost/v2/buyers/10/bank-accounts/44"
                    type: "GET"
                  payment-account:
                    href: "http://localhost/v2/buyers/10/bank-accounts/44"
                    type: "GET"
                  signature:
                    href: "http://localhost/v2/buyers/10/signatures/0WU5nCeqjc"
                    type: "GET"
                  custody-response:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/custodies-response"
                    type: "POST"
                  approved-items:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items?search=status:SOLD"
                    type: "GET"
                  unapproved-items:
                    href: "http://localhost/v2/buyers/10/purchases/0WU5nCeqjc/purchase-items?search=status:REFUSED"
                    type: "GET"
  /v2/buyers/{id}/report-configurations/{reportType}:
    get:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Search Current Configuration"
      description: ""
      operationId: "buyerconfigurationweb/FindOneBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelBuyerReportConfiguration"
              example:
                createdAt: "2022-08-10T17:45:54Z"
                createUserId: "UNKNOWN"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-10T17:45:54Z"
                lastUserId: "UNKNOWN"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerId"
                  order: "1"
                  description: "ID"
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerName"
                  order: "2"
                  description: "Nome"
                - createdAt: "2022-08-10T17:46:40Z"
                  createUserId: "UNKNOWN"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-10T17:46:40Z"
                  lastUserId: "UNKNOWN"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerGovernmentId"
                  order: "3"
                  description: "CNPJ"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "GET"
                  create:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "POST"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Update Current Configuration"
      description: ""
      operationId: "buyerconfigurationweb/UpdateBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportBuyerReportConfiguration"
            example:
              details:
              - columnId: "sellerGovernmentId"
                order: 1
              - columnId: "createdAt"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelBuyerReportConfiguration"
              example:
                createdAt: "2022-08-31T12:02:12Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-31T12:02:12Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-31T12:18:43.563306Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-31T12:18:43.563306Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerGovernmentId"
                  order: "1"
                  description: "CNPJ"
                - createdAt: "2022-08-31T12:18:43.564670Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-31T12:18:43.564670Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "createdAt"
                  order: "2"
                  description: "Data de Criação"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    post:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Create New Configuration"
      description: ""
      operationId: "buyerconfigurationweb/CreateBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reportBuyerReportConfiguration"
            example:
              details:
              - columnId: "sellerGovernmentId"
                order: 1
              - columnId: "sellerName"
                order: 2
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelBuyerReportConfiguration"
              example:
                createdAt: "2022-08-25T16:45:34.283072Z"
                createUserId: "anonymousUser"
                createUserIp: "127.0.0.1"
                updatedAt: "2022-08-25T16:45:34.326487Z"
                lastUserId: "anonymousUser"
                lastUserIp: "127.0.0.1"
                details:
                - createdAt: "2022-08-25T16:45:34.308509Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-25T16:45:34.308509Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerGovernmentId"
                  order: "1"
                  description: "CNPJ"
                - createdAt: "2022-08-25T16:45:34.316883Z"
                  createUserId: "anonymousUser"
                  createUserIp: "127.0.0.1"
                  updatedAt: "2022-08-25T16:45:34.316883Z"
                  lastUserId: "anonymousUser"
                  lastUserIp: "127.0.0.1"
                  columnId: "sellerName"
                  order: "2"
                  description: "Nome"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "GET"
                  update:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v2/buyers/10/report-configurations/BUYERSELLER"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
    delete:
      tags:
      - "Configuration For Dynamic Reports"
      summary: "Delete Current Configuration"
      description: ""
      operationId: "buyerconfigurationweb/DeleteBuyerConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        204:
          description: "No Content"
  /v2/buyers/{id}/reports:
    post:
      tags:
      - "Reports"
      summary: "Create Report"
      description: ""
      operationId: "buyerreportweb/StartBuyerReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                report:
                  $ref: "#/components/schemas/reportReport"
                search:
                  type: "string"
            example:
              startDate: "2020-05-05"
              endDate: "2020-06-06"
              type: "PURCHASE"
              fileType: "CSV"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-05-05"
                endDate: "2021-06-06"
                type: "RECEIVABLE"
                fileType: "CSV"
                createdAt: "202021-07-09T16:36:49.364+0000"
                createUserId: "email@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "email@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/reports/asd123fgh4"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/buyers/95/report-processes/U5VQsp4pBF"
                    type: "GET"
  /v2/buyers/{id}/reports/{reportId}:
    get:
      tags:
      - "Reports"
      summary: "Search Report"
      description: ""
      operationId: "buyerreportweb/FindOneBuyerReportContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelReport"
              example:
                startDate: "2021-06-01"
                endDate: "2021-06-30"
                type: "RECEIVABLE"
                fileType: "CSV"
                createdAt: "2021-07-09T16:36:49.364+0000"
                createUserId: "EMAIL@monkey.exchange"
                createUserIp: "127.0.0.1"
                updatedAt: "2021-07-09T16:36:49.364+0000"
                lastUserId: "EMAIL@monkey.exchange"
                lastUserIp: "127.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/95/reports/asd123fgh4"
                    type: "GET"
                  process:
                    href: "http://localhost/v2/buyers/95/report-processes/U5VQsp4pBF"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/95"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/buyers/95/reports/asd123fgh4/file"
                    type: "GET"
  /v2/buyers/{id}/reports/{reportId}/file:
    get:
      tags:
      - "Reports"
      summary: "Download Report"
      description: ""
      operationId: "BuyerReportDownload"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            multipart/form-data:
              schema:
                type: "string"
                format: "binary"
  /v2/buyers/{id}/report-templates/{reportType}:
    get:
      tags:
      - "Dynamic Report Template"
      summary: "Search Available Columns For Report"
      description: ""
      operationId: "buyertemplateweb/FindOneBuyerTemplateContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "reportType"
        in: "path"
        required: true
        schema:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelBuyerReportTemplate"
              example:
                details:
                - columnId: "paymentValue"
                  description: "Valor Total"
                - columnId: "tax"
                  description: "Taxa"
                - columnId: "operationId"
                  description: "ID da Compra"
                - columnId: "effectivePaymentDate"
                  description: "Data Pagamento Efetivo"
                - columnId: "sellerGovernmentId"
                  description: "CNPJ do Fornecedor"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/report-templates/PURCHASE"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
  /v2/buyers/{id}/report-processes/{processId}:
    get:
      tags:
      - "Report Generation Processes"
      summary: "Track Report Generation Process"
      description: ""
      operationId: "buyerprocessweb/FindOneBuyerProcessContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "processId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/reportMessage"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportEntityModelProcess"
              example:
                type: "RECEIVABLE"
                processed: "true"
                createdAt: "2021-06-23T18:25:43.511Z"
                createUserId: "email@monkey.com"
                createUserIp: "10.0.0.1"
                updatedAt: "2021-06-23T18:25:43.511Z"
                lastUserId: "email@monkey.com"
                lastUserIp: "10.0.0.1"
                _links:
                  self:
                    href: "http://localhost/v2/buyers/10/report-processes/ouL1BKaAmh"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v2/buyers/10"
                    type: "GET"
                  report:
                    href: "http://localhost/v2/buyers/95/reports/asd123fgh4"
                    type: "GET"
                  file:
                    href: "http://localhost/v2/buyers/95/reports/asd123fgh4/file"
                    type: "GET"
  /v1/buyers/{id}/webhooks/{webHookId}:
    get:
      tags:
      - "Configuração de Webhook"
      summary: "Detalhar"
      description: ""
      operationId: "webhookbuyerconfigurationweb/GETBuyerWebHookConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "webHookId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookConfiguration"
              example:
                createdAt: "2021-10-15T12:16:30.364+0000"
                createUserId: "monkey_contract@monkey.exchange"
                createUserIp: "0:0:0:0:0:0:0:1"
                updatedAt: "2021-10-15T12:16:30.364+0000"
                lastUserId: "monkey_contract@monkey.exchange"
                lastUserIp: "0:0:0:0:0:0:0:1"
                url: "https://monkey.exchange/webhook"
                token: "token1234monkey"
                tokenType: "Bearer"
                authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
                notifications:
                - "PURCHASE, BUYER_SIGNED, BUYER_NOT_SIGNED"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "GET"
                  update:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v1/buyers/10"
                    type: "GET"
    put:
      tags:
      - "Configuração de Webhook"
      summary: "Atualizar"
      description: ""
      operationId: "webhookbuyerconfigurationweb/PUTBuyerWebHookConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "webHookId"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notificationV2BuyerWebHookConfigurationResource"
            example:
              url: "https://monkey.exchange/webhook"
              token: "token1234monkey"
              tokenType: "Bearer"
              authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
              notifications:
              - "PURCHASE"
              - "BUYER_SIGNED"
              - "BUYER_NOT_SIGNED"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookConfiguration"
              example:
                createdAt: "2021-10-15T12:16:30.364+0000"
                createUserId: "monkey_contract@monkey.exchange"
                createUserIp: "0:0:0:0:0:0:0:1"
                updatedAt: "2021-10-15T12:16:30.364+0000"
                lastUserId: "monkey_contract@monkey.exchange"
                lastUserIp: "0:0:0:0:0:0:0:1"
                url: "https://monkey.exchange/webhook"
                token: "token1234monkey"
                tokenType: "Bearer"
                authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
                notifications:
                - "PURCHASE, BUYER_SIGNED, BUYER_NOT_SIGNED"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "GET"
                  update:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v1/buyers/10"
                    type: "GET"
    delete:
      tags:
      - "Configuração de Webhook"
      summary: "Deletar"
      description: ""
      operationId: "webhookbuyerconfigurationweb/DELETEBuyerWebHookConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "webHookId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        204:
          description: "No Content"
  /v1/buyers/{id}/webhooks-deliveries:
    get:
      tags:
      - "Webhook Deliveries"
      summary: "Listar"
      description: ""
      operationId: "buyerwebhookdeliveryweb/GETAllBuyerWebHookDeliveryContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "search"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/notificationV2Query"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/notificationV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2PagedModelEntityModelWebHookDelivery"
              example:
                _embedded:
                  webhook-deliveries:
                  - createdAt: "2022-05-05T20:33:14.828Z"
                    createUserId: "caio.merotti@monkey.exchange"
                    createUserIp: "0:0:0:0:0:0:0:1"
                    updatedAt: "2022-05-05T20:33:14.828Z"
                    lastUserId: "caio.merotti@monkey.exchange"
                    lastUserIp: "0:0:0:0:0:0:0:1"
                    webHookConfigurationId: "274343f0013a23c"
                    webHookId: "43482f466530335d"
                    eventType: "SellerDocumentUpdatedEvent"
                    url: "https://monkey.exchange/webhook"
                    requestHeaders:
                      Authorization: "Bearer ca038596-6498-4ec3-8990-63850a85aa64"
                      Access-Control-Allow-Origin: "*"
                      Content-Type: "application/json;charset=UTF-8"
                      Date: "Thu, 02 May 2019 14:38:15 GMT"
                      Accept: "text/plain, application/json, application/*+json, */*"
                    requestPayload:
                      sponsorId: "32212283"
                      sponsorName: "Teste Sponsor"
                      sponsorGovernmentId: "55139118173"
                      paymentDate: "2022-04-27T03:00:00.000+00:00"
                      paymentValue: "10"
                      invoiceNumber: "0322001"
                      installment: "1"
                      totalInstallment: "1"
                    responseHeaders:
                      Authorization: "Bearer ca038596-6498-4ec3-8990-63850a85aa64"
                      Access-Control-Allow-Origin: "*"
                      Content-Type: "application/json;charset=UTF-8"
                      Date: "Thu, 02 May 2019 14:38:15 GMT"
                      Accept: "text/plain, application/json, application/*+json, */*"
                    responseBody: "[msg:Hello World.]"
                    statusCode: "200"
                    reasonPhrase: "OK"
                    attempts: "1"
                    delivered: "true"
                    program: "monkey"
                    _links:
                      self:
                        href: "http://localhost/v1/buyers/10/webhooks-deliveries/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "GET"
                      buyer:
                        href: "http://localhost/v1/buyers/10"
                        type: "GET"
                      webhook-redeliver:
                        href: "http://localhost/v1/buyers/10/webhooks-deliveries/3486f5ba-28d2-4f08-a2fc-055b290e88c3/redeliver"
                        type: "POST"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks-deliveries?page=0&size=10"
                page:
                  size: 10
                  totalElements: 2
                  totalPages: 1
                  number: 0
    put:
      tags:
      - "Webhook Deliveries"
      summary: "Redelivery Massivo"
      description: ""
      operationId: "buyerwebhookdeliveryweb/PUTBuyerWebHookDelivery.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notificationV2WebHookRedeliveriesDTO"
            example:
              items:
              - identification: "3x432159945x3"
                eventType: "PurchaseIntegratedEvent"
                date: "2022-09-27"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        202:
          description: "Accepted"
  /v1/buyers/{id}/webhooks:
    get:
      tags:
      - "Configuração de Webhook"
      summary: "Listar"
      description: ""
      operationId: "webhookbuyerconfigurationweb/GETAllBuyerWebHookConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/notificationV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2PagedModelEntityModelWebHookConfiguration"
              example:
                _embedded:
                  webhooks:
                  - createdAt: "2021-10-15T12:16:30.364+0000"
                    createUserId: "monkey_contract@monkey.exchange"
                    createUserIp: "0:0:0:0:0:0:0:1"
                    updatedAt: "2021-10-15T12:16:30.364+0000"
                    lastUserId: "monkey_contract@monkey.exchange"
                    lastUserIp: "0:0:0:0:0:0:0:1"
                    url: "https://monkey.exchange/webhook"
                    token: "token1234monkey"
                    tokenType: "Bearer"
                    authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
                    notifications:
                    - "PURCHASE, BUYER_SIGNED, BUYER_NOT_SIGNED"
                    _links:
                      self:
                        href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "GET"
                      update:
                        href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "PUT"
                      delete:
                        href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "DELETE"
                      buyer:
                        href: "http://localhost/v1/buyers/10"
                        type: "GET"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks?page=0&size=10"
                page:
                  size: 10
                  totalElements: 1
                  totalPages: 1
                  number: 0
    post:
      tags:
      - "Configuração de Webhook"
      summary: "Cadastrar"
      description: ""
      operationId: "webhookbuyerconfigurationweb/CREATEBuyerWebHookConfigurationContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notificationV2BuyerWebHookConfigurationResource"
            example:
              url: "https://monkey.exchange/webhook"
              token: "token1234monkey"
              tokenType: "Bearer"
              authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
              notifications:
              - "PURCHASE"
              - "BUYER_SIGNED"
              - "BUYER_NOT_SIGNED"
        required: true
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookConfiguration"
              example:
                createdAt: "2021-10-15T12:16:30.364+0000"
                createUserId: "monkey_contract@monkey.exchange"
                createUserIp: "0:0:0:0:0:0:0:1"
                updatedAt: "2021-10-15T12:16:30.364+0000"
                lastUserId: "monkey_contract@monkey.exchange"
                lastUserIp: "0:0:0:0:0:0:0:1"
                url: "https://monkey.exchange/webhook"
                token: "token1234monkey"
                tokenType: "Bearer"
                authorizationHeader: "1a9f37f8-6130-4ee5-a068-7ce8ca62b9e9"
                notifications:
                - "PURCHASE, BUYER_SIGNED, BUYER_NOT_SIGNED"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "GET"
                  update:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "PUT"
                  delete:
                    href: "http://localhost/v1/buyers/10/webhooks/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "DELETE"
                  buyer:
                    href: "http://localhost/v1/buyers/10"
                    type: "GET"
  /v1/buyers/{id}/webhooks-deliveries/{deliveryId}/redeliver:
    post:
      tags:
      - "Webhook Deliveries"
      summary: "Redelivery"
      description: ""
      operationId: "buyerwebhookdeliveryweb/POSTBuyerWebHookDeliveryRedeliver.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "deliveryId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        202:
          description: "Accepted"
  /v1/buyers/{id}/webhooks-deliveries/{deliveryId}:
    get:
      tags:
      - "Webhook Deliveries"
      summary: "Detalhar"
      description: ""
      operationId: "buyerwebhookdeliveryweb/GETBuyerWebHookDeliveryContract.json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "deliveryId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookDelivery"
              example:
                createdAt: "2022-05-05T20:33:14.828Z"
                createUserId: "caio.merotti@monkey.exchange"
                createUserIp: "0:0:0:0:0:0:0:1"
                updatedAt: "2022-05-05T20:33:14.828Z"
                lastUserId: "caio.merotti@monkey.exchange"
                lastUserIp: "0:0:0:0:0:0:0:1"
                webHookConfigurationId: "274343f0013a23c"
                webHookId: "43482f466530335d"
                eventType: "SellerDocumentUpdatedEvent"
                url: "https://monkey.exchange/webhook"
                requestHeaders:
                  Authorization: "Bearer ca038596-6498-4ec3-8990-63850a85aa64"
                  Access-Control-Allow-Origin: "*"
                  Content-Type: "application/json;charset=UTF-8"
                  Date: "Thu, 02 May 2019 14:38:15 GMT"
                  Accept: "text/plain, application/json, application/*+json, */*"
                requestPayload:
                  sponsorId: "32212283"
                  sponsorName: "Teste Sponsor"
                  sponsorGovernmentId: "55139118173"
                  paymentDate: "2022-04-27T03:00:00.000+00:00"
                  paymentValue: "10"
                  invoiceNumber: "0322001"
                  installment: "1"
                  totalInstallment: "1"
                responseHeaders:
                  Authorization: "Bearer ca038596-6498-4ec3-8990-63850a85aa64"
                  Access-Control-Allow-Origin: "*"
                  Content-Type: "application/json;charset=UTF-8"
                  Date: "Thu, 02 May 2019 14:38:15 GMT"
                  Accept: "text/plain, application/json, application/*+json, */*"
                responseBody: "[msg:Hello World.]"
                statusCode: "200"
                reasonPhrase: "OK"
                attempts: "1"
                delivered: "true"
                program: "monkey"
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/webhooks-deliveries/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "GET"
                  buyer:
                    href: "http://localhost/v1/buyers/10"
                    type: "GET"
                  webhook-redeliver:
                    href: "http://localhost/v1/buyers/10/webhooks-deliveries/3486f5ba-28d2-4f08-a2fc-055b290e88c3/redeliver"
                    type: "POST"
  /v1/buyers/{companyId}/notifications:
    get:
      tags:
      - "Notificações"
      summary: "Listar"
      description: ""
      operationId: "buyernotificationweb/GETAllBuyerNotifications.json"
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "predicate"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/notificationV2Query"
      - name: "pageable"
        in: "query"
        required: true
        schema:
          $ref: "#/components/schemas/notificationV2Pageable"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2PagedModelEntityModelNotification"
              example:
                _embedded:
                  notifications:
                  - createdAt: "2021-04-12T15:42:26.879Z"
                    createUserId: "monkeyexchangefiat@gmail.com"
                    createUserIp: "UNKNOWN"
                    updatedAt: "2021-07-13T19:25:10.976Z"
                    lastUserId: "monkeyexchangefiat@gmail.com"
                    lastUserIp: "0:0:0:0:0:0:0:1"
                    type: "SponsorNotSignedEvent"
                    read: "false"
                    notification-items:
                    - "Compra 123/00117 foi recusada pelo sacado."
                    _links:
                      self:
                        href: "http://localhost/v1/buyers/10/notifications/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "GET"
                      read:
                        href: "http://localhost/v1/buyers/10/notifications/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                        type: "DELETE"
                page:
                  size: 10
                  totalElements: 3
                  totalPages: 1
                  number: 0
    delete:
      tags:
      - "Notificações"
      summary: "Marcar todas como Lida"
      description: ""
      operationId: "buyernotificationweb/DELETEAllBuyerNotifications.json"
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        202:
          description: "Accepted"
  /v1/buyers/{companyId}/notifications/{id}:
    get:
      tags:
      - "Notificações"
      summary: "Detalhar"
      description: ""
      operationId: "buyernotificationweb/GETBuyerNotificationById.json"
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationV2EntityModelNotification"
              example:
                createdAt: "2021-04-12T15:42:26.879Z"
                createUserId: "monkeyexchangefiat@gmail.com"
                createUserIp: "UNKNOWN"
                updatedAt: "2021-07-13T19:25:10.976Z"
                lastUserId: "monkeyexchangefiat@gmail.com"
                lastUserIp: "0:0:0:0:0:0:0:1"
                type: "WebHookExhaustedFail"
                read: "false"
                notification-items:
                - "Recebemos erros para todas as tentativas de entrega do webhook\
                  \ de id: 5fec7444c02dc3217c758ae8."
                _links:
                  self:
                    href: "http://localhost/v1/buyers/10/notifications/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "GET"
                  read:
                    href: "http://localhost/v1/buyers/10/notifications/3486f5ba-28d2-4f08-a2fc-055b290e88c3"
                    type: "DELETE"
    delete:
      tags:
      - "Notificações"
      summary: "Marcar como Lida"
      description: ""
      operationId: "buyernotificationweb/DELETEBuyerNotificationById.json"
      parameters:
      - name: "companyId"
        in: "path"
        required: true
        schema:
          type: "integer"
          format: "int32"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        400:
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        500:
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        415:
          description: "Unsupported Media Type"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        404:
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        401:
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        403:
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        412:
          description: "Precondition Failed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        409:
          description: "Conflict"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        405:
          description: "Method Not Allowed"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/notificationV2Message"
        204:
          description: "No Content"
components:
  schemas:
    signMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    signBuyerSigner:
      required:
      - "email"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signBuyerSigners:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        signers:
          maxItems: 2147483647
          minItems: 1
          type: "array"
          description: "Signers"
          items:
            $ref: "#/components/schemas/signBuyerSigner"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
          description: "Type"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
          description: "Name"
        templated:
          type: "boolean"
    signEntityModelBuyerSigners:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        signers:
          maxItems: 2147483647
          minItems: 1
          type: "array"
          description: "Signers"
          items:
            $ref: "#/components/schemas/signBuyerSigner"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signBuyerAutoApprove:
      required:
      - "autoApprove"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        autoApprove:
          type: "boolean"
          description: "Auto Approve"
        autoApproveUser:
          type: "string"
          description: "Auto Approve Username"
          readOnly: true
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signBuyerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signSellerSignature:
      type: "object"
      properties:
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Government ID"
        status:
          type: "string"
          description: "Status"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
    signSignature:
      required:
      - "amount"
      - "buyerGovernmentId"
      - "buyerName"
      - "reportCode"
      - "sellerGovernmentId"
      - "sellerName"
      - "sponsorGovernmentId"
      - "sponsorName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        sponsorSignature:
          type: "string"
          description: "Sponsor Signature"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        sellerSignature:
          type: "string"
          description: "Supplier Signature"
        buyerName:
          type: "string"
          description: "Buyer Name."
        buyerGovernmentId:
          type: "string"
          description: "Buyer Government ID"
        buyerSignature:
          type: "string"
          description: "Buyer Signature"
        reportCode:
          type: "string"
          description: "Report Code"
        amount:
          type: "number"
          description: "Quantity."
        sponsorSignatureStatus:
          type: "string"
          description: "Sponsor Signature Status"
        sellerSignatureStatus:
          type: "string"
          description: "Supplier Signature Status"
        buyerSignatureStatus:
          type: "string"
          description: "Buyer Signature Status"
        numberOfSellerSignatures:
          type: "integer"
          description: "Number Of Suppliers Signatures"
          format: "int32"
        sellerSignatures:
          type: "array"
          description: "Supplier Signatures"
          items:
            $ref: "#/components/schemas/signSellerSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        buyerSignatures:
          type: "array"
          description: "Buyer Signatures"
          items:
            $ref: "#/components/schemas/signBuyerSignature"
        assignmentDocumentHash:
          type: "string"
          description: "Assignment Document Hash"
        notificationDocumentHash:
          type: "string"
          description: "Notification Document Hash"
    signPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    signPagedModelSignature:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            signatures:
              type: "array"
              items:
                $ref: "#/components/schemas/signSignature"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/signLink"
        page:
          $ref: "#/components/schemas/signPageMetadata"
    dashboardMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    dashboardEntityModelBuyerDashboardResource:
      type: "object"
      properties:
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/dashboardLink"
    dashboardBuyerOperationEvolutionDashboard:
      type: "object"
      properties:
        monthAndYear:
          type: "string"
          description: "Month And Year"
        totalAmount:
          type: "number"
          description: "Total Quantity"
        earnedAmount:
          type: "number"
          description: "Earned Amount"
    dashboardCollectionModelBuyerOperationEvolutionDashboard:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            purchase-evolutions:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardBuyerOperationEvolutionDashboard"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardEntityModelBuyerProgramSummaryDashboard:
      type: "object"
      properties:
        disputedAmount:
          type: "number"
          description: "Disputed Quantity"
        disputedOperationItems:
          type: "integer"
          description: "Disputed Operation Items"
          format: "int64"
        earnedAmount:
          type: "number"
          description: "Earned Amount"
        earnedOperationItems:
          type: "integer"
          description: "Earned Operation Items"
          format: "int64"
        operations:
          type: "integer"
          description: "Operations"
          format: "int64"
        averageTax:
          type: "number"
          description: "Average Tax"
          format: "float"
        programAverageTax:
          type: "number"
          description: "Program Average Tax"
          format: "float"
        averageDuration:
          type: "number"
          description: "Average Duration"
          format: "float"
        programAverageDuration:
          type: "number"
          description: "Program Average Duration"
          format: "float"
        sellers:
          type: "integer"
          description: "Suppliers"
          format: "int64"
        approvedSellers:
          type: "integer"
          description: "Approved Suppliers"
          format: "int64"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardEntityModelBuyerDailyOperationSummaryDashboard:
      type: "object"
      properties:
        amount:
          type: "number"
          description: "Quantity"
        items:
          type: "integer"
          description: "Items"
          format: "int64"
        amountWon:
          type: "number"
          description: "Won Amount"
        itemsWon:
          type: "integer"
          description: "Won Items"
          format: "int64"
        amountApproved:
          type: "number"
          description: "Approved Quantity"
        itemsApproved:
          type: "integer"
          description: "Approved Items"
          format: "int64"
        operations:
          type: "integer"
          description: "Operations"
          format: "int64"
        averageTax:
          type: "number"
          description: "Average Tax"
          format: "float"
        programAverageTax:
          type: "number"
          description: "Program Average Tax"
          format: "float"
        averageDuration:
          type: "number"
          description: "Average Duration"
          format: "float"
        sellersWithPurchases:
          type: "integer"
          description: "Suppliers With Purchases"
          format: "int64"
        todayTotalPayables:
          type: "integer"
          description: "Today's Total Payables"
          format: "int64"
        todayPayablesAmount:
          type: "number"
          description: "Today's Payables Amount"
        todayTotalOffers:
          type: "integer"
          description: "Today's Total Offers"
          format: "int64"
        todayOffersAmount:
          type: "number"
          description: "Today's Offers Quantity"
        todayTotalPurchaseWaitingCustody:
          type: "integer"
          description: "Today's Total Purchase Waiting Custody"
          format: "int64"
        todayPurchaseWaitingCustodyAmount:
          type: "number"
          description: "Today's Purchase Waiting Custody Quantity"
        todayTotalPurchaseRefused:
          type: "integer"
          description: "Today's Total Purchase Refused"
          format: "int64"
        todayTotalPurchaseRefusedAmount:
          type: "number"
          description: "Today's Total Purchase Refused Quantity"
        todayPurchaseWaitingSponsorSignature:
          type: "integer"
          description: "Purchases Waiting For Sponsor Signature"
          format: "int64"
        todayPurchaseWaitingSellerSignature:
          type: "integer"
          description: "Purchases Waiting For Supplier Signature"
          format: "int64"
        todayPurchaseWaitingBuyerSignature:
          type: "integer"
          description: "Purchases Waiting For Buyer Signature"
          format: "int64"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardBuyerOperationCompetitivenessIndexDashboard:
      type: "object"
      properties:
        rangeDays:
          type: "integer"
          description: "Range Of Days"
          format: "int32"
        totalPurchaseAmount:
          type: "number"
          description: "Total Purchase Amount"
        totalAmountDisputed:
          type: "number"
          description: "Total Disputed Quantity"
    dashboardCollectionModelBuyerOperationCompetitivenessIndexDashboard:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            competitiveness-indices:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardBuyerOperationCompetitivenessIndexDashboard"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    dashboardEntityModelPayableProcess:
      type: "object"
      properties:
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        processed:
          type: "integer"
          description: "Processed"
          format: "int64"
        unprocessed:
          type: "integer"
          description: "Unprocessed"
          format: "int64"
        processedAmount:
          type: "number"
          description: "Processed Quantity"
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    dashboardPagedModelEntityModelPayableProcess:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            processes:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardEntityModelPayableProcess"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
        page:
          $ref: "#/components/schemas/dashboardPageMetadata"
    dashboardEntityModelPayableError:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "Identifier"
          format: "int32"
          writeOnly: true
        detail:
          type: "string"
          description: "Detail"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardPagedModelEntityModelPayableError:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            unprocessed-items:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardEntityModelPayableError"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
        page:
          $ref: "#/components/schemas/dashboardPageMetadata"
    dashboardEntityModelPayableProcessed:
      type: "object"
      properties:
        uuid:
          type: "string"
          description: "Unique Identifier"
        externalId:
          type: "string"
          description: "External Identifier"
        lineNumber:
          type: "integer"
          description: "Line Number"
          format: "int32"
        paymentDate:
          type: "string"
          description: "Payment Date"
          format: "date-time"
        paymentValue:
          type: "number"
          description: "Payment Amount"
        supplierGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        supplierName:
          type: "string"
          description: "Supplier Name"
        invoiceNumber:
          type: "string"
          description: "Invoice Number"
        invoiceDate:
          type: "string"
          description: "Invoice Date"
          format: "date-time"
        invoiceKey:
          type: "string"
          description: "Invoice Key"
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
    dashboardPagedModelEntityModelPayableProcessed:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            processed-items:
              type: "array"
              items:
                $ref: "#/components/schemas/dashboardEntityModelPayableProcessed"
        _links:
          $ref: "#/components/schemas/dashboardLinks"
        page:
          $ref: "#/components/schemas/dashboardPageMetadata"
    dashboardLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    rdStationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    rdStationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/rdStationLink"
    rdStationSubscription:
      required:
      - "information"
      - "payable"
      - "profile"
      - "transactional"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        account:
          type: "boolean"
          description: "Account"
        payable:
          type: "boolean"
          description: "Receive Email Notifications of Invoice Availability"
        profile:
          type: "boolean"
        transactional:
          type: "boolean"
          description: "Receive Transactional Email Notifications"
        information:
          type: "boolean"
          description: "Receive General Information Email Notifications"
        _links:
          $ref: "#/components/schemas/rdStationLinks"
    rdStationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    buyerMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    buyerBuyerSponsor:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        companyName:
          type: "string"
          description: "Company Name"
        fantasyName:
          type: "string"
          description: "Trade Name"
        foundationDate:
          type: "string"
          description: "Foundation Date"
          format: "date-time"
        activityCode:
          type: "string"
          description: "Activity Code"
        address:
          type: "string"
          description: "Address"
        addressNumber:
          type: "string"
          description: "Address Number"
        addressComplement:
          type: "string"
          description: "Address Complement"
        neighborhood:
          type: "string"
          description: "Neighborhood"
        city:
          type: "string"
          description: "City"
        state:
          type: "string"
          description: "State"
        country:
          type: "string"
          description: "Country"
        zipCode:
          type: "string"
          description: "Postal Code"
        pictureUrl:
          type: "string"
          description: "Image URL"
        status:
          pattern: "APPROVED|UNAPPROVED|INACTIVE"
          type: "string"
          description: "Status"
        legalResponsibles:
          type: "array"
          description: "Legal Representatives"
          items:
            $ref: "#/components/schemas/buyerSponsorLegalResponsible"
        buyerId:
          type: "integer"
          description: "Buyer ID"
          format: "int32"
        externalCode:
          type: "string"
          description: "External Code"
        sponsorCreatedAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        sponsorCreateUserId:
          type: "string"
          description: "Record Creator User"
        sponsorUpdatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        sponsorLastUserId:
          type: "string"
          description: "Last Update IP Used"
    buyerSponsorLegalResponsible:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        type:
          type: "string"
          description: "Type"
        status:
          type: "string"
          description: "Status"
        phone:
          type: "string"
          description: "Phone"
        companyPhone:
          type: "string"
          description: "Company Phone"
        email:
          type: "string"
          description: "Email"
        birthdayDate:
          type: "string"
          description: "Date of Birth"
          format: "date-time"
        sign:
          type: "boolean"
          description: "Signed/Not Signed"
    buyerEntityModelBuyerSponsor:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        companyName:
          type: "string"
          description: "Company Name"
        fantasyName:
          type: "string"
          description: "Trade Name"
        foundationDate:
          type: "string"
          description: "Foundation Date"
          format: "date-time"
        activityCode:
          type: "string"
          description: "Activity Code"
        address:
          type: "string"
          description: "Address"
        addressNumber:
          type: "string"
          description: "Address Number"
        addressComplement:
          type: "string"
          description: "Address Complement"
        neighborhood:
          type: "string"
          description: "Neighborhood"
        city:
          type: "string"
          description: "City"
        state:
          type: "string"
          description: "State"
        country:
          type: "string"
          description: "Country"
        zipCode:
          type: "string"
          description: "Postal Code"
        pictureUrl:
          type: "string"
          description: "Image URL"
        status:
          pattern: "APPROVED|UNAPPROVED|INACTIVE"
          type: "string"
          description: "Status"
        legalResponsibles:
          type: "array"
          description: "Legal Representatives"
          items:
            $ref: "#/components/schemas/buyerSponsorLegalResponsible"
        buyerId:
          type: "integer"
          description: "Buyer ID"
          format: "int32"
        externalCode:
          type: "string"
          description: "External Code"
        sponsorCreatedAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        sponsorCreateUserId:
          type: "string"
          description: "Record Creator User"
        sponsorUpdatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        sponsorLastUserId:
          type: "string"
          description: "Last Update IP Used"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/buyerLink"
    buyerBuyerLimitResource:
      required:
      - "limit"
      type: "object"
      properties:
        limit:
          type: "number"
          description: "Limit"
        active:
          type: "boolean"
          description: "Active"
        limitReplenishment:
          type: "boolean"
          description: "Limit Replenishment"
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
    buyerEntityModelBuyerLimitResource:
      required:
      - "limit"
      type: "object"
      properties:
        limit:
          type: "number"
          description: "Limit"
        active:
          type: "boolean"
          description: "Active"
        limitReplenishment:
          type: "boolean"
          description: "Limit Replenishment"
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerBuyerSeller:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        companyName:
          type: "string"
          description: "Company Name"
        fantasyName:
          type: "string"
          description: "Trade Name"
        userId:
          type: "integer"
          description: "ID"
          format: "int32"
        foundationDate:
          type: "string"
          description: "Foundation Date"
          format: "date-time"
        mainPhone:
          type: "string"
          description: "Main Phone"
        phone:
          type: "string"
          description: "Phone"
        email:
          type: "string"
          description: "Email"
        alternativePhone:
          type: "string"
          description: "Alternative Phone"
        address:
          type: "string"
          description: "Address"
        addressNumber:
          type: "string"
          description: "Address Number"
        addressComplement:
          type: "string"
          description: "Address Complement"
        neighborhood:
          type: "string"
          description: "Neighborhood"
        city:
          type: "string"
          description: "City"
        state:
          type: "string"
          description: "State"
        country:
          type: "string"
          description: "Country"
        zipCode:
          type: "string"
          description: "Postal Code"
        activityCode:
          type: "string"
          description: "Activity Code"
        legalNature:
          type: "string"
          description: "Legal Nature"
        role:
          type: "string"
          description: "Role"
        pictureUrl:
          type: "string"
          description: "Image URL"
        status:
          pattern: "APPROVED|UNAPPROVED|WAITING_APPROVAL|REANALYSIS"
          type: "string"
          description: "Status"
        digitalCertificate:
          type: "string"
          description: "Digital Certificate"
          deprecated: true
          enum:
          - "WAITING"
          - "VALID"
          - "EXPIRED"
        biometricVerificationStatus:
          type: "string"
          deprecated: true
          enum:
          - "WAITING_VALIDATION"
          - "MATCHED"
          - "MISMATCHED"
        bankAccountReviewedBySponsor:
          type: "boolean"
          deprecated: true
        legalResponsibles:
          type: "array"
          description: "Legal Representatives"
          items:
            $ref: "#/components/schemas/buyerSellerLegalResponsible"
        risk:
          type: "string"
          description: "Risk"
        buyerAdhesionTermSignatureStatus:
          type: "string"
          description: "Buyer Adhesion Term Signature Status"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
        programAdhesionTermStatus:
          type: "string"
          description: "Status"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
        detail:
          type: "string"
          description: "Message Detail"
        sellerCreatedAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        sellerCreateUserId:
          type: "string"
          description: "Record Creator User"
        sellerUpdatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        sellerLastUserId:
          type: "string"
          description: "Last Update IP Used"
    buyerSellerLegalResponsible:
      type: "object"
      properties:
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        type:
          type: "string"
          description: "Type"
        birthdayDate:
          type: "string"
          description: "Date of Birth"
          format: "date-time"
        status:
          type: "string"
          description: "Status"
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        documentType:
          type: "string"
          description: "Document Type"
        documentNumber:
          type: "string"
          description: "Document Number"
        phone:
          type: "string"
          description: "Phone"
        email:
          type: "string"
          description: "Email"
        sign:
          type: "boolean"
          description: "Signed/Not Signed"
        financialAuthority:
          type: "boolean"
          description: "Financial Authority"
        financialAuthorityValue:
          type: "number"
          description: "Financial Authority Value"
    buyerEntityModelBuyerSeller:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "integer"
          description: "ID"
          format: "int32"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "Tax ID"
        companyName:
          type: "string"
          description: "Company Name"
        fantasyName:
          type: "string"
          description: "Trade Name"
        userId:
          type: "integer"
          description: "ID"
          format: "int32"
        foundationDate:
          type: "string"
          description: "Foundation Date"
          format: "date-time"
        mainPhone:
          type: "string"
          description: "Main Phone"
        phone:
          type: "string"
          description: "Phone"
        email:
          type: "string"
          description: "Email"
        alternativePhone:
          type: "string"
          description: "Alternative Phone"
        address:
          type: "string"
          description: "Address"
        addressNumber:
          type: "string"
          description: "Address Number"
        addressComplement:
          type: "string"
          description: "Address Complement"
        neighborhood:
          type: "string"
          description: "Neighborhood"
        city:
          type: "string"
          description: "City"
        state:
          type: "string"
          description: "State"
        country:
          type: "string"
          description: "Country"
        zipCode:
          type: "string"
          description: "Postal Code"
        activityCode:
          type: "string"
          description: "Activity Code"
        legalNature:
          type: "string"
          description: "Legal Nature"
        role:
          type: "string"
          description: "Role"
        pictureUrl:
          type: "string"
          description: "Image URL"
        status:
          pattern: "APPROVED|UNAPPROVED|WAITING_APPROVAL|REANALYSIS"
          type: "string"
          description: "Status"
        digitalCertificate:
          type: "string"
          description: "Digital Certificate"
          deprecated: true
          enum:
          - "WAITING"
          - "VALID"
          - "EXPIRED"
        biometricVerificationStatus:
          type: "string"
          deprecated: true
          enum:
          - "WAITING_VALIDATION"
          - "MATCHED"
          - "MISMATCHED"
        bankAccountReviewedBySponsor:
          type: "boolean"
          deprecated: true
        legalResponsibles:
          type: "array"
          description: "Legal Representatives"
          items:
            $ref: "#/components/schemas/buyerSellerLegalResponsible"
        risk:
          type: "string"
          description: "Risk"
        buyerAdhesionTermSignatureStatus:
          type: "string"
          description: "Buyer Adhesion Term Signature Status"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
        programAdhesionTermStatus:
          type: "string"
          description: "Status"
          enum:
          - "NOT_REQUIRED"
          - "WAITING"
          - "SIGNED"
          - "DECLINED"
        detail:
          type: "string"
          description: "Message Detail"
        sellerCreatedAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        sellerCreateUserId:
          type: "string"
          description: "Record Creator User"
        sellerUpdatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        sellerLastUserId:
          type: "string"
          description: "Last Update IP Used"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerBuyerConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        closedMarketHour:
          type: "integer"
          description: "Market Closing Hour"
          format: "int32"
    buyerEntityModelBuyerConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        closedMarketHour:
          type: "integer"
          description: "Market Closing Hour"
          format: "int32"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      - "type"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        main:
          type: "boolean"
          description: "Primary"
        type:
          pattern: "RECEIVEMENT|PAYMENT"
          type: "string"
          description: "Type"
    buyerSpecificationBuyerSponsor:
      type: "object"
    buyerBuyerSellerRequest:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "Message Detail"
    buyerEntityModelBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      - "type"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        main:
          type: "boolean"
          description: "Primary"
        type:
          pattern: "RECEIVEMENT|PAYMENT"
          type: "string"
          description: "Type"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    buyerPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    buyerPagedModelEntityModelBuyerSponsor:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            sponsors:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelBuyerSponsor"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerSpecificationBuyerSeller:
      type: "object"
    buyerPagedModelEntityModelBuyerSeller:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            sellers:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelBuyerSeller"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerSpecificationSupplier:
      type: "object"
    buyerEntityModelSupplier:
      required:
      - "allowed"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Tax ID"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        allowed:
          type: "boolean"
          description: "Allowed"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerPagedModelEntityModelSupplier:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            sponsors:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelSupplier"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerEntityModelSellerBankAccount:
      required:
      - "account"
      - "accountDigit"
      - "agency"
      - "alias"
      - "bank"
      - "bankName"
      - "sellerGovernmentId"
      - "sellerName"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "string"
          description: "ID"
        alias:
          type: "string"
          description: "Alias"
        bank:
          type: "string"
          description: "Bank Code"
        bankName:
          type: "string"
          description: "Bank Name"
        agency:
          type: "string"
          description: "Bank Agency"
        account:
          type: "string"
          description: "Bank Account"
        accountDigit:
          type: "string"
          description: "Account Digit"
        sellerGovernmentId:
          type: "string"
          description: "Supplier Tax ID"
        sellerName:
          type: "string"
          description: "Supplier Name"
        status:
          type: "string"
          description: "Status"
          enum:
          - "CREATED_BY_SELLER"
          - "CREATED_BY_SPONSOR"
          - "INACTIVE"
          - "APPROVAL"
          - "APPROVED_BY_SPONSOR"
          - "UNAPPROVED_BY_SPONSOR"
          - "WAITING_SPONSOR_APPROVAL"
        main:
          type: "boolean"
          description: "Primary"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerPagedModelEntityModelSellerBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelSellerBankAccount"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerSpecificationSellerAuditingHistory:
      type: "object"
    buyerEntityModelSellerAuditingHistory:
      required:
      - "step"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        step:
          type: "string"
          description: "Step"
        detail:
          type: "string"
          description: "Message Detail"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerPagedModelEntityModelSellerAuditingHistory:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            audits:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelSellerAuditingHistory"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerSpecificationScheduledPurchase:
      type: "object"
    buyerEntityModelScheduledPurchase:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        id:
          type: "string"
          description: "ID"
        sponsorName:
          type: "string"
          description: "Sponsor Name"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Tax ID"
        sellerName:
          type: "string"
          description: "Supplier Name"
        sellerGovernmentId:
          type: "string"
          description: "Supplier Tax ID"
        paymentDate:
          type: "string"
          description: "Payment Date"
          format: "date"
        paymentValue:
          type: "number"
          description: "Payment Value"
        status:
          type: "string"
          description: "Status"
          enum:
          - "WAITING"
          - "REFUSED"
          - "APPROVED"
          - "CANCELLED"
        days:
          type: "integer"
          description: "Days"
          format: "int32"
        tax:
          type: "number"
          description: "Tax"
          format: "float"
        waiting:
          type: "boolean"
          description: "Waiting"
        _links:
          $ref: "#/components/schemas/buyerLinks"
    buyerPagedModelEntityModelScheduledPurchase:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            scheduled-purchases:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelScheduledPurchase"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerPagedModelEntityModelBankAccount:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            bank-accounts:
              type: "array"
              items:
                $ref: "#/components/schemas/buyerEntityModelBankAccount"
        _links:
          $ref: "#/components/schemas/buyerLinks"
        page:
          $ref: "#/components/schemas/buyerPageMetadata"
    buyerLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    externalSignMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    externalSignBuyerAdhesionTermConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        active:
          type: "boolean"
          description: "Active/Inactive"
    externalSignEntityModelBuyerAdhesionTermConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        active:
          type: "boolean"
          description: "Active/Inactive"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/externalSignLink"
    externalSignBuyerAdhesionTermSigner:
      required:
      - "email"
      - "governmentId"
      - "name"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        email:
          type: "string"
          description: "Email"
        name:
          type: "string"
          description: "Name"
        governmentId:
          type: "string"
          description: "GovernmentId"
    externalSignBuyerAdhesionTermSigners:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        signers:
          maxItems: 2147483647
          minItems: 1
          type: "array"
          description: "Signers"
          items:
            $ref: "#/components/schemas/externalSignBuyerAdhesionTermSigner"
    externalSignEntityModelBuyerAdhesionTermSigners:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        signers:
          maxItems: 2147483647
          minItems: 1
          type: "array"
          description: "Signers"
          items:
            $ref: "#/components/schemas/externalSignBuyerAdhesionTermSigner"
        _links:
          $ref: "#/components/schemas/externalSignLinks"
    externalSignLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    auctionMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    auctionLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
          description: "Type"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
          description: "Name"
        templated:
          type: "boolean"
    auctionTaxResource:
      required:
      - "validity"
      type: "object"
      properties:
        days:
          type: "integer"
          description: "Days"
          format: "int32"
        value:
          maximum: 10
          type: "number"
          description: "Value"
          format: "float"
        risk:
          pattern: "Grupo 1|Grupo 2|Grupo 3"
          type: "string"
          description: "Risk Group"
        validity:
          type: "string"
          description: "Validity"
          format: "date"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
    auctionTaxesResource:
      required:
      - "taxes"
      type: "object"
      properties:
        taxes:
          maxItems: 1200
          minItems: 1
          type: "array"
          description: "Taxes"
          items:
            $ref: "#/components/schemas/auctionTaxResource"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
    auctionTaxFile:
      required:
      - "status"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        status:
          type: "string"
          description: "Status"
        detail:
          type: "string"
          description: "Detail"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionTaxFileDetail"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
    auctionTaxFileDetail:
      required:
      - "sponsorGovernmentId"
      - "taxFileId"
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        taxFileId:
          type: "string"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        quantityTax:
          type: "integer"
          format: "int64"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
    auctionSpecificationTax:
      type: "object"
    auctionPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    auctionPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    auctionPagedModelTax:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            taxes:
              type: "array"
              items:
                $ref: "#/components/schemas/auctionTax"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
        page:
          $ref: "#/components/schemas/auctionPageMetadata"
    auctionTax:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        createUserId:
          type: "string"
          description: "Record Creator User"
        createUserIp:
          type: "string"
          description: "Creation IP Used"
        updatedAt:
          type: "string"
          description: "Last Update Date"
          format: "date-time"
        lastUserId:
          type: "string"
          description: "Last Update User"
        lastUserIp:
          type: "string"
          description: "Last Update IP Used"
        sponsorGovernmentId:
          type: "string"
          description: "Sponsor Government ID"
        days:
          type: "integer"
          description: "Days"
          format: "int32"
        risk:
          type: "string"
          description: "Risk Group"
        value:
          type: "number"
          description: "Value"
          format: "float"
        validity:
          type: "string"
          description: "Validity"
          format: "date"
        calculationType:
          type: "string"
          description: "Calculation Type"
        simpleInterestValue:
          type: "number"
          description: "Simple Interest"
          format: "float"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
    auctionSpecificationTaxFile:
      type: "object"
    auctionPagedModelTaxFile:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            tax-files:
              type: "array"
              items:
                $ref: "#/components/schemas/auctionTaxFile"
        _links:
          type: "array"
          items:
            $ref: "#/components/schemas/auctionLink"
        page:
          $ref: "#/components/schemas/auctionPageMetadata"
    spyrosMessage:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    spyrosSpecificationAuditingEvent:
      type: "object"
    spyrosPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          description: "Current Page Record Count"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    spyrosAuditingEventDetail:
      type: "object"
      properties:
        label:
          type: "string"
          description: "Label"
        value:
          type: "string"
          description: "Value"
    spyrosEntityModelAuditingEvent:
      type: "object"
      properties:
        createdAt:
          type: "string"
          description: "Creation Date"
          format: "date-time"
        user:
          type: "string"
          description: "User"
        userIp:
          type: "string"
          description: "User IP"
        traceId:
          type: "string"
          description: "Trace ID"
        type:
          type: "string"
          description: "Type"
        details:
          type: "array"
          description: "Details"
          items:
            $ref: "#/components/schemas/spyrosAuditingEventDetail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/spyrosLink"
    spyrosPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          description: "Current Page Record Count"
          format: "int64"
        totalElements:
          type: "integer"
          description: "Total Records"
          format: "int64"
        totalPages:
          type: "integer"
          description: "Total Number of Pages"
          format: "int64"
        number:
          type: "integer"
          description: "Current Page Number"
          format: "int64"
    spyrosPagedModelEntityModelAuditingEvent:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            events:
              type: "array"
              items:
                $ref: "#/components/schemas/spyrosEntityModelAuditingEvent"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
        page:
          $ref: "#/components/schemas/spyrosPageMetadata"
    spyrosEntityModelAuditingEventDetailResource:
      type: "object"
      properties:
        detail:
          type: "object"
          additionalProperties:
            type: "object"
          description: "Detail"
        _links:
          $ref: "#/components/schemas/spyrosLinks"
    spyrosLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    integrationV2Message:
      type: "object"
      properties:
        type:
          type: "string"
          description: "Type"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
          description: "Description"
        notifications:
          type: "array"
          description: "Notifications"
          items:
            type: "string"
    integrationV2Link:
      type: "object"
      properties:
        rel:
          type: "string"
          xml:
            attribute: true
        href:
          type: "string"
          xml:
            attribute: true
        hreflang:
          type: "string"
          xml:
            attribute: true
        media:
          type: "string"
          xml:
            attribute: true
        title:
          type: "string"
          xml:
            attribute: true
        type:
          type: "string"
          description: "Type"
          xml:
            attribute: true
        deprecation:
          type: "string"
          xml:
            attribute: true
    integrationV2PurchaseConfirmation:
      required:
      - "items"
      type: "object"
      properties:
        items:
          type: "array"
          writeOnly: true
          items:
            $ref: "#/components/schemas/integrationV2PurchaseConfirmationItem"
        links:
          type: "array"
          xml:
            name: "link"
            namespace: "http://www.w3.org/2005/Atom"
          items:
            $ref: "#/components/schemas/integrationV2Link"
    integrationV2PurchaseConfirmationItem:
      required:
      - "id"
      - "status"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Identificador."
        status:
          pattern: "APPROVED|REFUSED"
          type: "string"
          description: "Status"
        installment:
          type: "integer"
          description: "Installment"
          format: "int32"
    integrationV2Liquidation:
      required:
      - "items"
      type: "object"
      properties:
        items:
          maxItems: 100
          minItems: 1
          type: "array"
          writeOnly: true
          items:
            $ref: "#/components/schemas/integrationV2LiquidationItem"
        links:
          type: "array"
          xml:
            name: "link"
            namespace: "http://www.w3.org/2005/Atom"
          items:
            $ref: "#/components/schemas/integrationV2Link"
    integrationV2LiquidationItem:
      required:
      - "liquidationDate"
      - "liquidationValue"
      - "settlementType"
      - "supplierGovernmentId"
      type: "object"
      properties:
        externalId:
          type: "string"
          description: "External Identifier"
        invoiceNumber:
          type: "string"
          description: "Invoice Number"
        liquidationDate:
          type: "string"
          description: "Settlement Date"
          format: "date"
        liquidationValue:
          type: "number"
          description: "Settlement Value"
        supplierGovernmentId:
          type: "string"
          description: "Supplier Government ID"
        settlementType:
          pattern: "BILL|BANK_TRANSFER"
          type: "string"
          description: "Settlement Type"
        installment:
          type: "integer"
          description: "Installment"
          format: "int32"
    ssoMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
          - "change_password_required"
          - "new_device_used"
          - "user_not_confirmed"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    ssoBuyerRoleResource:
      required:
      - "role"
      type: "object"
      properties:
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE|WHOLESALE|USER_MANAGER"
          type: "string"
    ssoEntityModelUserCompany:
      type: "object"
      properties:
        role:
          type: "string"
          enum:
          - "ADMIN"
          - "EXECUTE"
          - "SELECTOR"
          - "VIEW"
          - "BACK_OFFICE"
          - "WHOLESALE"
          - "RETAIL"
          - "USER_MANAGER"
        status:
          type: "string"
          enum:
          - "APPROVAL"
          - "FRAUD_DETECTED"
          - "PRE_CHECK"
          - "ACTIVE"
          - "INACTIVE"
          - "FRAUD_CONFIRMED"
          - "BANK_ACCOUNT_CHANGED"
          - "BIOMETRIC_VERIFICATION"
          - "APPROVED"
        companyId:
          type: "string"
        governmentId:
          type: "string"
        name:
          type: "string"
        type:
          type: "string"
          enum:
          - "SPONSOR"
          - "SELLER"
          - "BUYER"
        adhesionTerm:
          type: "boolean"
        program:
          type: "string"
        product:
          type: "string"
          enum:
          - "SUPPLY_CHAIN"
          - "SALES_FINANCE"
          - "SPIKE"
          - "FINANCIAL_MANAGEMENT"
        username:
          type: "string"
        user:
          type: "string"
        email:
          type: "string"
        _links:
          $ref: "#/components/schemas/ssoLinks"
    ssoLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/ssoLink"
    ssoBuyerCompanyResource:
      required:
      - "email"
      - "role"
      type: "object"
      properties:
        email:
          type: "string"
        role:
          pattern: "ADMIN|EXECUTE|SELECTOR|VIEW|BACK_OFFICE|WHOLESALE|USER_MANAGER"
          type: "string"
    ssoSpecificationUserCompany:
      type: "object"
    ssoPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    ssoPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    ssoPagedModelEntityModelUserCompany:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            profiles:
              type: "array"
              items:
                $ref: "#/components/schemas/ssoEntityModelUserCompany"
        _links:
          $ref: "#/components/schemas/ssoLinks"
        page:
          $ref: "#/components/schemas/ssoPageMetadata"
    ssoLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    operationMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
          - "Adhesion_Term_Not_Signed"
          - "Order_Expired"
          - "Invoice_Date_Challenge"
          - "Invoice_Payment_Date_Challenge"
          - "Invoice_Payment_Value_Challenge"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    operationEntityModelMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
          - "Adhesion_Term_Not_Signed"
          - "Order_Expired"
          - "Invoice_Date_Challenge"
          - "Invoice_Payment_Date_Challenge"
          - "Invoice_Payment_Value_Challenge"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/operationLink"
    operationSpecificationOperationItem:
      type: "object"
    operationPageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    operationEntityModelPurchaseItemDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        receivableUuid:
          type: "string"
        externalId:
          type: "string"
        invoiceDate:
          type: "string"
          format: "date"
        invoiceNumber:
          type: "string"
        invoiceKey:
          type: "string"
        assetType:
          type: "string"
        installment:
          type: "integer"
          format: "int32"
        totalInstallment:
          type: "integer"
          format: "int32"
        paymentValue:
          type: "number"
        paymentDate:
          type: "string"
          format: "date"
        effectivePaymentDate:
          type: "string"
          format: "date"
        status:
          type: "string"
        tax:
          type: "number"
          format: "double"
        sellerPaymentValue:
          type: "number"
        sponsorTax:
          type: "number"
          format: "double"
        sponsorPaymentValue:
          type: "number"
        billLine:
          type: "string"
        billUrl:
          type: "string"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    operationPagedModelEntityModelPurchaseItemDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            purchase-items:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelPurchaseItemDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationSpecificationOperation:
      type: "object"
    operationBuyerSummaryDTO:
      type: "object"
      properties:
        averageTax:
          type: "number"
          format: "float"
        grossPaymentValue:
          type: "number"
        quantity:
          type: "integer"
          format: "int64"
        netPaymentValue:
          type: "number"
    operationEntityModelPurchaseDTO:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        status:
          type: "string"
        tax:
          type: "number"
          format: "float"
        days:
          type: "integer"
          format: "int32"
        paymentDate:
          type: "string"
          format: "date"
        grossPaymentValue:
          type: "number"
        netPaymentValue:
          type: "number"
        sponsorName:
          type: "string"
        sponsorGovernmentId:
          type: "string"
        sponsorExternalCode:
          type: "string"
        sponsorAddress:
          type: "string"
        sponsorAddressNumber:
          type: "string"
        sponsorAddressComplement:
          type: "string"
        sponsorNeighborhood:
          type: "string"
        sponsorCity:
          type: "string"
        sponsorState:
          type: "string"
        sponsorCountry:
          type: "string"
        sponsorZipCode:
          type: "string"
        sponsorBank:
          type: "string"
        sponsorAgency:
          type: "string"
        sponsorAccount:
          type: "string"
        sponsorAccountDigit:
          type: "string"
        sellerName:
          type: "string"
        sellerGovernmentId:
          type: "string"
        sellerAddress:
          type: "string"
        sellerAddressNumber:
          type: "string"
        sellerAddressComplement:
          type: "string"
        sellerNeighborhood:
          type: "string"
        sellerCity:
          type: "string"
        sellerState:
          type: "string"
        sellerCountry:
          type: "string"
        sellerZipCode:
          type: "string"
        sellerBank:
          type: "string"
        sellerAgency:
          type: "string"
        sellerAccount:
          type: "string"
        sellerAccountDigit:
          type: "string"
        approvedSummary:
          $ref: "#/components/schemas/operationBuyerSummaryDTO"
        unapprovedSummary:
          $ref: "#/components/schemas/operationBuyerSummaryDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
    operationPagedModelEntityModelPurchaseDTO:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            purchases:
              type: "array"
              items:
                $ref: "#/components/schemas/operationEntityModelPurchaseDTO"
        _links:
          $ref: "#/components/schemas/operationLinks"
        page:
          $ref: "#/components/schemas/operationPageMetadata"
    operationLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    reportMessage:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "Integration_Error"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    reportBuyerReportConfiguration:
      required:
      - "details"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportBuyerReportConfigurationDetail"
    reportBuyerReportConfigurationDetail:
      required:
      - "columnId"
      - "order"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        columnId:
          type: "string"
        order:
          type: "integer"
          format: "int32"
        description:
          type: "string"
    reportEntityModelBuyerReportConfiguration:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportBuyerReportConfigurationDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLinks:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/reportLink"
    reportReport:
      required:
      - "endDate"
      - "startDate"
      - "type"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        fileType:
          type: "string"
          enum:
          - "CSV"
          - "PDF"
        documentHash:
          type: "string"
    reportEntityModelReport:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        startDate:
          type: "string"
          format: "date"
        endDate:
          type: "string"
          format: "date"
        type:
          type: "string"
          enum:
          - "RECEIVABLE"
          - "PAYABLE"
          - "BUYERSELLER"
          - "PURCHASE"
          - "AUDIT"
        fileType:
          type: "string"
          enum:
          - "CSV"
          - "PDF"
        documentHash:
          type: "string"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportBuyerReportTemplateDetail:
      type: "object"
      properties:
        columnId:
          type: "string"
        description:
          type: "string"
    reportEntityModelBuyerReportTemplate:
      type: "object"
      properties:
        details:
          type: "array"
          items:
            $ref: "#/components/schemas/reportBuyerReportTemplateDetail"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportEntityModelProcess:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
        step:
          type: "integer"
          format: "int64"
        totalSteps:
          type: "integer"
          format: "int64"
        processed:
          type: "boolean"
        detail:
          type: "string"
        companyId:
          type: "integer"
          format: "int32"
        _links:
          $ref: "#/components/schemas/reportLinks"
    reportLink:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
    notificationV2Message:
      type: "object"
      properties:
        type:
          type: "string"
          enum:
          - "Invalid_Token"
          - "Mult_Status_Error"
          - "No_Content_Error"
          - "Conflict_Error"
          - "Parameter_Error"
          - "Bad_Request_Error"
          - "Business_Logic_Error"
          - "Resource_Not_Found"
          - "Internal_Architecture_Error"
          - "List_Not_Found"
          - "Method_Not_Allowed"
          - "Unsupported_Media_Type"
          - "Access_Denied"
          - "mfa_required"
          - "Integration_Error"
        description:
          type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    notificationV2BuyerWebHookConfigurationResource:
      required:
      - "notifications"
      - "token"
      - "url"
      type: "object"
      properties:
        url:
          type: "string"
        token:
          type: "string"
        tokenType:
          type: "string"
        authorizationHeader:
          type: "string"
        clientId:
          type: "string"
        clientSecret:
          type: "string"
        tokenUrl:
          type: "string"
        contentType:
          type: "string"
        certificate:
          type: "string"
        certificatePassword:
          type: "string"
        customParameters:
          type: "object"
          additionalProperties:
            type: "string"
        customHeaders:
          type: "object"
          additionalProperties:
            type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
    notificationV2EntityModelWebHookConfiguration:
      required:
      - "notifications"
      - "token"
      - "url"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        url:
          type: "string"
        token:
          type: "string"
        tokenType:
          type: "string"
        authorizationHeader:
          type: "string"
        clientId:
          type: "string"
        clientSecret:
          type: "string"
        tokenUrl:
          type: "string"
        contentType:
          type: "string"
        encryptedCertificate:
          type: "string"
        encryptedCertificatePassword:
          type: "string"
        customParameters:
          type: "object"
          additionalProperties:
            type: "string"
        customHeaders:
          type: "object"
          additionalProperties:
            type: "string"
        notifications:
          type: "array"
          items:
            type: "string"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
    notificationV2Links:
      type: "object"
      additionalProperties:
        $ref: "#/components/schemas/notificationV2Link"
    notificationV2WebHookRedeliveriesDTO:
      required:
      - "items"
      type: "object"
      properties:
        items:
          maxItems: 100
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/notificationV2WebHookRedeliveryDTO"
    notificationV2WebHookRedeliveryDTO:
      required:
      - "date"
      - "eventType"
      - "identification"
      type: "object"
      properties:
        identification:
          type: "string"
        eventType:
          type: "string"
        date:
          type: "string"
          format: "date"
    notificationV2Pageable:
      type: "object"
      properties:
        page:
          minimum: 0
          type: "integer"
          format: "int32"
        size:
          minimum: 1
          type: "integer"
          format: "int32"
        sort:
          type: "array"
          items:
            type: "string"
    notificationV2PageMetadata:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int64"
        totalElements:
          type: "integer"
          format: "int64"
        totalPages:
          type: "integer"
          format: "int64"
        number:
          type: "integer"
          format: "int64"
    notificationV2PagedModelEntityModelWebHookConfiguration:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            webhooks:
              type: "array"
              items:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookConfiguration"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
        page:
          $ref: "#/components/schemas/notificationV2PageMetadata"
    notificationV2Collation:
      type: "object"
    notificationV2Meta:
      type: "object"
      properties:
        flags:
          uniqueItems: true
          type: "array"
          items:
            type: "string"
            enum:
            - "NO_TIMEOUT"
            - "EXHAUST"
            - "SLAVE_OK"
            - "SECONDARY_READS"
            - "PARTIAL"
        cursorBatchSize:
          type: "integer"
          format: "int32"
        allowDiskUse:
          type: "boolean"
        comment:
          type: "string"
        maxTimeMsec:
          type: "integer"
          format: "int64"
        maxTime:
          type: "object"
          properties:
            seconds:
              type: "integer"
              format: "int64"
            zero:
              type: "boolean"
            nano:
              type: "integer"
              format: "int32"
            negative:
              type: "boolean"
            units:
              type: "array"
              items:
                type: "object"
                properties:
                  durationEstimated:
                    type: "boolean"
                  timeBased:
                    type: "boolean"
                  dateBased:
                    type: "boolean"
          writeOnly: true
    notificationV2Query:
      type: "object"
      properties:
        skip:
          type: "integer"
          format: "int64"
        limit:
          type: "integer"
          format: "int32"
        hint:
          type: "string"
        meta:
          $ref: "#/components/schemas/notificationV2Meta"
        collation:
          $ref: "#/components/schemas/notificationV2Collation"
        queryObject:
          type: "object"
          properties:
            empty:
              type: "boolean"
          additionalProperties:
            type: "object"
        fieldsObject:
          type: "object"
          properties:
            empty:
              type: "boolean"
          additionalProperties:
            type: "object"
        sortObject:
          type: "object"
          properties:
            empty:
              type: "boolean"
          additionalProperties:
            type: "object"
        sorted:
          type: "boolean"
    notificationV2EntityModelWebHookDelivery:
      required:
      - "eventType"
      - "reasonPhrase"
      - "requestHeaders"
      - "requestPayload"
      - "responseBody"
      - "responseHeaders"
      - "statusCode"
      - "url"
      - "webHookConfigurationId"
      - "webHookId"
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        webHookConfigurationId:
          type: "string"
        webHookId:
          type: "string"
        eventType:
          type: "string"
        url:
          type: "string"
        requestHeaders:
          type: "object"
          additionalProperties:
            type: "string"
        requestPayload:
          type: "object"
        responseHeaders:
          type: "object"
          additionalProperties:
            type: "string"
        responseBody:
          type: "string"
        statusCode:
          type: "integer"
          format: "int32"
        reasonPhrase:
          type: "string"
        attempts:
          type: "integer"
          format: "int32"
        delivered:
          type: "boolean"
        program:
          type: "string"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
    notificationV2PagedModelEntityModelWebHookDelivery:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            webhook-deliveries:
              type: "array"
              items:
                $ref: "#/components/schemas/notificationV2EntityModelWebHookDelivery"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
        page:
          $ref: "#/components/schemas/notificationV2PageMetadata"
    notificationV2EntityModelNotification:
      type: "object"
      properties:
        createdAt:
          type: "string"
          format: "date-time"
        createUserId:
          type: "string"
        createUserIp:
          type: "string"
        updatedAt:
          type: "string"
          format: "date-time"
        lastUserId:
          type: "string"
        lastUserIp:
          type: "string"
        type:
          type: "string"
        read:
          type: "boolean"
        uuid:
          type: "string"
        notification-items:
          type: "array"
          items:
            type: "string"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
    notificationV2PagedModelEntityModelNotification:
      type: "object"
      properties:
        _embedded:
          type: "object"
          properties:
            notifications:
              type: "array"
              items:
                $ref: "#/components/schemas/notificationV2EntityModelNotification"
        _links:
          $ref: "#/components/schemas/notificationV2Links"
        page:
          $ref: "#/components/schemas/notificationV2PageMetadata"
    notificationV2Link:
      type: "object"
      properties:
        href:
          type: "string"
        hreflang:
          type: "string"
        title:
          type: "string"
        type:
          type: "string"
        deprecation:
          type: "string"
        profile:
          type: "string"
        name:
          type: "string"
        templated:
          type: "boolean"
